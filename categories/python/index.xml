<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 玄冬Wong</title>
    <link>https://dawnarc.com/categories/python/</link>
    <description>Recent content in Python on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Feb 2022 20:30:28 +0800</lastBuildDate><atom:link href="https://dawnarc.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Python]Ordinary Libraries Collection</title>
      <link>https://dawnarc.com/2022/02/pythonordinary-libraries-collection/</link>
      <pubDate>Tue, 08 Feb 2022 20:30:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2022/02/pythonordinary-libraries-collection/</guid>
      <description>&lt;p&gt;keywords: Python, Framework, Ordinary Libraries Collection&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Python]Install packages</title>
      <link>https://dawnarc.com/2020/06/pythoninstall-packages/</link>
      <pubDate>Wed, 03 Jun 2020 02:54:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2020/06/pythoninstall-packages/</guid>
      <description>&lt;p&gt;keywords: Python, Install pip in Python 3&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Python]IO Stream Notes</title>
      <link>https://dawnarc.com/2019/12/pythonio-stream-notes/</link>
      <pubDate>Thu, 19 Dec 2019 20:24:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2019/12/pythonio-stream-notes/</guid>
      <description>&lt;p&gt;keywords: Python, IO Stream Notes&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Python]Common Syntax Collections</title>
      <link>https://dawnarc.com/2018/12/pythoncommon-syntax-collections/</link>
      <pubDate>Thu, 20 Dec 2018 21:07:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/12/pythoncommon-syntax-collections/</guid>
      <description>&lt;p&gt;keywords: Python Common Syntax&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Python]从相对路径导入(Importing from a relative path)</title>
      <link>https://dawnarc.com/2018/01/python%E4%BB%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%AF%BC%E5%85%A5importing-from-a-relative-path/</link>
      <pubDate>Wed, 31 Jan 2018 20:02:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/01/python%E4%BB%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%AF%BC%E5%85%A5importing-from-a-relative-path/</guid>
      <description>Case 1 假设python工程结构如下：
Proj/Client/Client.pyServer/Server.pyCommon/__init__.pyCommon.py要在Client.py中import Common目录。代码如下：
import sys, ossys.path.append(os.path.join(os.path.dirname(__file__), &#39;..&#39;, &#39;Common&#39;))import Common其中os.path.dirname(__file__)表示当前python脚本的所在目录。
参考：
Importing from a relative path in Python
https://stackoverflow.com/questions/7505988/importing-from-a-relative-path-in-python
Case 2 file structure:
main.py folder/ file.py In file.py I have a class imlpemented (Klasa), how to import file.py in main.py?
method 1:
from folder.file import Klasa method 2:
from folder import file k = file.Klasa() method 3:
import folder.</description>
    </item>
    
    <item>
      <title>[Python]Python3连接mysql（PyMysql）的环境安装配置</title>
      <link>https://dawnarc.com/2017/06/pythonpython3%E8%BF%9E%E6%8E%A5mysqlpymysql%E7%9A%84%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 12 Jun 2017 20:37:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2017/06/pythonpython3%E8%BF%9E%E6%8E%A5mysqlpymysql%E7%9A%84%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>安装Python3之后，下载PyMysql：
https://github.com/PyMySQL/PyMySQL/
解压进入根目录，执行命令：
python setup.py install然后运行PyMysql安装目录下的example.py测试MySQL数据库链接是否成功（记得修改example.py里面的mysql密码）
python example.py笑相遇，似觉琼枝玉树相倚，暖日明霞光烂。---周邦彦《拜星月慢》</description>
    </item>
    
  </channel>
</rss>
