<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms String on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/algorithms-string/</link>
    <description>Recent content in Algorithms String on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Sep 2017 20:22:28 +0800</lastBuildDate>
    
	<atom:link href="https://dawnarc.com/tags/algorithms-string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Algorithms]算法题：多个字母任意组合多个新字符串</title>
      <link>https://dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%A4%9A%E4%B8%AA%E5%AD%97%E6%AF%8D%E4%BB%BB%E6%84%8F%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 03 Sep 2017 20:22:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%A4%9A%E4%B8%AA%E5%AD%97%E6%AF%8D%E4%BB%BB%E6%84%8F%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>题目：
比如一串字符，string s = &amp;ldquo;abcd&amp;rdquo;，假设里面的每个字符都不重复，求出这些字符任意组合后，形成的所有的新字符串。忽略掉顺序，比如ac和ca是同一种。 例子：
abc的3个字符可以组合的情况为： a b c ab bc ac abc
代码：
#include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; int main(int argc, char* argv[]) { std::string s(&amp;quot;abcd&amp;quot;); std::vector&amp;lt;std::string&amp;gt; vec; for (size_t i = 0; i &amp;lt; s.length(); i++) { std::string s1(1, s.at(i)); vec.push_back(s1); for (size_t j = i + 1; j &amp;lt; s.length(); j++) { for (size_t k = 0; k &amp;lt; s.length() - j; k++) { std::string s2 = s.</description>
    </item>
    
    <item>
      <title>[Algorithms]算法题：字符串转换为整数并排序</title>
      <link>https://dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 03 Sep 2017 20:22:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>题目：
给定一组字符串，字符串中的字符都是数字，比如：&amp;rdquo;343&amp;rdquo;、&amp;rdquo;4521&amp;rdquo;、&amp;rdquo;3&amp;rdquo;，将这些字符串转换为整数后并升序排序。
代码：
#include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;math.h&amp;gt; int main(int argc, char* argv[]) { std::vector&amp;lt;std::string&amp;gt; StrArr; StrArr.push_back(std::string(&amp;quot;563435&amp;quot;)); StrArr.push_back(std::string(&amp;quot;234234&amp;quot;)); StrArr.push_back(std::string(&amp;quot;454&amp;quot;)); StrArr.push_back(std::string(&amp;quot;5765&amp;quot;)); StrArr.push_back(std::string(&amp;quot;12&amp;quot;)); StrArr.push_back(std::string(&amp;quot;6&amp;quot;)); //字符串转数字 std::vector&amp;lt;int&amp;gt; IntArr; for (std::string&amp;amp; str : StrArr) { size_t len = str.length(); int val = 0; for (size_t i = 0; i &amp;lt; len; i++) { char c = str.at(i); //判断是不是阿拉伯数字 if (c &amp;lt; 48 || c &amp;gt; 57) { continue; } int iv = c - 48; val += pow(10, (len - 1 - i)) * iv; } IntArr.</description>
    </item>
    
  </channel>
</rss>