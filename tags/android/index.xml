<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/android/</link>
    <description>Recent content in Android on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jul 2019 14:19:02 +0800</lastBuildDate>
    
	<atom:link href="https://dawnarc.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Android]How To Get Free Size of Internalexternal Memory</title>
      <link>https://dawnarc.com/2019/07/androidhow-to-get-free-size-of-internalexternal-memory/</link>
      <pubDate>Tue, 30 Jul 2019 14:19:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2019/07/androidhow-to-get-free-size-of-internalexternal-memory/</guid>
      <description>&lt;p&gt;Keywords: Android Memory Size&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Android NDK]Toolchains of LLVM and GCC</title>
      <link>https://dawnarc.com/2019/07/android-ndktoolchains-of-llvm-and-gcc/</link>
      <pubDate>Fri, 05 Jul 2019 18:03:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2019/07/android-ndktoolchains-of-llvm-and-gcc/</guid>
      <description>&lt;p&gt;Keywords: Android NDK Toolchains&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Android NDK]How to support Android 9.0 when building using NDK r12b</title>
      <link>https://dawnarc.com/2019/02/android-ndkhow-to-support-android-9.0-when-building-using-ndk-r12b/</link>
      <pubDate>Fri, 22 Feb 2019 17:34:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2019/02/android-ndkhow-to-support-android-9.0-when-building-using-ndk-r12b/</guid>
      <description>&lt;p&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Android NDK]protobuf-lite 3.5编译</title>
      <link>https://dawnarc.com/2018/04/android-ndkprotobuf-lite-3.5%E7%BC%96%E8%AF%91/</link>
      <pubDate>Thu, 19 Apr 2018 15:42:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/04/android-ndkprotobuf-lite-3.5%E7%BC%96%E8%AF%91/</guid>
      <description>protobuf源码NDK编译配置 假设工程结构如下：
protobuf-build|-jni|- Android.mk|- Application.mk|- google|-protobuf Android.mk LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) CC_LITE_SRC_FILES := \google/protobuf/arena.cc \google/protobuf/arenastring.cc \google/protobuf/extension_set.cc \google/protobuf/generated_message_table_driven_lite.cc \google/protobuf/generated_message_util.cc \google/protobuf/io/coded_stream.cc \google/protobuf/io/zero_copy_stream.cc \google/protobuf/io/zero_copy_stream_impl_lite.cc \google/protobuf/message_lite.cc \google/protobuf/repeated_field.cc \google/protobuf/stubs/atomicops_internals_x86_gcc.cc \google/protobuf/stubs/atomicops_internals_x86_msvc.cc \google/protobuf/stubs/bytestream.cc \google/protobuf/stubs/common.cc \google/protobuf/stubs/int128.cc \google/protobuf/stubs/io_win32.cc \google/protobuf/stubs/once.cc \google/protobuf/stubs/status.cc \google/protobuf/stubs/statusor.cc \google/protobuf/stubs/stringpiece.cc \google/protobuf/stubs/stringprintf.cc \google/protobuf/stubs/structurally_valid.cc \google/protobuf/stubs/strutil.cc \google/protobuf/stubs/time.cc \google/protobuf/wire_format_lite.</description>
    </item>
    
    <item>
      <title>[Android NDK]Link Library Which is Existed</title>
      <link>https://dawnarc.com/2018/04/android-ndklink-library-which-is-existed/</link>
      <pubDate>Wed, 18 Apr 2018 18:18:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/04/android-ndklink-library-which-is-existed/</guid>
      <description>Keywords: Android NDK,
Import headers of static libraries:
LOCAL_C_INCLUDES += ../include/ Import static libraries:
LOCAL_LDLIBS += ../lib/libMyBoostLib.a Android.mk：
LOCAL_PATH := $(call my-dir)include $(CLEAR_VARS)LOCAL_MODULE := helloJNILOCAL_SRC_FILES := mainActivity.cppLOCAL_C_INCLUDES := $(LOCAL_PATH)/inc/LOCAL_LDLIBS := -llog -L$(LOCAL_PATH)/inc/ -lMyLibraryinclude $(BUILD_SHARED_LIBRARY) Reference Include prebuilt static library
https://stackoverflow.com/questions/18983037/include-prebuilt-static-library
Using Prebuilt Libraries
https://developer.android.com/ndk/guides/prebuilts
 故兵无常势，水无常形。能因敌变化而取胜者，谓之神。故五行无常胜，四时无常位，日有短长，月有死生。---《孙子兵法·虚实篇》</description>
    </item>
    
    <item>
      <title>[Android NDK]protobuf-lite 2.6编译与protoc生成代码编译</title>
      <link>https://dawnarc.com/2018/02/android-ndkprotobuf-lite-2.6%E7%BC%96%E8%AF%91%E4%B8%8Eprotoc%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Sun, 11 Feb 2018 12:27:02 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/02/android-ndkprotobuf-lite-2.6%E7%BC%96%E8%AF%91%E4%B8%8Eprotoc%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/</guid>
      <description>Protobuf源码与protoc生成代码编译成一个静态库 工程结构：
MyProj|-jni|- Android.mk|- Application.mk|- google|- protobuf|- io|- stubs|- proto_gen_src 其中，google为protobuf的源码；proto_gen_src为protoc生成的代码，即：*.pb.cc。
Android.mk
LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) CC_LITE_SRC_FILES := \google/protobuf/stubs/common.cc	\google/protobuf/stubs/once.cc \google/protobuf/extension_set.cc \google/protobuf/generated_message_util.cc \google/protobuf/message_lite.cc \google/protobuf/repeated_field.cc \google/protobuf/wire_format_lite.cc \google/protobuf/io/coded_stream.cc \google/protobuf/io/zero_copy_stream.cc \google/protobuf/io/zero_copy_stream_impl_lite.cc # C++ full library # ======================================================= #include $(CLEAR_VARS) LOCAL_MODULE := MyProj.ndkLOCAL_MODULE_TAGS := optional LOCAL_CPP_EXTENSION := .cc #protobuf源码目录LOCAL_SRC_FILES += \$(CC_LITE_SRC_FILES)#protoc生成代码的目录MY_CPP_LIST := $(wildcard $(LOCAL_PATH)/proto_gen_src/*.</description>
    </item>
    
  </channel>
</rss>