<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMake on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/cmake/</link>
    <description>Recent content in CMake on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2019 00:05:28 +0800</lastBuildDate><atom:link href="https://dawnarc.com/tags/cmake/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Build]Specify the Configuration and Platform for MSBuild</title>
      <link>https://dawnarc.com/2019/09/buildspecify-the-configuration-and-platform-for-msbuild/</link>
      <pubDate>Fri, 27 Sep 2019 00:05:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2019/09/buildspecify-the-configuration-and-platform-for-msbuild/</guid>
      <description>&lt;p&gt;Keywords: MSBuild, Specify Platform, cmake&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Build]cmake常用配置项</title>
      <link>https://dawnarc.com/2018/04/buildcmake%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E9%A1%B9/</link>
      <pubDate>Tue, 10 Apr 2018 12:25:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/04/buildcmake%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E9%A1%B9/</guid>
      <description>常用设置 配置与构建(CMD) 3.15版本（2019年6月）之前，配置与构建比较麻烦，以windows为例，命令有以下三种方式：
第1种：nmake cmake -G &amp;#34;NMake Makefiles&amp;#34; -DCMAKE_BUILD_TYPE=Release path/to/source/dir nmake 第2种：VS版本加msbuild，以VS2015 x64为例： cmake -G &amp;#34;Visual Studio 14 Win64&amp;#34; path/to/source/dir msbuild Project.sln 第3种：architecture参数(x64或win32)加msbuild： cmake -A x64 path/to/source/dir msbuild Project.sln 3.15版本开始，构建命令无需区分平台（老版本想要无视平台需安装ninja），且默认x64：
cmake path/to/source/dir cmake --build . --target install --config Release 参考：How to use CMake to install
https://stackoverflow.com/a/48428846/1645289
设置编译输出路径 在CMakeList.txt中如下设置后，无论是编译可执行文件还是编译静态库，都会输出到指定目录下，而不再是默认的当前目录。
#静态库输出目录(lib, a)set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY &amp;quot;lib/&amp;quot;)#编译时动态库输出目录(dll + lib)set(CMAKE_LIBRARY_OUTPUT_DIRECTORY &amp;quot;lib/&amp;quot;)#动态库输出目录(dll, so)set(CMAKE_RUNTIME_OUTPUT_DIRECTORY &amp;quot;lib/&amp;quot;)#可执行文件输出目录set(EXECUTABLE_OUTPUT_PATH &amp;quot;bin/&amp;quot;)参考：
is CMake ignoring CMAKE_LIBRARY_OUTPUT_DIRECTORY?
https://stackoverflow.com/a/38450844/1645289</description>
    </item>
    
    <item>
      <title>[Build]nmake下一些错误的解决办法</title>
      <link>https://dawnarc.com/2017/12/buildnmake%E4%B8%8B%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Sat, 09 Dec 2017 15:32:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2017/12/buildnmake%E4%B8%8B%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>原文：
http://10305101ivy.blog.163.com/blog/static/584765892012227322607
最近编译工程用到了windows下nmake工具，遇到了很多的问题，在网上苦寻答案，终于得到解决。现在把遇到的问题及解决办法写下来，希望给大家一些帮助。
1.NMAKE:fatal error U1077.“cl.exe” return code 0xc0000135 产生原因：在安装visual studio的时候没有勾选注册环境变量导致的。
解决办法：在系统环境变量中加入visual studio的安装路径：vs安装路径\VC\Bin,以及vs安装路径\Common7\IDE
2.NMAKE:fatal error U1077. return code 0x2 产生原因：找不到代码文件中包含的头文件
解决办法：cmd下进入到vs安装路径\VC\Bin下，执行vcvars32,此时会执行vcvas32.bat自动为vs设置环境变量
3.NMAKE:fatal error U1077. return code 0x460 产生原因：你的工程中连接了一个lib文件，链接的时候却出现不能解析的外部符号。可能问题是你包含的lib是错的，或者有不兼容问题。我的问题就是后者，我的系统的32位的，但是链接了一个64位的lib.
解决办法：链接正确的lib
乱石穿空，惊涛拍岸，卷起千堆雪。江山如画，一时多少豪杰。----北宋·苏轼《念奴娇·赤壁怀古》</description>
    </item>
    
    <item>
      <title>[Build]cmake-gui使用</title>
      <link>https://dawnarc.com/2017/09/buildcmake-gui%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 06 Sep 2017 14:50:28 +0800</pubDate>
      
      <guid>https://dawnarc.com/2017/09/buildcmake-gui%E4%BD%BF%E7%94%A8/</guid>
      <description>要使用cmake-gui，请确保已经写好了CMakeLists.txt。 打开cmake-gui后，指定source目录和生成的bin目录。 再点击Configure，指定VS版本。然后就可以生成VS工程sln等文件了。 如果生成过程中有相关依赖库没有指定正确，输出窗口会给出提示，比如示例中有个glm库的没有指定，此时我们再重新指定下依赖库的位置。 配置后再点击Generate，直到没有错误信息提示。 CMAKE相关的配置说明 CMAKE_CONFIGURATION_TYPES
表示VS上的Solution Configurations（Debug/Release等）选项 CMAKE_INSTALL_PREFIX
表示编译后存放的目录，以方便FIND_XXX()方式来查找。
删除临时文件 如果要删除cache文件，点击：File -》 Delete Cache。 树德莫如滋，去疾莫如尽。----《左传》</description>
    </item>
    
  </channel>
</rss>
