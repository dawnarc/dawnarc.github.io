<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Particle on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/particle/</link>
    <description>Recent content in Particle on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Oct 2016 13:58:40 +0800</lastBuildDate>
    
	<atom:link href="https://dawnarc.com/tags/particle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[UE4]用C&#43;&#43;或蓝图来动态设置粒子系统的相关属性</title>
      <link>https://dawnarc.com/2016/10/ue4%E7%94%A8c-%E6%88%96%E8%93%9D%E5%9B%BE%E6%9D%A5%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Wed, 05 Oct 2016 13:58:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2016/10/ue4%E7%94%A8c-%E6%88%96%E8%93%9D%E5%9B%BE%E6%9D%A5%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</guid>
      <description>蓝图方式 1，我拿StartContent中官方提供的火焰特效来举例，在蓝图脚本中来修改火焰的颜色   2，打开粒子编辑界面，这是粒子发射器中设置好的颜色参数   3，修改：Color Over Lif模组 –》 Color Over Life参数 –》Distribution参数 –》 Distribution Vector Particle Parameter   4，为这个参数起一个当前粒子里面的唯一名字。当然你如果希望多个参数共享一个设置，那么参数也可以同名   5，因为这个特效中和颜色相关的发射器有两个，所以我们这两个发射器中的参数名字设置为同名：ParamFireColor   6，设置参数模式为 DPM Direct     7，然后将粒子拖入场景中进行编辑。当然你可以通过Spawn在运行时动态生成，但是这里为了方便直接场景中放一个静态的   8，添加一个Instance Parameters参数   9，设置参数名为之前定好的ParamFireColor，类型选择Vector Random   10，启动运行程序，然后我们在游戏运行时动态修改。先找到粒子对象   11，然后在属性面板中，编辑之前添加的参数ParamFireColor，这里我们先改为之前的默认数值     12，这时修改颜色，场景中的火焰也会即时生效了。这些修改的数值不会保存，因为这是即时数据。     补充内容：用蓝图动态生成并设置颜色方式，按下键盘E时生成火焰并将颜色设置为蓝色     因为这里没有写随机颜色的逻辑，所以看起来很单薄。
C++方式 C++方式也需要上面蓝图的前面步骤，从第7步开始，后面的步骤都不需要了。 具体代码如下：
UParticleSystemComponent* PSC = UGameplayStatics::SpawnEmitterAtLocation(GameMode-&amp;gt;GetWorld(), EmitterTemplate, Location, FRotator::ZeroRotator, true); PSC-&amp;gt;SetColorParameter(FName(TEXT(&amp;quot;ParamFireColor&amp;quot;)), FLinearColor::Red); FLinearColor OutColor; PSC-&amp;gt;GetColorParameter(FName(TEXT(&amp;quot;ParamFireColor &amp;quot;)), OutColor);  注意：要Get参数之前，必须先Set一次，否则无法Get。</description>
    </item>
    
  </channel>
</rss>