<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Initialize on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/initialize/</link>
    <description>Recent content in Initialize on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Sep 2016 16:48:40 +0800</lastBuildDate>
    
	<atom:link href="https://dawnarc.com/tags/initialize/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43;]指针数组以及数组初始化</title>
      <link>https://dawnarc.com/2016/09/c-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%BB%A5%E5%8F%8A%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Sat, 10 Sep 2016 16:48:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2016/09/c-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%BB%A5%E5%8F%8A%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>关键字：C++数组初始化
原文： http://www.cnblogs.com/mywebname/articles/2291540.html
定义：
int *pia = new int[10]; // array of 10 uninitialized ints  此 new 表达式分配了一个含有 10 个 int 型元素的数组，并返回指向该数组第一个元素的指针，此返回值初始化了指针 pia。 在自由存储区中创建的数组对象是没有名字的，只能通过其地址间接地访问堆中的对象。 注意：C++使用new和delete在堆（自由存储区）上分配和释放动态数组。
动态数组初始化： 1.元素只能初始化为元素类型的默认值，而不能像数组变量一样，用初始化列表为数组元素提供各不相同的初值。 2.对于内置数据类型元素的数组，必须使用()来显示指定程序执行初始化操作，否则程序不执行初始化操作：
int *pia = new int[10]; // 每个元素都没有初始化 int *pia2 = new int[10] (); // 每个元素初始化为0  3.类类型元素的数组，则无论是否使用（），都会自动调用其默认构造函数来初始化：
string *psa = new string[10]; // 每个元素调用默认构造函数初始化 string *psa = new string[10](); // 每个元素调用默认构造函数初始化  动态分配空数组： char *cp = new char[0];  之后，可以动态改变cp的维数。</description>
    </item>
    
  </channel>
</rss>