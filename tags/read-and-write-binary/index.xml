<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Read and Write Binary on 玄冬Wong</title>
    <link>https://dawnarc.com/tags/read-and-write-binary/</link>
    <description>Recent content in Read and Write Binary on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 May 2018 01:11:40 +0800</lastBuildDate>
    
	<atom:link href="https://dawnarc.com/tags/read-and-write-binary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43;]正确使用STL-MAP中Erase函数</title>
      <link>https://dawnarc.com/2018/05/c-%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8stl-map%E4%B8%ADerase%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 11 May 2018 01:11:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/05/c-%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8stl-map%E4%B8%ADerase%E5%87%BD%E6%95%B0/</guid>
      <description>原文：http://www.cnblogs.com/graphics/archive/2010/07/05/1771110.html
#include &amp;lt;iostream&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; using namespace std ; int main(void) { map&amp;lt;int, string&amp;gt; m ; m.insert(pair&amp;lt;int, string&amp;gt;(1, &amp;quot;abc&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(2, &amp;quot;def&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(3, &amp;quot;def&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(4, &amp;quot;ghi&amp;quot;)) ; map&amp;lt;int, string&amp;gt;::iterator itor ; // 错误的写法 for (itor = m.begin(); itor != m.end(); ++itor) { if (itor-&amp;gt;second == &amp;quot;def&amp;quot;) { m.erase(itor) ; // map是关联式容器，调用erase后，当前迭代器已经失效 } } // 正确的写法 for (itor = m.begin(); itor != m.end();) { if (itor-&amp;gt;second == &amp;quot;def&amp;quot;) { m.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]读写二进制文件和文本文件</title>
      <link>https://dawnarc.com/2018/04/c-%E8%AF%BB%E5%86%99%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/</link>
      <pubDate>Fri, 20 Apr 2018 17:45:40 +0800</pubDate>
      
      <guid>https://dawnarc.com/2018/04/c-%E8%AF%BB%E5%86%99%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/</guid>
      <description>ifstream,ofstream读写二进制文件 #include &amp;lt;iostream&amp;gt; #include &amp;lt;fstream&amp;gt; using namespace std; int main(int argc, char** argv) { int a[5] = {1,2,3,4,5}; int b[5]; ofstream ouF; ouF.open(&amp;quot;./me.dat&amp;quot;, std::ofstream::binary); ouF.write(reinterpret_cast&amp;lt;const char*&amp;gt;(a), sizeof(int)*5); ouF.close(); ifstream inF; inF.open(&amp;quot;./me.dat&amp;quot;, std::ifstream::binary); inF.read(reinterpret_cast&amp;lt;char*&amp;gt;(b), sizeof(int)*5); inF.close(); for (int i = 0; i &amp;lt; 5; i++) { cout &amp;lt;&amp;lt; b[i] &amp;lt;&amp;lt; endl; } return 0; }  参考自：https://blog.csdn.net/bendanban/article/details/30039193
C模式读写二进制文件 //采用C模式写二进制文件 void DataWrite_CMode() { //准备数据 double pos[200]; for(int i = 0; i &amp;lt; 200; i ++ ) pos[i] = i ; //写出数据 FILE *fid; fid = fopen(&amp;quot;binary.</description>
    </item>
    
  </channel>
</rss>