<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>玄冬Wong</title>
    <link>http://www.dawnarc.com/</link>
    <description>Recent content on 玄冬Wong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jul 2018 14:19:40 +0800</lastBuildDate>
    
	<atom:link href="http://www.dawnarc.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43;]C&#43;&#43;11 shared_ptr 与 weak_ptr 区别</title>
      <link>http://www.dawnarc.com/2018/07/c--c--11-shared_ptr-%E4%B8%8E-weak_ptr-%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 06 Jul 2018 14:19:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/07/c--c--11-shared_ptr-%E4%B8%8E-weak_ptr-%E5%8C%BA%E5%88%AB/</guid>
      <description>shared_ptr 语法：
#include &amp;lt;memory&amp;gt; shared_ptr&amp;lt;A&amp;gt; x(new A);  shared_ptr 相当于 对象引用计数器。每当对 shared_ptr 赋值操作一次，则其引用对象的计数+1。当某对象的引用计数为0时，则该对象自动销毁。
weak_ptr 语法：
#include &amp;lt;memory&amp;gt; weak_ptr&amp;lt;A&amp;gt; x(new A);  weak_ptr 典型应用是缓存：例如我们在缓存中存放了一个 raw pointer 来指向某个对象，如果这个对象在其他地方被销毁了，那么缓存中的这个 raw pointer 指向的对象不存在。如果我们希望某个对象在其他地方被销毁时，缓存中指向该对象的指针也马上被置为 null，那么就可以使用 weak_ptr。
参考自：
shared_ptr and weak_ptr differences
https://stackoverflow.com/questions/4984381/shared-ptr-and-weak-ptr-differences
When is std::weak_ptr useful?
https://stackoverflow.com/questions/12030650/when-is-stdweak-ptr-useful</description>
    </item>
    
    <item>
      <title>[UE4] TSharedPtr 与 TWeakObjectPtr 区别</title>
      <link>http://www.dawnarc.com/2018/07/ue4-tsharedptr-%E4%B8%8E-tweakobjectptr-%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Wed, 04 Jul 2018 16:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/07/ue4-tsharedptr-%E4%B8%8E-tweakobjectptr-%E5%8C%BA%E5%88%AB/</guid>
      <description>UE4 的 TSharedPtr、TWeakObjectPtr 模仿自 C++11 的 shared_ptr 、 weak_ptr 。
TSharedPtr TSharedPtr 相当于对象的引用计数器。每当对 TSharedPtr 赋值一次，该 TSharedPtr 引用对象计数加一，当引用计数为0时，则该对象被自动销毁。TSharedPtr 可以防止对象被垃圾回收，等价于 UPROPERTY() （前提是 TSharedPtr 成员变量所属的对象没有被销毁，如果被销毁，则 TSharedPtr 成员变量的计数不再有效）。
用法：
 TSharedPtr&amp;lt;MyUObject&amp;gt; ObjPtr = MakeShareable(NewObject&amp;lt;MyUObject&amp;gt;());  如果两个 TSharedPtr 相互赋值，则会导致对象永不释放，导致内存泄漏。
 TWeakObjectPtr TWeakObjectPtr 保持的对象不能防止被垃圾回收。若引用的对象在其他地方被销毁，则 TWeakObjectPtr 内部的指针自动将被置为NULL，TWeakObjectPtr::IsValid()会返回false。TSharedPtr 则没有这个作用。
用法：
 TWeakObjectPtr&amp;lt;MyUObject&amp;gt; ObjPtr = NewObject&amp;lt;MyUObject&amp;gt;();  参考资料：
There&amp;rsquo;s a Huge Difference, One Will Always Crash
https://answers.unrealengine.com/questions/48818/whats-the-difference-between-using-tweakobjectptr.html
what is a &amp;ldquo;weak object pointer&amp;rdquo;?
https://answers.unrealengine.com/questions/201186/what-is-a-weak-object-pointer.html</description>
    </item>
    
    <item>
      <title>[UE4]error C3668: &#39;UTextureCube::UpdateResourceW&#39;</title>
      <link>http://www.dawnarc.com/2018/07/ue4error-c3668-utexturecubeupdateresourcew/</link>
      <pubDate>Mon, 02 Jul 2018 20:04:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/07/ue4error-c3668-utexturecubeupdateresourcew/</guid>
      <description>4.19 编译错误：
2&amp;gt;F:\EpicGames\UE_4.19\Engine\Source\Runtime\Engine\Classes\Engine/TextureCube.h(69): error C3668: &#39;UTextureCube::UpdateResourceW&#39;: method with override specifier &#39;override&#39; did not override any base class methods 2&amp;gt;F:\EpicGames\UE_4.19\Engine\Source\Runtime\Engine\Classes\Engine/CanvasRenderTarget2D.h(43): error C3668: &#39;UCanvasRenderTarget2D::UpdateResourceW&#39;: method with override specifier &#39;override&#39; did not override any base class methods  4.18 编译错误：
2&amp;gt;f:\epicgames\ue_4.18\engine\source\runtime\core\public\HAL/ThreadSafeCounter64.h(67): error C2039: &#39;_InterlockedIncrement&#39;: is not a member of &#39;FWindowsPlatformAtomics&#39; 2&amp;gt;F:\EpicGames\UE_4.18\Engine\Source\Runtime\Core\Public\Windows/WindowsPlatformAtomics.h(14): note: see declaration of &#39;FWindowsPlatformAtomics&#39; 2&amp;gt;f:\epicgames\ue_4.18\engine\source\runtime\core\public\HAL/ThreadSafeCounter64.h(67): error C2665: &#39;_InterlockedIncrement&#39;: none of the 4 overloads could convert all the argument types 2&amp;gt;C:\Program Files (x86)\Windows Kits\8.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]non-static member function as callback function and achieve inheritance</title>
      <link>http://www.dawnarc.com/2018/06/c--non-static-member-function-as-callback-function-and-achieve-inheritance/</link>
      <pubDate>Sat, 30 Jun 2018 17:19:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/c--non-static-member-function-as-callback-function-and-achieve-inheritance/</guid>
      <description>keywords：C++ 非静态成员函数作为回调函数并实现继承多态
Base.hpp
#pragma once class Base { public: virtual void TestFun1(int Param) {} virtual void TestFun2(int Param) {} };  Child.hpp
#pragma once #include &amp;lt;iostream&amp;gt; #include &amp;quot;Base.hpp&amp;quot; class Child : public Base { public: void TestFun1(int Param) override { printf(&amp;quot;Fun1 : %d\n&amp;quot;, Param); } void TestFun2(int Param) override { printf(&amp;quot;Fun2 : %d\n&amp;quot;, Param); } };  EventManager.h
// Fill out your copyright notice in the Description page of Project Settings.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]How to erase an element from std vector by index</title>
      <link>http://www.dawnarc.com/2018/06/c--how-to-erase-an-element-from-std-vector-by-index/</link>
      <pubDate>Fri, 29 Jun 2018 21:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/c--how-to-erase-an-element-from-std-vector-by-index/</guid>
      <description>keywords：C++ 用索引删除 std::vector 中的数组元素
To delete a single element, you could do:
std::vector&amp;lt;int&amp;gt; vec; vec.push_back(6); vec.push_back(-17); vec.push_back(12); // Deletes the second element (vec[1]) vec.erase(vec.begin() + 1);  Or, to delete more than one element at once:
// Deletes the second through third elements (vec[1], vec[2]) vec.erase(vec.begin() + 1, vec.begin() + 3);  参考自：How do I erase an element from std::vector&amp;lt;&amp;gt; by index?
https://stackoverflow.com/questions/875103/how-do-i-erase-an-element-from-stdvector-by-index
无论精神多么独立的人，感情却总是在寻找一种依附，寻找一种归宿。---路遥《平凡的世界》</description>
    </item>
    
    <item>
      <title>[VersionControl]git Reset Type</title>
      <link>http://www.dawnarc.com/2018/06/versioncontrolgit-reset-type/</link>
      <pubDate>Thu, 28 Jun 2018 18:38:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/versioncontrolgit-reset-type/</guid>
      <description>概述 Reset Type有三种类型：Soft、Mixed、Hard。
理解Reset Type之前，先解释下以下术语：
 HEAD 这是当前分支版本顶端的别名，也就是在当前分支你最近的一个提交 Index Index也被称为staging area，是指一整套即将被下一个提交的文件集合。他也是将成为HEAD的父亲的那个commit Working Directory 代表你正在工作的那个文件集，又称作Working Tree。  三个Reset级别的意思分别是：
 Soft # 还原 HEAD Mixed # 还原 HEAD、Index # 默认参数 Hard # 还原 HEAD、Index、Working Directory  应用 如果本地有commit，但是没有push，此时想把这个commit 回退掉，则：右键需要回退的SHA-1 -》 Reset &amp;ldquo;master&amp;rdquo; to this。   然后和弹出菜单：   选择合适的Reset Type，点击OK。
注意事项：
根据需要选择Reset Type：
 若本地无修改，那么就选择 Soft; 若本地有修改未commit，那么就选择 Mixed; 若本地有修改且已commit，那么就选择 Hard;  参考自：git reset soft,hard,mixed之区别深解
https://www.cnblogs.com/kidsitcn/p/4513297.html
生命的价值不在于时间的长短，而在于你如何利用它。</description>
    </item>
    
    <item>
      <title>[VersionControl]ORIG_HEAD, FETCH_HEAD, MERGE_HEAD区别</title>
      <link>http://www.dawnarc.com/2018/06/versioncontrolorig_head-fetch_head-merge_head%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 28 Jun 2018 17:08:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/versioncontrolorig_head-fetch_head-merge_head%E5%8C%BA%E5%88%AB/</guid>
      <description>区别：
 HEAD: The current ref that you’re looking at. In most cases it’s probably refs/heads/master
 FETCH_HEAD: The SHAs of branch/remote heads that were updated during the last git fetch
 ORIG_HEAD: When doing a merge, this is the SHA of the branch you’re merging into.
 MERGE_HEAD: When doing a merge, this is the SHA of the branch you’re merging from.
 CHERRY_PICK_HEAD: When doing a cherry-pick, this is the SHA of the commit which you are cherry-picking.</description>
    </item>
    
    <item>
      <title>[Shading]Flat、Gouraud、Phong Shading的差別</title>
      <link>http://www.dawnarc.com/2018/06/shadingflatgouraudphong-shading%E7%9A%84%E5%B7%AE%E5%88%A5/</link>
      <pubDate>Tue, 26 Jun 2018 15:54:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/shadingflatgouraudphong-shading%E7%9A%84%E5%B7%AE%E5%88%A5/</guid>
      <description>keywords：Comparison flat, Gouraud, Phong shading
原文：
https://cg2010studio.com/2011/11/01/flat%E3%80%81gouraud%E3%80%81phong-shading%E7%9A%84%E5%B7%AE%E5%88%A5-comparison-flat-gouraud-phong-shading/
现今多边形的著色方法基本的有这三种：flat、Gouraud、Phong Shading，它们之间有何差别呢？喜欢玩游戏的人一定要知道Gouraud Shading，这是PC最常使用的著色法，因为效能好、效果还不错。而近年来，随着GPU快速的发展，Phong Shading逐渐应用在更真实的著色上。
从一张图可以看出他们的各自的特色：（a: Flat→b: Gouraud→c: Phong）
  从古早到现代：Flat→Gouraud→Phong Shading。
从简单到复杂：Flat→Gouraud→Phong Shading。
观察三者所呈现的效果，可以归纳出下列结论：
 平面着色：恒定的表面着色 Gouraud着色：颜色插值着色 Phong着色：顶点法线插值着色  用简单的中文来解释原理：
 flat shading：三角形的顶点没有法向量，三角形整个面才有法向量，打光时整个三角形只呈现一种颜色。 Gouraud shading：三角形的顶点都有各自的法向量，打光时三个顶点有各自的颜色，接着做双线性内插（bilinear interpolation）来求得颜色，使整个三角形有渐层的颜色变化。 Phong shading：三角形的顶点都有各自的法向量，先对三角形整个面作法向量的双线性内插，接着打光来求整个三角形的颜色。  然后我们来分析各自的复杂度：
假设三角形面积为 A 。三角形个数为 N 。而且我们知道打一次光需要6次乘法和2次加法和1次查表的运算，此设定为 L 。双线性内插设定为 B 。
 flat shading的复杂度：N * L Gouraud shading 的复杂度：N * (3 * L + b * A) Phong shading的复杂度：(B + L) * N * A  数学好的人很容易计算出复杂度：Flat &amp;lt; Gouraud &amp;lt; Phong Shading。这里也因此说明了为何早期电脑都只支援Gouraud shading，就算已经知道Phong shading的效果比Gouraud shading好，但还是选择效能好而效果不错的Gouraud shading！如今GPU发展迅速，Phong Shading的效能已得到提升。   stack overflow答案 https://computergraphics.</description>
    </item>
    
    <item>
      <title>[OpenGL]Rendering Pipeline(渲染管线)流程概述</title>
      <link>http://www.dawnarc.com/2018/06/openglrendering-pipeline%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 24 Jun 2018 20:58:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/openglrendering-pipeline%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/</guid>
      <description>Pipeline    (The blue boxes are programmable shader stages.)
The OpenGL rendering pipeline works in the following order:
 Prepare vertex array data, and then render it Vertex Processing:  Each vertex is acted upon by a Vertex Shader. Each vertex in the stream is processed in turn into an output vertex. Optional primitive tessellation stages. Optional Geometry Shader primitive processing. The output is a sequence of primitives.</description>
    </item>
    
    <item>
      <title>[Dlang]C&#43;&#43;相对D的优点</title>
      <link>http://www.dawnarc.com/2018/06/dlangc--%E7%9B%B8%E5%AF%B9d%E7%9A%84%E4%BC%98%E7%82%B9/</link>
      <pubDate>Sat, 23 Jun 2018 17:58:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/dlangc--%E7%9B%B8%E5%AF%B9d%E7%9A%84%E4%BC%98%E7%82%B9/</guid>
      <description>原文：What does C++ do better than D?
https://softwareengineering.stackexchange.com/questions/97207/what-does-c-do-better-than-d
Most of the things C++ &amp;ldquo;does&amp;rdquo; better than D are meta things:
C++ has better compilers, better tools, more mature libraries, more bindings, more experts, more tutorials etc. Basically it has more and better of all the external things that you would expect from a more mature language. This is inarguable.
As for the language itself, there are a few things that C++ does better than D in my opinion.</description>
    </item>
    
    <item>
      <title>[UE4]UFunction-ProcessEvent返回值与输出参数获取</title>
      <link>http://www.dawnarc.com/2018/06/ue4ufunction-processevent%E8%BF%94%E5%9B%9E%E5%80%BC%E4%B8%8E%E8%BE%93%E5%87%BA%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96/</link>
      <pubDate>Fri, 22 Jun 2018 12:23:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/ue4ufunction-processevent%E8%BF%94%E5%9B%9E%E5%80%BC%E4%B8%8E%E8%BE%93%E5%87%BA%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96/</guid>
      <description>调用UFunction 执行UFuncion，使用 ProcessEvent ：
UFunction* Fun = Actor-&amp;gt;FindFunction(TEXT(&amp;quot;TestFun&amp;quot;)); if(Fun) { Actor-&amp;gt;ProcessEvent(Fun, Buffer); }  查询UFunction信息 获取返回值：
UFunction* Fun = Actor-&amp;gt;FindFunction(TEXT(&amp;quot;TestFun&amp;quot;)); if(Fun) { FFrame frame = FFrame(Actor, Fun, Buffer, NULL, Fun-&amp;gt;Children); uint8* ReturnValueAdress = Buffer + Fun-&amp;gt;ReturnValueOffset; int* intp = (int*)ReturnValueAdress; //hardcoded exemple for a int return Fun-&amp;gt;Invoke(Actor, frame, intp); }  获取输出参数：
if(UFunction* Fun = Actor-&amp;gt;FindFunction(TEXT(&amp;quot;TestFun&amp;quot;))) { if(uint8* Buffer = (uint8*)FMemory_Alloca(Fun-&amp;gt;ParmsSize)) { for (TFieldIterator&amp;lt;UProperty&amp;gt; PropIt(Fun, EFieldIteratorFlags::ExcludeSuper); PropIt; ++PropIt) { UProperty* Property = *PropIt; bool isOut = Property-&amp;gt;HasAnyPropertyFlags(CPF_OutParm); if (!</description>
    </item>
    
    <item>
      <title>hugo-集成MathJax</title>
      <link>http://www.dawnarc.com/2018/06/hugo-%E9%9B%86%E6%88%90mathjax/</link>
      <pubDate>Fri, 22 Jun 2018 00:51:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/hugo-%E9%9B%86%E6%88%90mathjax/</guid>
      <description>keywords：hugo、MathJax、公式、数学表达式
步骤 1，在theme\layouts\partials\目录下新建一个文件，命名为 mathjax_support.html，内容为：
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; async src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML&amp;quot;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;,&#39;code&#39;], TeX: { equationNumbers: { autoNumber: &amp;quot;AMS&amp;quot; }, extensions: [&amp;quot;AMSmath.js&amp;quot;, &amp;quot;AMSsymbols.js&amp;quot;] } } }); &amp;lt;/script&amp;gt;  2，在header.html的&amp;lt;/header&amp;gt;之前或者footer.html的&amp;lt;/footer&amp;gt;之前添加：
{{ if .Params.mathjax}}{{ partial &amp;quot;mathjax_support.html&amp;quot; . }}{{ end }}  3，在MD文件的头部追加mathjax : ture：
--- title : &amp;quot;hugo-集成MathJax&amp;quot; date : &amp;quot;2018-06-22T00:51:40+08:00&amp;quot; mathjax : ture ---  如果是新语法，则追加mathjax= [&amp;quot;ture&amp;quot;]：</description>
    </item>
    
    <item>
      <title>[OpenGL]GLSL Cookbook源码编译步骤流程(2018.06新版)</title>
      <link>http://www.dawnarc.com/2018/06/openglglsl-cookbook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B2018.06%E6%96%B0%E7%89%88/</link>
      <pubDate>Mon, 18 Jun 2018 23:47:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/openglglsl-cookbook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B2018.06%E6%96%B0%E7%89%88/</guid>
      <description>去年写过一篇文章，该文章与github上的最新代码已不再有效（主要是glm和glfw相关的CMake配置发生变动）：
http://www.dawnarc.com/2017/09/openglglsl-cookbook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B/
当前这篇文章针对github的glslcookbook最新代码，重新梳理一次配置流程，保证最新代码能编译工程并跑起来。步骤如下：
1，下载glm源码，并用cmake-gui生成VS工程文件：
https://github.com/g-truc/glm/releases/download/0.9.9.0/glm-0.9.9.0.zip
假设
cmake-gui的source code设置为：
D:/sdk/glm-0.9.9.0
cmake-gui的build binaries设置为：
D:/sdk/glm-0.9.9.0/bin
Configure过程中，会有警告，可以无视，直接Generate：
GLM is a header only library, no need to build it. Set the option GLM_TEST_ENABLE with ON to build and run the test bench  生成完以后，不需要打开VS编译，后面直接使用相关文件即可。
2，下载glfw源码，并用cmake-gui生成VS工程文件。 https://github.com/glfw/glfw/releases/download/3.2.1/glfw-3.2.1.zip
假设
cmake-gui的source code设置为：
D:/sdk/glfw-3.2.1
cmake-gui的build binaries设置为：
D:/sdk/glfw-3.2.1/bin
Configure过程中，会有红色警告，可以无视，直接Generate：
CMake Deprecation Warning at CMakeLists.txt:10 (cmake_policy): The OLD behavior for policy CMP0042 will be removed from a future version of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all policies are deprecated and that a policy should be set to OLD only under specific short-term circumstances.</description>
    </item>
    
    <item>
      <title>[git]远程操作：fetch、push、stash</title>
      <link>http://www.dawnarc.com/2018/06/git%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9Cfetchpushstash/</link>
      <pubDate>Fri, 15 Jun 2018 19:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/git%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9Cfetchpushstash/</guid>
      <description>相关参考：
https://www.jianshu.com/p/e78b28081a44
https://stackoverflow.com/questions/9237348/what-does-fetch-head-in-git-mean
https://ruby-china.org/topics/4768
git clone git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。在clone完成之后，Git 会自动为你将此远程仓库命名为origin（origin只相当于一个别名，运行git remote –v或者查看.git/config可以看到origin的含义），并下载其中所有的数据，建立一个指向它的master 分支的指针，我们用(远程仓库名)/(分支名) 这样的形式表示远程分支，所以origin/master指向的是一个remote branch（从那个branch我们clone数据到本地），但你无法在本地更改其数据。同时，Git 会建立一个属于你自己的本地master 分支，它指向的是你刚刚从remote server传到你本地的副本。随着你不断的改动文件，git add, git commit，master的指向会自动移动，你也可以通过merge（fast forward）来移动master的指向。
git clone + 远程仓库项目网址  克隆远程仓库项目到本地仓库，也就是俗称的拉代码，本地仓库生成的项目与远程仓库的项目结构一致。git clone + 远程仓库项目网址 + 本地仓库项目目录：克隆远程仓库项目到本地仓库，本地仓库生成的项目放在第二个参数【本地仓库项目目录】中
git fetch 真正理解 git fetch, git pull，要讲清楚git fetch，git pull,必须要附加讲清楚git remote，git merge 、远程repo， branch 、 commit-id 以及 FETCH_HEAD。
 git remote
首先， git是一个分布式的结构，这意味着本地和远程是一个相对的名称。
本地的repo仓库要与远程的repo配合完成版本对应必须要有 git remote子命令，通过git remote add来添加当前本地长度的远程repo， 有了这个动作本地的repo就知道了当遇到git push 的时候应该往哪里提交代码。
 git branch
其次，git天生就是为了多版本分支管理而创造的，因此分支一说，不得不提， 分支就相当于是为了单独记录软件的某一个发布版本而存在的，既然git是分布式的，便有了本地分支和远程分支一说，git branch 可以查看本地分支， git branch -r 可以用来查看远程分支。 本地分支和远程分支在git push 的时候可以随意指定，交错对应，只要不出现版本从图即可。</description>
    </item>
    
    <item>
      <title>[OpenGL]常见编译错误</title>
      <link>http://www.dawnarc.com/2018/06/opengl%E5%B8%B8%E8%A7%81%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</link>
      <pubDate>Mon, 11 Jun 2018 00:25:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/opengl%E5%B8%B8%E8%A7%81%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</guid>
      <description>错误1 error C2027: use of undefined type &#39;glm::tvec4&amp;lt;float,0&amp;gt;&#39;  原因：
只包含了头文件：&amp;lt;glm/detail/type_vec.hpp&amp;gt;
解决办法：
不需要包含&amp;lt;glm/detail/type_vec.hpp&amp;gt;，只需要包含&amp;lt;glm/glm.hpp&amp;gt;。
就投机钻营来说，世故的价值永远是无可比拟的。---《死魂灵》</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]How to add constructors or destructors to an unnamed class(为匿名类添加构造函数与析构函数)</title>
      <link>http://www.dawnarc.com/2018/06/c--how-to-add-constructors-or-destructors-to-an-unnamed-class%E4%B8%BA%E5%8C%BF%E5%90%8D%E7%B1%BB%E6%B7%BB%E5%8A%A0%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%8E%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 06 Jun 2018 17:44:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/c--how-to-add-constructors-or-destructors-to-an-unnamed-class%E4%B8%BA%E5%8C%BF%E5%90%8D%E7%B1%BB%E6%B7%BB%E5%8A%A0%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%8E%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/</guid>
      <description>keywords：匿名类，匿名结构体、构造函数、析构函数、Lambda
为匿名类添加构造函数与析构函数，有两种方式：
 C++98中在匿名类内部加一个命名类 C++11 Lambda语法  C++98 C++98中，可以在匿名类内部放一个命名类(named class )，然后再为命名类添加构造和析构函数，当匿名类构造或析构时，就会去调用命名类的构造函数和析构函数。
#include &amp;lt;iostream&amp;gt; #include &amp;lt;cmath&amp;gt; int main() { struct { struct S { double a; int b; S() : a(sqrt(4)), b(42) { std::cout &amp;lt;&amp;lt; &amp;quot;constructed&amp;quot; &amp;lt;&amp;lt; std::endl; } ~S() { std::cout &amp;lt;&amp;lt; &amp;quot;destructed&amp;quot; &amp;lt;&amp;lt; std::endl; } } s; } instance1, instance2; std::cout &amp;lt;&amp;lt; &amp;quot;body&amp;quot; &amp;lt;&amp;lt; std::endl; }  C++11 Lambda #include &amp;lt;iostream&amp;gt; #include &amp;lt;cmath&amp;gt; int main() { struct { double a { sqrt(4) }; int b { []{ std::cout &amp;lt;&amp;lt; &amp;quot;constructed&amp;quot; &amp;lt;&amp;lt; std::endl; return 42; }() }; } instance1, instance2; }  参考 How to add constructors/destructors to an unnamed class?</description>
    </item>
    
    <item>
      <title>[OpenGL]GLM常用函数解释说明</title>
      <link>http://www.dawnarc.com/2018/06/openglglm%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E9%87%8A%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 03 Jun 2018 22:57:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/openglglm%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E8%A7%A3%E9%87%8A%E8%AF%B4%E6%98%8E/</guid>
      <description>GLM默认使用右手坐标系，如果要改成默认左手坐标系，使用：
GLM_FORCE_LEFT_HANDED  &amp;lt;glm/trigonometric.hpp&amp;gt; GLM_FUNC_DECL GLM_CONSTEXPR vec&amp;lt; L, T, Q &amp;gt; radians (vec&amp;lt; L, T, Q &amp;gt; const &amp;amp;degrees)  将角度转化为弧度。
&amp;lt;glm/gtx/transform.hpp&amp;gt; GLM_FUNC_DECL mat&amp;lt; 4, 4, T, Q &amp;gt; rotate (T angle, vec&amp;lt; 3, T, Q &amp;gt; const &amp;amp;v)  使用一个用弧度(radians)表示的角度(degrees)，以及一个用3个标量(scalar)表示的坐标(axis)，来构建一个4X4的旋转矩阵(rotate matrix)。
&amp;lt;glm/gtc/matrix_transform.hpp&amp;gt; GLM_FUNC_DECL mat&amp;lt;4, 4, T, Q&amp;gt; lookAt (vec&amp;lt;3, T, Q&amp;gt; const &amp;amp;eye, vec&amp;lt;3, T, Q&amp;gt; const &amp;amp;center, vec&amp;lt;3, T, Q&amp;gt; const &amp;amp;up)  基于默认的偏手坐标系来构建一个给定视图矩阵(view matrix)的视角(look)
GLM_FUNC_DECL mat&amp;lt;4, 4, T, defaultp&amp;gt; perspective (T fovy, T aspect, T near, T far)  为一个对称透视图截锥(symmetric perspective-view frustum)创建矩阵，基于默认的偏手坐标系和默认的近剪裁面距离、远剪裁面距离</description>
    </item>
    
    <item>
      <title>【Shading】ADS光照模型实例(OpenGL实现)</title>
      <link>http://www.dawnarc.com/2018/06/shadingads%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B%E5%AE%9E%E4%BE%8Bopengl%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 03 Jun 2018 22:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/06/shadingads%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B%E5%AE%9E%E4%BE%8Bopengl%E5%AE%9E%E7%8E%B0/</guid>
      <description>keywords：ambient diffuse specular、Phong Shading、Phong reflection model
公式概述 ADS光照模型又称为“冯氏反射模型”(Phong reflection model)，为什么叫冯氏：
裴祥风（Bùi Tường Phong音译, 1942年—1975年），美国电脑CG研究学者，于越南出生。他于1973年在尤他大学取得哲学博士学位，并发明了Phong反射模型及Phong著色法，并广为CG界采用。1975死于白血病。
 ADS光照模型公式缩写：
LightIntensity = Ambient + Diffuse + Specular;  参数说明：
 Ambient 环境光 Diffuse 漫反射 Specular 全反射光 / 镜面光  三个参数渲染效果示例：   三个参数拆解如下：
Ambient = La * Ka; Diffuse = Ld * Kd * max( dot(s, n), 0.0 ); Specular = Ls * Ks * pow( max( dot(r, v), 0.0 ), f );  参数说明：</description>
    </item>
    
    <item>
      <title>[UE4][Animation]IK动画.md</title>
      <link>http://www.dawnarc.com/2018/05/ue4animationik%E5%8A%A8%E7%94%BB.md/</link>
      <pubDate>Wed, 30 May 2018 13:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4animationik%E5%8A%A8%E7%94%BB.md/</guid>
      <description>工程1 在油管上看到一个UE4 IK动画的demo工程示例
该示例作者的主页：https://www.patreon.com/unrealcg
       演示视频：Advanced foot IK for Unreal Engine 4 - (100% Free)
https://www.youtube.com/watch?v=XetC9ivIXFc
demo工程下载地址(4.19)：
https://pan.baidu.com/s/1mlcM0cseKWpprnISVM0P5Q
工程2 该工程除了IK，还包括动画融合、物理等功能
演示视频：UE4 - Advanced Locomotion System V3 - Features
https://www.youtube.com/watch?v=yTniZCOCY7o
下载地址：Unreal商城，60刀
Advanced Locomotion System V3
https://www.unrealengine.com/marketplace/advanced-locomotion-system-v1
认识自己的无知是认识世界的最可靠的方法。---米歇尔·蒙田《随笔集》</description>
    </item>
    
    <item>
      <title>[UE4][Animation]Master Pose, Copy Pose, Mesh merge区别</title>
      <link>http://www.dawnarc.com/2018/05/ue4animationmaster-pose-copy-pose-mesh-merge%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Tue, 29 May 2018 16:50:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4animationmaster-pose-copy-pose-mesh-merge%E5%8C%BA%E5%88%AB/</guid>
      <description>参考自：Master pose vs copy pose vs mesh merge in UE4
https://iluvanimation.blogspot.tw/2017/04/master-pose-vs-copy-pose-vs-mesh-merge.html
Since I get this question so often, I&amp;rsquo;m just writing quick summary for each.
When you have different parts of bodies, and you want to allow players to pick which part they want, we have multiple choices, and people are wondering what are the main differences.
Say you have head, upper body, lower body, and how do you allow them to pick and what are the differences?</description>
    </item>
    
    <item>
      <title>[UE4][Animation]Animation Blueprint Inherit(动画蓝图继承与复用)</title>
      <link>http://www.dawnarc.com/2018/05/ue4animationanimation-blueprint-inherit%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%8D%E7%94%A8/</link>
      <pubDate>Tue, 29 May 2018 12:36:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4animationanimation-blueprint-inherit%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%8D%E7%94%A8/</guid>
      <description>keyworks：Animation Blueprint Inherit、Animation Blueprint Reuse、蓝图继承、蓝图重用、蓝图复用
三种方式可以重用动画蓝图逻辑：
 Blueprint Inherit（蓝图继承） Sub Animation Blueprint Instances Post Process Animation Blueprints  Animation Blueprint Inherit（动画蓝图继承） 角色蓝图继承和动画蓝图继承有部分相似，这里先说下角色蓝图继承
右键角色蓝图 -》 Create Child Blueprint Class   这样创建出来的子蓝图，其构造函数中会自动生成一个执行父级蓝图构造函数的节点   其他的Event事件中，如果也需要调用父级蓝图的函数，可以右键对应节点 -》 Add call to parent function     动画蓝图也可以使用上述角色蓝图继承的方式。
但直接右键生成子蓝图的方式创建出来的动画蓝图，无法选择其他骨骼，只能保持和父级动画蓝图的骨骼一样   如果要创建一个与父级动画蓝图骨骼不同的子动画蓝图，可以先新建一个普通的动画蓝图   然后选择需要继承的父级动画蓝图，以及子动画蓝图的骨骼   这样生成出来的子动画蓝图，其Event Graph中，会自动生成一个执行调用父级蓝图的节点：Parent: Blueprint Update Animation   Sub Animation Blueprint Instance   Using Sub Anim Instances</description>
    </item>
    
    <item>
      <title>[UE4][Animation]Multiple skeleton meshes sharing same skeleton(多个SkeletonMesh共用一套骨骼)</title>
      <link>http://www.dawnarc.com/2018/05/ue4animationmultiple-skeleton-meshes-sharing-same-skeleton%E5%A4%9A%E4%B8%AAskeletonmesh%E5%85%B1%E7%94%A8%E4%B8%80%E5%A5%97%E9%AA%A8%E9%AA%BC/</link>
      <pubDate>Tue, 29 May 2018 12:30:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4animationmultiple-skeleton-meshes-sharing-same-skeleton%E5%A4%9A%E4%B8%AAskeletonmesh%E5%85%B1%E7%94%A8%E4%B8%80%E5%A5%97%E9%AA%A8%E9%AA%BC/</guid>
      <description>keywords：UE4 Animation、Set Master Pose Component、customizable character、动画蓝图、换装
美术资源制作  每个身体部件（帽子、鞋子等）蒙皮时需要使用同一套骨骼(all pieces need to be skinned to the same skeleton) 每个身体部件导出时，该部件的关节与根关节之间的所有关节都需要选中导出。例如：假设盆骨为根关节（root joint），现在要导出手臂，那么手臂、肩膀、脊椎、盆骨的关节都需要选中导出。  角色蓝图中设置Master Pose 身体各个部件导入UE4之后，打开角色蓝图，为每个部件Add一个Skeleton Mesh Component，并将其Skeleton Mesh属性设置为对应的资源文件。
      最后再在角色蓝图的Construction Script中Set Master Pose Component
  这样，角色在播放动画时，每个部件就会跟随角色一起播放，而不会固定不动。
参考自：How to Setup &amp;ldquo;Master Pose Component&amp;rdquo;
https://answers.unrealengine.com/questions/228601/how-to-setup-master-pose-component.html
C++接口 Set Master Pose Component蓝图节点对应的C++ API：
Child-&amp;gt;SetMaseterPoseComponent(Body);  有一个传说，说的是有那么一只鸟儿，它一生只唱一次，那歌声比世上所有一切生灵的歌声都更加优美动听。---《荆棘鸟》</description>
    </item>
    
    <item>
      <title>[UE4]Sharp Temporal AA</title>
      <link>http://www.dawnarc.com/2018/05/ue4sharp-temporal-aa/</link>
      <pubDate>Thu, 17 May 2018 14:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4sharp-temporal-aa/</guid>
      <description>PC端开启Temporal AA 参考： https://forums.unrealengine.com/development-discussion/rendering/106829-sharp-temporal-aa/page2?134157-Sharp-Temporal-AA=&amp;amp;viewfull=1
移动端开启Temporal AA Project Settings -》 Engine -》 Rendering -》 Default Settings -》 Anti-Aliasing Method 选择 TemporalAA；
Project Settings -》 Engine -》 Rendering -》 Mobile -》 Mobile MSAA 选择 NO MSAA，并确保配置DefaultEngine.ini中r.MobileMSAA=0。
4.19版本有bug，移动端无法开启Temporal AA，4.18没有问题。启用TemporalAA后，在Android设备上容易产生残影（转动屏幕或角色跑动时）。
 我希望有个如你一般的人
如山间清爽的风
如古城温暖的光
从清晨到夜晚
由山野到书房
只要最后是你
就好
——张嘉佳 《从你的全世界路过》</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]正确使用STL-MAP中Erase函数</title>
      <link>http://www.dawnarc.com/2018/05/c--%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8stl-map%E4%B8%ADerase%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 11 May 2018 01:11:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/c--%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8stl-map%E4%B8%ADerase%E5%87%BD%E6%95%B0/</guid>
      <description>原文：http://www.cnblogs.com/graphics/archive/2010/07/05/1771110.html
#include &amp;lt;iostream&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; using namespace std ; int main(void) { map&amp;lt;int, string&amp;gt; m ; m.insert(pair&amp;lt;int, string&amp;gt;(1, &amp;quot;abc&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(2, &amp;quot;def&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(3, &amp;quot;def&amp;quot;)) ; m.insert(pair&amp;lt;int, string&amp;gt;(4, &amp;quot;ghi&amp;quot;)) ; map&amp;lt;int, string&amp;gt;::iterator itor ; // 错误的写法 for (itor = m.begin(); itor != m.end(); ++itor) { if (itor-&amp;gt;second == &amp;quot;def&amp;quot;) { m.erase(itor) ; // map是关联式容器，调用erase后，当前迭代器已经失效 } } // 正确的写法 for (itor = m.begin(); itor != m.end();) { if (itor-&amp;gt;second == &amp;quot;def&amp;quot;) { m.</description>
    </item>
    
    <item>
      <title>[UE4]4.19编译Substance Plugin报错</title>
      <link>http://www.dawnarc.com/2018/05/ue44.19%E7%BC%96%E8%AF%91substance-plugin%E6%8A%A5%E9%94%99/</link>
      <pubDate>Thu, 10 May 2018 10:49:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue44.19%E7%BC%96%E8%AF%91substance-plugin%E6%8A%A5%E9%94%99/</guid>
      <description>问题现象 4.19版本启用Substance Plugin后，Generate Visual Studio Project Files时报错：
Exception while generating include data for UE4Editor: Unable to instantiate module &#39;SubstanceCore&#39;: System.NullReferenceException: La référence d&#39;objet n&#39;est pas définie à une instance d&#39;un objet. à UnrealBuildTool.Rules.SubstanceCore..ctor(ReadOnlyTargetRules Target) dans d:\3D\UE4.19\UnrealEngine-release\Engine\Plugins\Substance\Source\SubstanceCore\SubstanceCore.Build.cs:ligne 116 (referenced via UE4Editor.Target.cs -&amp;gt; Substance.uplugin)  解决办法 修改：UE_4.19\Engine\Plugins\Marketplace\Substance\Source\SubstanceCore\SubstanceCore.Build.cs
将116行到124行注掉，并追加一行：
IncludePS4Files = false;  参考自：https://forum.allegorithmic.com/index.php?topic=23285.0
你简单，世界就是童话；心复杂，世界就是迷宫。</description>
    </item>
    
    <item>
      <title>[UE4]Steam SDK接入相关</title>
      <link>http://www.dawnarc.com/2018/05/ue4steam-sdk%E6%8E%A5%E5%85%A5%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Wed, 09 May 2018 15:11:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/05/ue4steam-sdk%E6%8E%A5%E5%85%A5%E7%9B%B8%E5%85%B3/</guid>
      <description>使用第三方plugin Advanced Sessions Plugin
https://forums.unrealengine.com/community/community-content-tools-and-tutorials/41043-advanced-sessions-plugin
将该plugin加入工程后，再做以下修改：
在DefaultEngine.ini的[/Script/Engine.Engine]下添加：
+NetDriverDefinitions=(DefName=&amp;quot;GameNetDriver&amp;quot;,DriverClassName=&amp;quot;OnlineSubsystemSteam.SteamNetDriver&amp;quot;,DriverClassNameFallback=&amp;quot;OnlineSubsystemUtils.IpNetDriver&amp;quot;)  再增加：
[OnlineSubsystem] DefaultPlatformService=Steam [OnlineSubsystemSteam] bEnabled=true SteamDevAppId=480 [/Script/OnlineSubsystemSteam.SteamNetDriver] NetConnectionClassName=&amp;quot;OnlineSubsystemSteam.SteamNetConnection&amp;quot;  然后启动编辑器后，以Standalone模式运行，且保证电脑上启动了Steam客户端，则启动游戏后会，在游戏屏幕右下角会自动弹出Steam相关菜单。
如果不使用该plugin，手动编写接入代码，则还需要添加以下配置：
 工程名.Build.cs构造函数中添加：
PublicDependencyModuleNames.AddRange(new string[] { &amp;quot;OnlineSubsystem&amp;quot;, &amp;quot;OnlineSubsystemUtils&amp;quot; }); DynamicallyLoadedModuleNames.Add(&amp;quot;OnlineSubsystemSteam&amp;quot;);  工程名.Target.cs构造函数中添加：
bUsesSteam = true;   手动接入steam SDK Online Subsystem Steam
https://docs.unrealengine.com/en-us/Programming/Online/Steam
Steam, Using the Steam SDK During Development
https://wiki.unrealengine.com/Steam,_Using_the_Steam_SDK_During_Development
Integrating Steam SDK – Part 1
http://orfeasel.com/steam_integration_p1/
Handling Steam Achievements – Steam Integration Part 2
http://orfeasel.com/handling-steam-achievements-steam-integration-part-2/
中文翻译：
集成 Steam SDK（一）</description>
    </item>
    
    <item>
      <title>[UE4]Lightings</title>
      <link>http://www.dawnarc.com/2018/04/ue4lightings/</link>
      <pubDate>Fri, 27 Apr 2018 14:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4lightings/</guid>
      <description>keywords：UE4、Lighting、灯光
以下问题都是基于4.18，不排除后续新版本变动。
Lighting Content Examples https://docs.unrealengine.com/en-us/Resources/ContentExamples/Lighting
Light Propagation Volumes Light Propagation Volumes
https://docs.unrealengine.com/en-us/Engine/Rendering/LightingAndShadows/LightPropagationVolumes
Dynamic GI : Getting the Most out of LPV ( Light Propagation Volume )
https://forums.unrealengine.com/community/community-content-tools-and-tutorials/103572-dynamic-gi-getting-the-most-out-of-lpv-light-propagation-volume
Lighting Channels https://docs.unrealengine.com/en-us/Engine/Rendering/LightingAndShadows/LightingChannels
注意事项：
 Lighting Channels是动态的，意思是：静态光(Static Lights)或者Mobility为Static的Static Mesh Actor不受Lighting Channels影响。要使用Lighting Channels，Static Mesh Actor和Lights的Mobility必须设置为Stationary或者Movable。 材质类型影响：Lighting Channels只影响直接光照(direct lighting)下Opaque类型材质，Translucent或者Masked类型材质没有效果。 Lighting Channels对性能开销不大，可以忽略不计。  移动端的Lighting Channels：
 4.13版本开始，才支持移动端的Lighting Channel。 移动端多个Directional Light支持不同Lighting Channels。 一个Primitives只受一个Directional Light影响，如果primitves勾选了多个Lighting Channel，那么只会启用第一个。 CSM Shadows只会投射到与光源Lighting Channels相同的primitives上。 动态点光源在移动端支持Lighting Channels的所有特性，与桌面级特性相同。  另外：Lighting Channels不支持运行时修改，就是说Lighting Channels在Actor创建时(比如BeginPlay)设置好以后，之后就无法再修改。
Occlusion Culling 光源距离裁剪 Project Settings -》 Engine -》 Rendering -》 Culling</description>
    </item>
    
    <item>
      <title>[UE4]Post Process(后处理)</title>
      <link>http://www.dawnarc.com/2018/04/ue4post-process%E5%90%8E%E5%A4%84%E7%90%86/</link>
      <pubDate>Fri, 27 Apr 2018 14:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4post-process%E5%90%8E%E5%A4%84%E7%90%86/</guid>
      <description>Post Process Materials
https://docs.unrealengine.com/en-us/Engine/Rendering/PostProcessEffects/PostProcessMaterials
Stylized Rendering Post Processing
https://docs.unrealengine.com/en-us/Resources/Showcases/Stylized/PostProcessing
Post Processing Content Examples
https://docs.unrealengine.com/en-us/Resources/ContentExamples/PostProcessing
1.2 - ShadingModel
https://docs.unrealengine.com/en-us/Resources/ContentExamples/MaterialProperties/1_2
抱必死的心，走永远的路。</description>
    </item>
    
    <item>
      <title>[UE4]Shadows</title>
      <link>http://www.dawnarc.com/2018/04/ue4shadows/</link>
      <pubDate>Fri, 27 Apr 2018 14:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4shadows/</guid>
      <description>keywords：UE4、Shadows、Scene Optimization、阴影、场景优化
Dynamic Scene Shadows https://docs.unrealengine.com/en-us/Resources/ContentExamples/DynamicSceneShadows
Cascaded Shadows https://docs.unrealengine.com/en-us/Platforms/Mobile/Lighting/HowTo/CascadedShadow
人会长大三次。第一次是在发现自己不是世界中心的时候。第二次是在发现即使再怎么努力，终究还是有些事令人无能为力的时候。第三次是在，明知道有些事可能会无能为力，但还是会尽力争取的时候。</description>
    </item>
    
    <item>
      <title>[UE4]Android NDK打包版本执行protobuf的ParseFromArray函数崩溃</title>
      <link>http://www.dawnarc.com/2018/04/ue4android-ndk%E6%89%93%E5%8C%85%E7%89%88%E6%9C%AC%E6%89%A7%E8%A1%8Cprotobuf%E7%9A%84parsefromarray%E5%87%BD%E6%95%B0%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Sat, 21 Apr 2018 22:01:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4android-ndk%E6%89%93%E5%8C%85%E7%89%88%E6%9C%AC%E6%89%A7%E8%A1%8Cprotobuf%E7%9A%84parsefromarray%E5%87%BD%E6%95%B0%E5%B4%A9%E6%BA%83/</guid>
      <description>keywords：UE4、protobuf-lite、Android NDK、ParseFromArray、Crash
protobuf与android ndk编译后，集成到UE4中执行时，每当执行ParseFromArray时就会崩溃（Windows版本没有问题）：
MessageTest msg; bool rs = msg.ParseFromArray(buffer, buffer_size);  解决办法：将ParseFromArray()函数内部的代码复制出来，放在工程的代码中，然后再执行。
protobuf 2.x #ifndef __ProtobufHelper_H__ #define __ProtobufHelper_H__ #include &amp;lt;google/protobuf/message_lite.h&amp;gt; #include &amp;lt;google/protobuf/io/coded_stream.h&amp;gt; class ProtobufHelper { public: static bool Parse(::google::protobuf::MessageLite&amp;amp; Message, const char* Data, int Size) { ::google::protobuf::io::CodedInputStream input(reinterpret_cast&amp;lt;const uint8*&amp;gt;(Data), Size); return Message.MergePartialFromCodedStream(&amp;amp;input) &amp;amp;&amp;amp; input.ConsumedEntireMessage(); } }; #endif  protobuf 3.x #ifndef __ProtobufHelper_H__ #define __ProtobufHelper_H__ #include &amp;lt;google/protobuf/message_lite.h&amp;gt; #include &amp;lt;google/protobuf/io/coded_stream.h&amp;gt; #include &amp;quot;CoreMinimal.h&amp;quot; class ProtobufHelper { public: static bool Parse(::google::protobuf::MessageLite&amp;amp; Message, const void* Data, int Size) { ::google::protobuf::io::CodedInputStream input(static_cast&amp;lt;const uint8*&amp;gt;(Data), Size); Message.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]读写二进制文件和文本文件</title>
      <link>http://www.dawnarc.com/2018/04/c--%E8%AF%BB%E5%86%99%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/</link>
      <pubDate>Fri, 20 Apr 2018 17:45:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/c--%E8%AF%BB%E5%86%99%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/</guid>
      <description>ifstream,ofstream读写二进制文件 #include &amp;lt;iostream&amp;gt; #include &amp;lt;fstream&amp;gt; using namespace std; int main(int argc, char** argv) { int a[5] = {1,2,3,4,5}; int b[5]; ofstream ouF; ouF.open(&amp;quot;./me.dat&amp;quot;, std::ofstream::binary); ouF.write(reinterpret_cast&amp;lt;const char*&amp;gt;(a), sizeof(int)*5); ouF.close(); ifstream inF; inF.open(&amp;quot;./me.dat&amp;quot;, std::ifstream::binary); inF.read(reinterpret_cast&amp;lt;char*&amp;gt;(b), sizeof(int)*5); inF.close(); for (int i = 0; i &amp;lt; 5; i++) { cout &amp;lt;&amp;lt; b[i] &amp;lt;&amp;lt; endl; } return 0; }  参考自：https://blog.csdn.net/bendanban/article/details/30039193
C模式读写二进制文件 //采用C模式写二进制文件 void DataWrite_CMode() { //准备数据 double pos[200]; for(int i = 0; i &amp;lt; 200; i ++ ) pos[i] = i ; //写出数据 FILE *fid; fid = fopen(&amp;quot;binary.</description>
    </item>
    
    <item>
      <title>[Android NDK]protobuf-lite 3.5编译</title>
      <link>http://www.dawnarc.com/2018/04/android-ndkprotobuf-lite-3.5%E7%BC%96%E8%AF%91/</link>
      <pubDate>Thu, 19 Apr 2018 15:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/android-ndkprotobuf-lite-3.5%E7%BC%96%E8%AF%91/</guid>
      <description>protobuf源码NDK编译配置 假设工程结构如下：
protobuf-build |-jni |- Android.mk |- Application.mk |- google |-protobuf  Android.mk LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) CC_LITE_SRC_FILES := \ google/protobuf/arena.cc \ google/protobuf/arenastring.cc \ google/protobuf/extension_set.cc \ google/protobuf/generated_message_table_driven_lite.cc \ google/protobuf/generated_message_util.cc \ google/protobuf/io/coded_stream.cc \ google/protobuf/io/zero_copy_stream.cc \ google/protobuf/io/zero_copy_stream_impl_lite.cc \ google/protobuf/message_lite.cc \ google/protobuf/repeated_field.cc \ google/protobuf/stubs/atomicops_internals_x86_gcc.cc \ google/protobuf/stubs/atomicops_internals_x86_msvc.cc \ google/protobuf/stubs/bytestream.cc \ google/protobuf/stubs/common.cc \ google/protobuf/stubs/int128.cc \ google/protobuf/stubs/io_win32.cc \ google/protobuf/stubs/once.cc \ google/protobuf/stubs/status.cc \ google/protobuf/stubs/statusor.cc \ google/protobuf/stubs/stringpiece.cc \ google/protobuf/stubs/stringprintf.cc \ google/protobuf/stubs/structurally_valid.cc \ google/protobuf/stubs/strutil.cc \ google/protobuf/stubs/time.cc \ google/protobuf/wire_format_lite.</description>
    </item>
    
    <item>
      <title>[Android NDK]链接已有静态库(Link prebuilt static library)</title>
      <link>http://www.dawnarc.com/2018/04/android-ndk%E9%93%BE%E6%8E%A5%E5%B7%B2%E6%9C%89%E9%9D%99%E6%80%81%E5%BA%93link-prebuilt-static-library/</link>
      <pubDate>Wed, 18 Apr 2018 18:18:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/android-ndk%E9%93%BE%E6%8E%A5%E5%B7%B2%E6%9C%89%E9%9D%99%E6%80%81%E5%BA%93link-prebuilt-static-library/</guid>
      <description>引用静态库头文件：
LOCAL_C_INCLUDES += ../include/  引用静态库：
LOCAL_LDLIBS += ../lib/libMyBoostLib.a  Android.mk：
LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) LOCAL_MODULE := helloJNI LOCAL_SRC_FILES := mainActivity.cpp LOCAL_C_INCLUDES := $(LOCAL_PATH)/inc/ LOCAL_LDLIBS := -llog -L$(LOCAL_PATH)/inc/ -lMyLibrary include $(BUILD_SHARED_LIBRARY)  Include prebuilt static library
https://stackoverflow.com/questions/18983037/include-prebuilt-static-library
故兵无常势，水无常形。能因敌变化而取胜者，谓之神。故五行无常胜，四时无常位，日有短长，月有死生。---《孙子兵法·虚实篇》</description>
    </item>
    
    <item>
      <title>[UE4]UMG Progress Bar相关设置</title>
      <link>http://www.dawnarc.com/2018/04/ue4umg-progress-bar%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Tue, 17 Apr 2018 17:32:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4umg-progress-bar%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE/</guid>
      <description>先拖一个Progress Bar控件   再设置Style -》 Style -》 Background Image     再设置Percent的大小，来预览进度条颜色填充效果     也可以自定义填充颜色：Fill Color and Opacity     也可以去掉颜色，改成图片填充     注意，如果使用图片作为填充色，则Fill Color and Opacity需要改成默认值，否则填充图片颜色会受到影响。
   然后再设置填充图片的Padding     你最好不要爱上我，因为游侠是不需要女人的，游侠非常孤独。----《森林好小子》</description>
    </item>
    
    <item>
      <title>[UE4]UMG Image ‘Draw as’ Type</title>
      <link>http://www.dawnarc.com/2018/04/ue4umg-image-draw-as-type/</link>
      <pubDate>Tue, 17 Apr 2018 16:34:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4umg-image-draw-as-type/</guid>
      <description>添加一个Button，大小设置为300x300     Image 当Draw As设置为Image时，图片会被整体拉伸     Box 图片会被分成九宫格（3x3），其中4个脚的格子大小固定，不会随分辨率改变而拉伸，上下边沿格子会跟随分辨率横向拉伸，左右边沿格子会跟随分辨率纵向拉伸   Border Border模式，Margin设置为0.25     Border模式，Margin设置为0.5     Marin表示Image边沿格子的大小，数值是百分比。例如，假设Margin设置为0.5，则表示边沿格子的大小为图片的50%。
 Border模式下，Image不会随着屏幕大小拉伸，而是固定大小。例如，当Margin为0.5，且Viewport变小时，每个格子的图片不会被拉伸：   有些动物主要是皮值钱，譬如狐狸；有些动物主要是肉值钱，譬如牛；有些动物主要是骨头值钱，譬如人。——丰子恺</description>
    </item>
    
    <item>
      <title>[UE4]LoadObject加载UAnimBlueprint失败</title>
      <link>http://www.dawnarc.com/2018/04/ue4loadobject%E5%8A%A0%E8%BD%BDuanimblueprint%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Sat, 14 Apr 2018 22:10:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4loadobject%E5%8A%A0%E8%BD%BDuanimblueprint%E5%A4%B1%E8%B4%A5/</guid>
      <description>keywords：UE4、Dynamic Load、Animation Blueprint、LoadObject、动画蓝图
问题现象 假如用以下方式加载动画蓝图：
FString AnimBPStringTest = &amp;quot;AnimBlueprint&#39;/Game/ThirdPerson/Animations/ThirdPerson_AnimBP.ThirdPerson_AnimBP&#39;&amp;quot;; UAnimBlueprint* AnimationBP = LoadObject&amp;lt;UAnimBlueprint&amp;gt;(NULL, *AnimBPStringTest);  在PIE和Standalone模式下都可加载成功，但是一旦打包运行（打包配置中添加了该资源cook）就会加载失败，并提示如下错误：
LogUObjectGlobals:Warning: Failed to find object &#39;AnimBlueprint /Game/ThirdPerson/Animations/ThirdPerson_AnimBP.ThirdPerson_AnimBP&#39;  解决办法 貌似动画蓝图比较特殊，用LoadObject无法加载，如果要获取动画蓝图Class，可以通过如下方式加载：
// get the blueprint class reference from the editor FString AnimClassStringTest = &amp;quot;Class&#39;/Game/mixamo/Heidi/IcloneAnimBP.IcloneAnimBP_C&#39;&amp;quot;; // load the class UClass* AnimationClass = LoadObject&amp;lt;UClass&amp;gt;(NULL, *AnimClassStringTest); if (!AnimationClass) return; // assign the anim blueprint class to your skeletal mesh component Skeletal3DMeshComponent-&amp;gt;SetAnimInstanceClass(AnimationClass);  参考：Why can&amp;rsquo;t i dynamically load an animation BP in a packaged game</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]世界坐标转局部坐标(World Space to Local Space)</title>
      <link>http://www.dawnarc.com/2018/04/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E8%BD%AC%E5%B1%80%E9%83%A8%E5%9D%90%E6%A0%87world-space-to-local-space/</link>
      <pubDate>Fri, 13 Apr 2018 15:59:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%96%E7%95%8C%E5%9D%90%E6%A0%87%E8%BD%AC%E5%B1%80%E9%83%A8%E5%9D%90%E6%A0%87world-space-to-local-space/</guid>
      <description>keywords：UE4、InverseTransformVector、InverseTransformVector、InverseTransformPosition
实例代码：
//返回摄像机Rotation相对角色Rotation的偏移量Offset FRotator ASBaseCharacter::GetAimOffsets() const { const FVector AimDirWS = GetBaseAimRotation().Vector(); const FVector AimDirLS = ActorToWorld().InverseTransformVectorNoScale(AimDirWS); const FRotator AimRotLS = AimDirLS.Rotation(); return AimRotLS; }  https://github.com/tomlooman/EpicSurvivalGameSeries/blob/4a6ee9a6081529fadbe0f693b2e4e6729d5ec08d/SurvivalGame/Source/SurvivalGame/Private/Player/SBaseCharacter.cpp#L374
如果只是想获取两个Rotation之间的Offset，更简单的办法：
FRotator R1; FRotator R2; FRotator Offset = R2 - R1;  无欲则刚，关心则乱。----《论语》</description>
    </item>
    
    <item>
      <title>[UE4]Animation Blend(动画融合)</title>
      <link>http://www.dawnarc.com/2018/04/ue4animation-blend%E5%8A%A8%E7%94%BB%E8%9E%8D%E5%90%88/</link>
      <pubDate>Fri, 13 Apr 2018 11:23:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4animation-blend%E5%8A%A8%E7%94%BB%E8%9E%8D%E5%90%88/</guid>
      <description>keywords：UE4、Animation Blend Nodes、动画融合实例
各个Blend节点的解释：Blend Nodes
https://docs.unrealengine.com/en-us/Engine/Animation/NodeReference/Blend
动画融合实例可以参考：
EpicSurvivalGameSeries\SurvivalGame\Content\AnimStarterPack\Player_AnimBP  该蓝图中实现逻辑：角色握枪动作跟随摄像机方向动态融合。
项目地址：https://github.com/tomlooman/EpicSurvivalGameSeries
      有作用者器宇定是不凡，有智慧者才情决然不露。----弘一法师</description>
    </item>
    
    <item>
      <title>[Build]cmake常用配置项</title>
      <link>http://www.dawnarc.com/2018/04/buildcmake%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E9%A1%B9/</link>
      <pubDate>Tue, 10 Apr 2018 12:25:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/buildcmake%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E9%A1%B9/</guid>
      <description>设置编译输出路径 在CMakeList.txt中如下设置后，无论是编译可执行文件还是编译静态库，都会输出到指定目录下，而不再是默认的当前目录。
# etc. etc. set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY &amp;quot;lib/&amp;quot;)  参考自：https://stackoverflow.com/questions/38445335/cmake-library-output-directory-not-affected-by-cmake-library-output-director/38450844
获取指定目录下的所有源文件 file(GLOB cpp_files ./src/*.cpp) add_library(mylib STATIC ${cpp_files})  打印log if (NOT CMAKE_VERSION VERSION_GREATER &amp;quot;3.0&amp;quot;) message(FATAL_ERROR &amp;quot;cmake version 3.x is required!&amp;quot;) endif()  修改默认的CMAKE_MODULE_PATH目录 CMAKE_MODULE_PATH是供find_package搜索第三方库用的。cmake的默认Modules目录在安装目录中：cmake-3.11.3-win64-x64\share\cmake-3.11\Modules。
如果要追加Modules目录，有3种方式：
set(CMAKE_MODULE_PATH &amp;quot;${CMAKE_SOURCE_PATH}:${CMAKE_MODULE_PATH}&amp;quot;) LIST(APPEND CMAKE_MODULE_PATH &amp;quot;${CMAKE_SOURCE_PREFIX}&amp;quot;) set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)  find_package用法 通常情况下，包含第三方库需要写以下内容
include_directories(&amp;quot;${project_root_path}/include/&amp;quot;) link_directories(./lib) add_executable(myapp myapp.cpp) target_link_libraries(myapp mylib)  如果引用的很多个第三方库，那么类似上面的内容会写很多，且如果自己的多个项目都引用了某个第三方库，那么我每个项目的CmakeList.txt都得写一遍，重复劳动很多。那么有没办法为每个第三方库只定义一次它的头文件和库文件信息，然后在自己的工程中只指定名称即可？（类似编译Java的Maven仓库）答案是当然可以，find_package帮你解决。
find_package定义在自己工程的CmakeList.txt中：
find_package( XXX CONFIG REQUIRED )  然后cmake就会在默认的Modules(即CMAKE_MODULE_PATH指定的目录)目录中搜索这个XXX第三方库。
搜索有两种模式：FindXXX.cmake和XXXConfig.cmake。前者叫做Module模式，后者叫做Config模式。
 Module模式
搜索CMAKE_MODULE_PATH指定路径下的FindXXX.cmake文件，通过该文件从而找到XXX库的头文件和lib文件位置。FindXXX.cmake中需要定义XXX_INCLUDE_DIRS和XXX_LIBRARIES。 Config模式
搜索XXX_DIR指定路径下的XXXConfig.cmake文件（XXX_DIR定义在自己工程的CMakeList.txt或者cmake-gui的环境变量中），通过该文件从而找到XXX库的头文件和lib文件位置。XXXConfig.cmake中需要定义XXX_INCLUDE_DIRS和XXX_LIBRARIES  Config模式示例：</description>
    </item>
    
    <item>
      <title>[UE4]关卡蓝图继承C&#43;&#43;(Creating a C&#43;&#43; Level Blueprint)</title>
      <link>http://www.dawnarc.com/2018/04/ue4%E5%85%B3%E5%8D%A1%E8%93%9D%E5%9B%BE%E7%BB%A7%E6%89%BFc--creating-a-c---level-blueprint/</link>
      <pubDate>Wed, 04 Apr 2018 18:47:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4%E5%85%B3%E5%8D%A1%E8%93%9D%E5%9B%BE%E7%BB%A7%E6%89%BFc--creating-a-c---level-blueprint/</guid>
      <description>1，新建一个C++ Actor，继承LevelScriptActor。
2，打开关卡蓝图，点击Class Settings，修改Parent Class。
  3，然后关卡蓝图中就可以调用自定义LevelScriptActor Class中的UFUNCTION(BlueprintCallable)函数
参考：http://orfeasel.com/creating-a-c-level-blueprint/
天之道利而无害，人之道为而不争。 ----《道德经》</description>
    </item>
    
    <item>
      <title>[UE4]Indirect Lighting Cache(间接光照缓存)</title>
      <link>http://www.dawnarc.com/2018/04/ue4indirect-lighting-cache%E9%97%B4%E6%8E%A5%E5%85%89%E7%85%A7%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 02 Apr 2018 14:55:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4indirect-lighting-cache%E9%97%B4%E6%8E%A5%E5%85%89%E7%85%A7%E7%BC%93%E5%AD%98/</guid>
      <description>原文：https://home.gamer.com.tw/creationDetail.php?sn=3315244
某台湾网站上看到的文章，比起youtube上讲Indirect Lighting的视频要直观易懂。
Indirect Lighting Cache(间接光照缓存) 官方文档
http://api.unrealengine.com/INT/Engine/Rendering/LightingAndShadows/IndirectLightingCache/index.html
Indirect Lighting Cache是类似于Unity的LightProbe，间接光照就是当光线直射到一个物体上后，光线反弹后所得到的颜色，反弹后的光线还会再去影响到周边的物体，如同白色的桌面上摆着红色的物体，物体周围会有些微的红色。
而Indirect Lighting Cache还有一种功能就是提供动态物件能获得间接光的资讯，例如像是当角色靠近一面红色墙壁时，会有些微的红光反映在角色身上。
在UE4里面建构光照后会自动产生Indirect Lighting Cache，可以从编辑画面的Show &amp;gt; Visualize &amp;gt; volume light sample显示当前Indirect Lighting Cache的情形。
   显示间接光照缓存
   没有间接光照缓存的情况，角色不会受到静态灯光的颜色影响
   有间接光照缓存时，角色即会受到静态灯光影响
可以从上图看到场景中那些小正方形就是间接光照缓存的颜色，周围的物件会受到靠近的间接光照颜色影响。
Lightmass Importance Volume(重要光照范围) 官方文档
http://api.unrealengine.com/INT/Engine/Rendering/LightingAndShadows/Lightmass/Basics/index.html
在建构光照贴图时，若场景中没有给予Lightmass Importance Volume，会对整个场景做间接光照的采样，产生Indirect Lighting Cache，这对大型游戏场景是相当的浪费，像是游戏角色到不了的中、远景不需要产生Indirect Lighting Cache，这时候就可以在场景中置入Lightmass Importance Volume，指定特定区域内才会产生Indirect Lighting Cache，节省不少建构光照的时间。
   Modes视窗中的Volumes页签找到Lightmass Importance Volume
   拖曳至场景后，调整Scale直到包覆特定区域即可
   建构光照后会在Lightmass Importance Volume区域内看到产生的间接光照缓存</description>
    </item>
    
    <item>
      <title>[UE4]UMG Widget作为变量访问</title>
      <link>http://www.dawnarc.com/2018/04/ue4umg-widget%E4%BD%9C%E4%B8%BA%E5%8F%98%E9%87%8F%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Sun, 01 Apr 2018 13:47:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/04/ue4umg-widget%E4%BD%9C%E4%B8%BA%E5%8F%98%E9%87%8F%E8%AE%BF%E9%97%AE/</guid>
      <description>默认情况下，UMG蓝图钟的Widget组件只能在当前UMG蓝图中访问，无法在外部被其他蓝图访问。
如果要被外部访问，方式如下：
设计面板（Designer）中勾选Is Variable
     博观而约取，厚积而薄发。-----《稼说送张琥》</description>
    </item>
    
    <item>
      <title>[Batch]Protobuf 3 protoc generate multiple proto files</title>
      <link>http://www.dawnarc.com/2018/03/batchprotobuf-3-protoc-generate-multiple-proto-files/</link>
      <pubDate>Sat, 31 Mar 2018 19:03:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/batchprotobuf-3-protoc-generate-multiple-proto-files/</guid>
      <description>keywords：Protobuf 3、同时生成多个proto文件、通配符
假设目录结构如下：
root |-proto |-a.proto |-b.proto |-build |-protoc.exe  protobuf 2.x版本，可以通过通配符指定所有proto模板文件
protoc --proto_path=./proto/ --cpp_out=dllexport_decl=LIBPROTOC_EXPORT:./build ./proto/*.proto  但是protobuf 3.x版本不识别通配符，不过可以通过BAT或者shell提供的遍历语法，来同时生成多个proto文件。
windows bat：
set dir=%cd%/proto set out_cpp=./build for /R %%s in (*.proto) do ( if exist %%s protoc.exe -I=%dir% --cpp_out=%out_cpp% %%s )  欲无祸于昭昭，勿得罪于冥冥。----《菜根谭》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;创建Widget组件(UButton，UImage)</title>
      <link>http://www.dawnarc.com/2018/03/ue4c--%E5%88%9B%E5%BB%BAwidget%E7%BB%84%E4%BB%B6ubuttonuimage/</link>
      <pubDate>Sat, 31 Mar 2018 19:03:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4c--%E5%88%9B%E5%BB%BAwidget%E7%BB%84%E4%BB%B6ubuttonuimage/</guid>
      <description>keyworkds：UE4、C++动态创建Widget、Runtime Create Widget
示例：
void UMyUserWidget::NativeConstruct() { Super::NativeConstruct(); auto MyCanvas = WidgetTree-&amp;gt;ConstructWidget&amp;lt;UCanvasPanel&amp;gt;(UCanvasPanel::StaticClass()); if(MyCanvas) { auto MyButton = WidgetTree-&amp;gt;ConstructWidget&amp;lt;UButton&amp;gt;(UButton::StaticClass()); MyCanvas-&amp;gt;AddChild(MyButton); WidgetTree-&amp;gt;RootWidget = MyCanvas; } }  其他参考 Create widget in pure C++
https://answers.unrealengine.com/questions/470481/create-widget-in-pure-c.html?sort=oldest
曾虑多情损梵行，入山又恐别倾城，世间安得双全法，不负如来不负卿。----仓央嘉措</description>
    </item>
    
    <item>
      <title>[UE4]TouchInterface ZOrder</title>
      <link>http://www.dawnarc.com/2018/03/ue4touchinterface-zorder/</link>
      <pubDate>Sat, 31 Mar 2018 19:03:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4touchinterface-zorder/</guid>
      <description>顺序从低到高 Player Screen
+ Player Screen Widgets
Viewport
+ Touch Interface
+ Viewport Widgets
实际应用 比如创建一个UserWidget，一般是AddToViewport，这样会导致UMG遮挡TouchInterface输入，如果希望TouchInterface优先UMG接收Input事件，那么可以将该UserWidget添加到PlayerScreen中：
LoginWidget-&amp;gt;AddToPlayerScreen();  其他参考 Default Touch Interface ZOrder
https://forums.unrealengine.com/development-discussion/android-development/78992-default-touch-interface-zorder
你的视角决定你的观点，你的态度决定你的未来</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43; BindUFunction时传递参数(BindUFunction with Variable Capture in C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2018/03/ue4c---bindufunction%E6%97%B6%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0bindufunction-with-variable-capture-in-c--/</link>
      <pubDate>Fri, 30 Mar 2018 18:26:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4c---bindufunction%E6%97%B6%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0bindufunction-with-variable-capture-in-c--/</guid>
      <description>keywords：UE4、BindUFunction、BindUObject、Pass Arguments、Variable
示例1：
void UMyClass::FunctionWithVar(const FString&amp;amp; MyVar, TFunction&amp;lt;void(const FString&amp;amp;)&amp;gt; InFunction) { MyLambdaHandle = OnMyDelegate.BindStatic([MyVar](TFunction&amp;lt;void(const FString&amp;amp;)&amp;gt; callback) {callback(MyVar);}, InFunction); // TODO: You have to track MyLambdaHandle to be able to unregister it when needed }  https://answers.unrealengine.com/questions/715835/bindufunction-with-variable-capture-in-c.html
示例2：
使用固定参数绑定
DECLARE_DELEGATE(RefreshOne); class MyClass { public: MyClass() { one.BindRaw(this, &amp;amp;MyClass::MyFunction, (uint8)1); } void MyFunction(uint8 Val) { // Whatever } void Invoke() { one.Execute(); // Will call this-&amp;gt;MyFunction((uint8)1); } private: RefreshOne one; };  使用动态参数绑定</description>
    </item>
    
    <item>
      <title>[Android NDK]arm-eabi-addr2line android应用崩溃的调试方法</title>
      <link>http://www.dawnarc.com/2018/03/android-ndkarm-eabi-addr2line-android%E5%BA%94%E7%94%A8%E5%B4%A9%E6%BA%83%E7%9A%84%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 29 Mar 2018 18:04:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/android-ndkarm-eabi-addr2line-android%E5%BA%94%E7%94%A8%E5%B4%A9%E6%BA%83%E7%9A%84%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/</guid>
      <description>原文：https://blog.csdn.net/tommy_wxie/article/details/12841735
1.将ndk中的arm-linux-androideabi-addr2line可执行文件的路径加入配置文件~/.bashrc中，例如：
export PATH=$PATH:~/dlna/android-ndk-r6b/toolchains/arm-linux-androideabi-4.4.3/prebuilt/linux-x86/bin  2.使配置生效：
source ~/.bashrc  3.使用工具。例如：
arm-linux-androideabi-addr2line -C -f -e ~/workspace/DLNA/libs/armeabi/libctrlpt.so 0003deb4  其中，0003deb4为堆栈信息中pc的值。
android应用崩溃的调试方法 有两种方法可以分析 crash 的堆栈信息
1，google提供了一个python脚本，可以从 https://github.com/maxme/android-ndk-stacktrace-analyzer 下载这个python脚本，然后使用 adb logcat -d &amp;gt; logfile 导出 crash 的log,使用 arm-eabi-objdump 位于build/prebuilt/linux-x86/arm-eabi-4.2.1/bin下面把so或exe转换成汇编代码，如：arm-eabi-objdump -S mylib.so &amp;gt; mylib.asm,使用脚本
python parse_stack.py &amp;lt;asm-file&amp;gt; &amp;lt;logcat-file&amp;gt;  2，直接使用NDK下面的arm-linux-androideabi-addr2line
(D:\android-ndk-r8\toolchains\arm-linux- androideabi-4.4.3\prebuilt\windows\bin\arm-linux-androideabi-addr2line.exe)
例如：
arm-linux-androideabi-addr2line -C -f -e libxxx.so 0x#####(address)  出现 ??:0 , 没法展示源代码行数的问题 在Android.mk 文件中:
LOCAL_CFLAGS := -D__STDC_CONSTANT_MACROS -Wl,-Map=test.map -g  补充2个编译参数 -Wl,-Map=test.map -g .</description>
    </item>
    
    <item>
      <title>[UE4]2D动画序列帧Paper Sprite</title>
      <link>http://www.dawnarc.com/2018/03/ue42d%E5%8A%A8%E7%94%BB%E5%BA%8F%E5%88%97%E5%B8%A7paper-sprite/</link>
      <pubDate>Tue, 27 Mar 2018 11:23:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue42d%E5%8A%A8%E7%94%BB%E5%BA%8F%E5%88%97%E5%B8%A7paper-sprite/</guid>
      <description>Paper 2D Sprites
http://api.unrealengine.com/CHN/Engine/Paper2D/Sprites/index.html
Paper 2D Import Options
http://api.unrealengine.com/CHN/Engine/Paper2D/Importing/index.html
VaTexAtlas：一款支持TexturePacker json数据导入UE4插件
https://github.com/ufna/VaTexAtlas
UMG Animation
https://docs.unrealengine.com/latest/INT/Engine/UMG/UserGuide/Animation/index.html
甚爱必大费，多藏必厚亡。 ----老子《道德经》</description>
    </item>
    
    <item>
      <title>[UE4]环形进度条材质-UMG动画(Circular Progress Bar for UMG)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E7%8E%AF%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%9D%90%E8%B4%A8-umg%E5%8A%A8%E7%94%BBcircular-progress-bar-for-umg/</link>
      <pubDate>Thu, 22 Mar 2018 21:49:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E7%8E%AF%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%9D%90%E8%B4%A8-umg%E5%8A%A8%E7%94%BBcircular-progress-bar-for-umg/</guid>
      <description>keywords：Cooldown Effect、UMG Material
参考自：Circular Progress Bar for UMG
http://www.tomlooman.com/circular-progress-bar-for-umg/
下载地址：
https://pan.baidu.com/s/1kfzODWw8i_VXfd9L5ughmg
静待一树花开，盼你叶落归来。----安意如《人生若只如初见》</description>
    </item>
    
    <item>
      <title>[Next-Gen]锈迹材质全流程实例：Blender-》SP-》UE4</title>
      <link>http://www.dawnarc.com/2018/03/next-gen%E9%94%88%E8%BF%B9%E6%9D%90%E8%B4%A8%E5%85%A8%E6%B5%81%E7%A8%8B%E5%AE%9E%E4%BE%8Bblender-sp-ue4/</link>
      <pubDate>Wed, 21 Mar 2018 01:55:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/next-gen%E9%94%88%E8%BF%B9%E6%9D%90%E8%B4%A8%E5%85%A8%E6%B5%81%E7%A8%8B%E5%AE%9E%E4%BE%8Bblender-sp-ue4/</guid>
      <description>1，准备Mesh 准备一个现成模型资源。这里从Blender中提取现成的猴头模型
按住Shift + A -》 Mesh -》 Monkey     自动生成UV   然后执行Smooth   然后增加细分级别   最终效果：   2，导出FBX File -》 Export -》 FBX   导出选项中勾选Select Objects。   3，导入SP File -》 New，打开创建工程界面，设置Mesh的FBX文件位置（刚刚导出的FBX），其他不用修改。   因为当前示例中的AO、Normal等等贴图我们会在SP中自动生成，所以这里“Import Mesh NOrmal Map &amp;hellip;”中可以不添加任何东西，如果你的模型已经有现成的贴图，可以在这里Add。
点击OK，在SP中可以看到默认贴图和UV     4，烘焙贴图 在Layer面板中，点击 Bake Textures，打开烘焙选项面板   不勾选ID，并设置贴图大小   点击Bake DefaultMaterial Textures，稍等一会后，就可以在Project中看到6张贴图   5，编辑材质 打开Smart Materials   选一个要想材质，这里我选择的是Steel Rust Surface   然后拖拽到Layer面板钟   立即可以看到效果   同时，在TextureSet Settings中可以看到自动帮我们设置好了前面烘焙好的各种贴图   SP提供的智能材质很多，这些材质帮你省去了手动调参数的步骤，相当于材质模版。材质里面的具体参数我没深究过，所以我也不详细讲各种参数的使用了，这些参数具体可以看SP官方视频或文档。</description>
    </item>
    
    <item>
      <title>[UE4]Get Widget Animation in C&#43;&#43;</title>
      <link>http://www.dawnarc.com/2018/03/ue4get-widget-animation-in-c--/</link>
      <pubDate>Tue, 20 Mar 2018 18:49:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4get-widget-animation-in-c--/</guid>
      <description>keywords：C++操作控制UMG动画、Widget Animation
示例代码：
void UMyMenuWidget::AssignAnimations() { UProperty* prop = GetClass()-&amp;gt;PropertyLink; // Run through all properties of this class to find any widget animations while( prop != nullptr ) { // Only interested in object properties if( prop-&amp;gt;GetClass() == UObjectProperty::StaticClass() ) { UObjectProperty* objectProp = Cast&amp;lt;UObjectProperty&amp;gt;(prop); // Only want the properties that are widget animations if( objectProp-&amp;gt;PropertyClass == UWidgetAnimation::StaticClass() ) { UObject* object = objectProp-&amp;gt;GetObjectPropertyValue_InContainer( this ); UWidgetAnimation* widgetAnim = Cast&amp;lt;UWidgetAnimation&amp;gt;(object); if( widgetAnim !</description>
    </item>
    
    <item>
      <title>[UE4]转载：Windows 远程编译iOS若干问题</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BDwindows-%E8%BF%9C%E7%A8%8B%E7%BC%96%E8%AF%91ios%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 16 Mar 2018 18:35:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BDwindows-%E8%BF%9C%E7%A8%8B%E7%BC%96%E8%AF%91ios%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98/</guid>
      <description>原文
http://wangjie.rocks/2017/11/30/ue4-ios-build-on-windows/
问题一 ssh_exchange_identification: Connection closed by remote hostrsync: connection unexpectedly closed (0 bytes received so far) [sender]rsync error: error in rsync protocol data stream (code 12) at /home/lapo/packaging/rsync-3.0.4-1/src/rsync-3.0.4/io.c(632) [sender=3.0.4]  解决方法
首先保证远程机器 OSX 上的 ssh 并发数配置足够，使用命令查看
grep MaxStartups /etc/ssh/sshd_config  一般输出如下格式 10/20/30 意思是连接达到10之后以20%的概率拒绝新连接直到30为止，可以根据需求调大第一个值并重启
其次保证 RemoteToolChainPrivate.key 文件存在于 C:\Users\用户名\AppData\Roaming\Unreal Engine\UnrealBuildTool\SSHKeys\远程机器地址\mac 文件夹下，没有的话需要在 Edit -&amp;gt; Project Settings&amp;hellip; -&amp;gt; Platforms -&amp;gt; iOS -&amp;gt; Build 中进行配置，配置好远程 OSX 机器的地址，用户名，然后点击 Generate SSH Key 生成
问题二 编译失败，出现如下错误</description>
    </item>
    
    <item>
      <title>[UE4]转载：联机烘焙</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BD%E8%81%94%E6%9C%BA%E7%83%98%E7%84%99/</link>
      <pubDate>Fri, 16 Mar 2018 18:35:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BD%E8%81%94%E6%9C%BA%E7%83%98%E7%84%99/</guid>
      <description>UE4联机烘焙出现问题和解决方式
https://blog.csdn.net/shenmifangke/article/details/78394872
UE4联机编译光照
http://www.cnblogs.com/ghl_carmack/p/8580617.html
如果还是只有在本地编译那么可能会是下列问题造成的：
1、 任务太小，不值得联机编译。
2、 没有打开File And Printer Sharing。
3、 如果是Win10的话切换为专用网络，Win7切换为工作网络或者家庭网络。主要是为了确保已经开启了File And Printer Sharing。
4、 Swarm agent waiting for remotes to become available。一种情况下是它也在自己编译，另外可能就是没有打开File And Printer Sharing。
5、 其它的问题请参考Swarm Agent Troubleshooting
愿你出走半生，归来仍是少年郎。纵使尘满面，鬓如霜。</description>
    </item>
    
    <item>
      <title>[UE4]移动端材质与贴图问题</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%9D%90%E8%B4%A8%E4%B8%8E%E8%B4%B4%E5%9B%BE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 16 Mar 2018 13:10:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%9D%90%E8%B4%A8%E4%B8%8E%E8%B4%B4%E5%9B%BE%E9%97%AE%E9%A2%98/</guid>
      <description>Keywords：android、mobile、material、building、low quality
Rendering参数 现在版本的UE4编译android版本时，默认使用的是最高特效，如果想是为了低配设备编译，可以在Project Settings –》 Engine –》 Rendering -》Mobile中，去掉HDR和Shadowing   OpenGL和Vulkan版本选择 以Android版本为例：
Project Settings -》 Platforms -》 Android -》 Build -》 Support OpenGL ES3.1。默认只使用OpenGL ES2。
iOS版本材质丢失或马赛克的问题(Material Mosaic) 问题现象：
在Mac上以ios渲染模式运行，材质丢失，打包到真机上运行，材质变成马赛克。
解决办法：
打开材质蓝图，勾选Use Full Precision。   参考自：
https://answers.unrealengine.com/questions/211323/layered-landscape-material-on-mobile.html
移动端无法run-time修改Instanced Static Mesh的问题 解决办法：
InstancedStaticMeshComponent::UseDynamicInstanceBuffer 设置为true，默认为false。
相关文档 Scalability Reference https://docs.unrealengine.com/latest/INT/Engine/Performance/Scalability/ScalabilityReference/
Performance Guidelines for Mobile Devices
https://docs.unrealengine.com/latest/INT/Platforms/Mobile/Performance/
Materials for Mobile Platforms https://docs.unrealengine.com/latest/INT/Platforms/Mobile/Materials/
只有诗人同圣徒才能相信，在沥青路上辛勤浇水会培养出百合花来。 ----毛姆</description>
    </item>
    
    <item>
      <title>[Xcode]常用设置与问题</title>
      <link>http://www.dawnarc.com/2018/03/xcode%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8E%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 15 Mar 2018 19:00:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/xcode%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8E%E9%97%AE%E9%A2%98/</guid>
      <description>添加头文件目录   Header Search Paths对应系统或者第三方库的头文件；#include &amp;lt;&amp;gt;
User Header Search Paths 对应用户自己代码的头文件；#include “”
添加静态库依赖   设置证书签名 https://stackoverflow.com/questions/34346436/xcode-7-2-no-matching-provisioning-profiles-found   清除缓存 点击xcode偏好设置-&amp;gt;Locations-&amp;gt;Derived Data，点击箭头定位到目标文件夹，将此文件夹清空并清空回收站，再重新编译即可。 有时候这个错误可以通过清理缓存解决：
Command /usr/bin/codesign failed with exit code 1  编译静态库 http://blog.csdn.net/weidfyr/article/details/50590693
如果用模拟器版本静态库去链接真机版本，可能会出现的错误：
file was built for archive which is not the architecture being linked (arm64)  解决办法：静态库编译成真机版本
禹、汤罪己，其兴也勃焉；桀、纣罪人，其亡也忽焉。 ----《左传·庄公十一年》</description>
    </item>
    
    <item>
      <title>[UE4]Xcode Build Project Failed - Build.sh failed with exit code 5</title>
      <link>http://www.dawnarc.com/2018/03/ue4xcode-build-project-failed---build.sh-failed-with-exit-code-5/</link>
      <pubDate>Mon, 12 Mar 2018 22:08:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4xcode-build-project-failed---build.sh-failed-with-exit-code-5/</guid>
      <description>生成Xcode project file之后，打开Xcode并编译运行（Cmd + R ），提示以下错误:
Command /Users/Shared/EpicGames/UE_4.18/Engine/Build/BatchFiles/Mac/Build.sh failed with exit code 5  解决办法：
打开Launcher -》 Library -》 点击对应引擎版本下拉框 -》 Verify。然后继续编译Xcode工程（不用清理，如果清理重编，可能还会出现exit code 5的错误）
感觉是UE4的bug，出现这种问题的环境是：
Mac OSX 10.13.3，Xcode 9.3，UE4.18 / 4.19
出现这个问题的原因，是因为我的UE4工程引用的第三方库没有对应的Mac版本（x86_64），所以每次一清理就出现exit code 5的错误，将工程所引用的所有第三方库都编译出对应的Mac版本，即可彻底解决此问题。xcode之前没用过，不知道其他C++工程对于缺少链接库的编译错误，是否都报exit code 5错误。
你锋芒太露，这是你的弱点，你像把无鞘刀，锋利，但好刀应在刀鞘里。---- 黑泽明《穿心剑》</description>
    </item>
    
    <item>
      <title>[UE4]Mac Generate Xcode Project Files Command</title>
      <link>http://www.dawnarc.com/2018/03/ue4mac-generate-xcode-project-files-command/</link>
      <pubDate>Mon, 12 Mar 2018 21:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4mac-generate-xcode-project-files-command/</guid>
      <description>command:
cd &amp;quot;/Users/Shared/Epic Games/UE_4.19/Engine/Build/BatchFiles/Mac&amp;quot; sh &amp;quot;/Users/Shared/Epic Games/UE_4.19/Engine/Build/BatchFiles/Mac/GenerateProjectFiles.sh&amp;quot; -project=&amp;quot;/Path/To/Project/TestProj/TestProj.uproject&amp;quot; -game  纵然万劫不复，纵然相思入骨，我也待你眉眼如初，岁月如故。----《没有因为没有所以》</description>
    </item>
    
    <item>
      <title>[UE4]Lightmass Character Indirect Detail Volume</title>
      <link>http://www.dawnarc.com/2018/03/ue4lightmass-character-indirect-detail-volume/</link>
      <pubDate>Fri, 09 Mar 2018 14:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4lightmass-character-indirect-detail-volume/</guid>
      <description>Lightmass Character Indirect Detail Volume与Lightmass Importance Volume作用相似，区别在于后者的作用区域只在地面到角色高度之间，而前者的作用区域是整个Volume。
Lightmass Character Indirect Detail Volume
https://docs.unrealengine.com/en-us/Engine/Actors/Volumes#lightmasscharacterindirectdetailvolume
Volume - Lightmass Character Indirect Detail in Unreal Engine 4
https://www.youtube.com/watch?v=_WrCZ3b2Yys
[UE4]Lighting筆記-Indirect Lighting Cache(間接光照緩存)
https://home.gamer.com.tw/creationDetail.php?sn=3315244
十年饮冰，难凉热血。----梁启超《饮冰室全集》</description>
    </item>
    
    <item>
      <title>[UE4]删除旧的mobileprovision文件(clean ios mobileprovision history)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E5%88%A0%E9%99%A4%E6%97%A7%E7%9A%84mobileprovision%E6%96%87%E4%BB%B6clean-ios-mobileprovision-history/</link>
      <pubDate>Thu, 08 Mar 2018 18:24:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E5%88%A0%E9%99%A4%E6%97%A7%E7%9A%84mobileprovision%E6%96%87%E4%BB%B6clean-ios-mobileprovision-history/</guid>
      <description>清除mobileprovision [Windows]
 C:\Users\&amp;lt;you&amp;gt;\AppData\Local\Apple Computer\MobileDevice\Provisioning Profiles  [Mac]
~/Library/MobileDevice/Provisioning Profiles /Library/MobileDevice/Provisioning Profiles  参考：Remove obsolete mobileprovision profiles (iOS)
https://answers.unrealengine.com/questions/223227/remove-obsolete-mobileprovision-profiles-ios.html
清除Certificate [Windows]
运行（Win +R ） -》输入certmgr.msc，回车 -》 个人 -》 证书 -》删除和Mac相关的证书  当你凝视深渊时，深渊也在凝视着你。----尼采《善恶的彼岸》</description>
    </item>
    
    <item>
      <title>[UE4]转载：在Windows PC上使用Remote Build打包iOS App</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BD%E5%9C%A8windows-pc%E4%B8%8A%E4%BD%BF%E7%94%A8remote-build%E6%89%93%E5%8C%85ios-app/</link>
      <pubDate>Thu, 08 Mar 2018 18:19:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E8%BD%AC%E8%BD%BD%E5%9C%A8windows-pc%E4%B8%8A%E4%BD%BF%E7%94%A8remote-build%E6%89%93%E5%8C%85ios-app/</guid>
      <description>How to setup Remote Build ?
https://answers.unrealengine.com/questions/450714/how-to-setup-remote-build.html
[UE4]在Windows PC上打包纯蓝图工程 https://www.jianshu.com/p/7c62ec452ce1
[UE4]在Windows PC上使用Remote Build打包iOS App（C++或蓝图）
https://www.jianshu.com/p/8770044771e3
Building iOS game in Unreal Engine 4 via remote machine
http://zompi.pl/building-ios-game-in-unreal-engine-4-via-remote-machine/
如果一切看起来尽在掌控之中，那说明你跑得不够快；如果你身高会中冷箭，说明你走在他们面前；如果你会被他们伤到，说明你走得不够远，还在他们的射程以内。不要停下来解释，只需要继续前进，把他们远远甩在后面。</description>
    </item>
    
    <item>
      <title>[Xcode]常用操作</title>
      <link>http://www.dawnarc.com/2018/03/xcode%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 07 Mar 2018 20:29:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/xcode%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>构建 command + R
清理工程 command + shift + K
当前工程根目录的环境变量（.xcworkspace文件所在目录） $(SRCROOT)  头文件搜索路径 Always Search User Paths 是否优先使用User Header Search Paths
Header Search Paths 编译器的头文件目录
User Header Search Paths 自己工程的头文件目录
修改编译输出目录 Build Settings -&amp;gt; Build Locations -&amp;gt; Build Products Path
修改后需要重启xcode才会生效。
参考：http://blog.csdn.net/tintinr/article/details/50936313
iOS 静态库制作（Xcode9.0）
http://blog.csdn.net/wanna_dance/article/details/78687676
人们最好在运筹帷幄时胆小一点，并想到所有不良后果；但在必须行动的时候，便要大胆敢为。</description>
    </item>
    
    <item>
      <title>[iOS]protobuf2.6编译iOS版本静态库</title>
      <link>http://www.dawnarc.com/2018/03/iosprotobuf2.6%E7%BC%96%E8%AF%91ios%E7%89%88%E6%9C%AC%E9%9D%99%E6%80%81%E5%BA%93/</link>
      <pubDate>Wed, 07 Mar 2018 19:20:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/iosprotobuf2.6%E7%BC%96%E8%AF%91ios%E7%89%88%E6%9C%AC%E9%9D%99%E6%80%81%E5%BA%93/</guid>
      <description>将以下脚本保存为shell脚本并运行：
sh build-protobuf-2.6.1.sh  build-protobuf-2.6.1.sh
#!/bin/bash -x echo &amp;quot;$(tput setaf 2)&amp;quot; echo Building Google Protobuf for Mac OS X / iOS. echo Use &#39;tail -f build.log&#39; to monitor progress. echo &amp;quot;$(tput sgr0)&amp;quot; # Controls which architectures are build/included in the # universal binaries and libraries this script produces. # Set each to &#39;1&#39; to include, &#39;0&#39; to exclude. BUILD_X86_64_MAC=1 BUILD_X86_64_IOS_SIM=1 BUILD_I386_IOS_SIM=1 BUILD_ARMV7_IPHONE=1 BUILD_ARMV7S_IPHONE=1 BUILD_ARM64_IPHONE=1 PB_VERSION=2.6.1 # Set this to the replacement name for the &#39;google&#39; namespace.</description>
    </item>
    
    <item>
      <title>[iOS]mac平台用cmake编译ios lib</title>
      <link>http://www.dawnarc.com/2018/03/iosmac%E5%B9%B3%E5%8F%B0%E7%94%A8cmake%E7%BC%96%E8%AF%91ios-lib/</link>
      <pubDate>Tue, 06 Mar 2018 17:56:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/iosmac%E5%B9%B3%E5%8F%B0%E7%94%A8cmake%E7%BC%96%E8%AF%91ios-lib/</guid>
      <description>转载自：https://github.com/Tencent/ncnn/wiki/cmake-%E6%89%93%E5%8C%85-ios-sdk
安装 xcode 和 cmake xcode https://developer.apple.com/xcode/download
cmake OS X版本 https://cmake.org/download
默认情况 cmake 命令行可能用不了，需要手工加在 PATH 里面
export PATH=/Applications/CMake.app/Contents/bin/:$PATH  准备 ios toolchain 文件 把 ios.toolchain.cmake 放到和 CMakeLists.txt 同一级的项目目录里 可以去 opencv 的 github 上弄来，自己稍微调整下。
传送门 https://github.com/Itseez/opencv/tree/master/platforms/ios/cmake
编译方法 mkdir build-ios cd build-ios cmake -DCMAKE_BUILD_TYPE=Release \ -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake \ -DIOS_PLATFORM=iPhoneOS \ -DCMAKE_OSX_ARCHITECTURES=armv7 .. make make install make package  没有遇到错误的话，手机平台 armv7 库已经编好了
这里简要介绍几个参数
 IOS_PLATFORM 是平台名字，iPhoneOS 是真实机器的 ios，iPhoneSimulator 是模拟器平台 CMAKE_OSX_ARCHITECTURES 指定架构，iPhoneOS 配套 armv7 armv7s arm64，iPhoneSimulator 配套 i386 x86_64  CMakeLists.</description>
    </item>
    
    <item>
      <title>[Tools]Jira7.3安装步骤</title>
      <link>http://www.dawnarc.com/2018/03/toolsjira7.3%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Tue, 06 Mar 2018 11:29:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/toolsjira7.3%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</guid>
      <description>烂泥：jira7.3&amp;frasl;7.2安装、中文及破解(20170829更新)
https://www.ilanni.com/?p=12119
向来缘浅，奈何情深。----《何以笙箫默》</description>
    </item>
    
    <item>
      <title>[UE4]Foliage Instance Cull Distance(Instanced植被距离裁剪)</title>
      <link>http://www.dawnarc.com/2018/03/ue4foliage-instance-cull-distanceinstanced%E6%A4%8D%E8%A2%AB%E8%B7%9D%E7%A6%BB%E8%A3%81%E5%89%AA/</link>
      <pubDate>Mon, 05 Mar 2018 17:51:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4foliage-instance-cull-distanceinstanced%E6%A4%8D%E8%A2%AB%E8%B7%9D%E7%A6%BB%E8%A3%81%E5%89%AA/</guid>
      <description>在植被编辑面板的Instance Settings中，Cull Distance的Min设置为默认值0，Max改为需要的距离，以RTS视角为例，Max设置为300。这样摄像机投射在底面上的点与植被的距离超过300后，植被就会被自动隐藏掉。
  孰能浊以静之徐清，孰能安以动之徐生？ ----《老子》</description>
    </item>
    
    <item>
      <title>[UE4]Cull Distance Volume(距离裁剪)用法</title>
      <link>http://www.dawnarc.com/2018/03/ue4cull-distance-volume%E8%B7%9D%E7%A6%BB%E8%A3%81%E5%89%AA%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 04 Mar 2018 13:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4cull-distance-volume%E8%B7%9D%E7%A6%BB%E8%A3%81%E5%89%AA%E7%94%A8%E6%B3%95/</guid>
      <description>keywords：UE4、Cull Distance Volume、距离裁剪、遮挡剔除
排除物体 打开编辑器，在World Outline（不是Content Browser中的static mesh双击后的编辑面板，而是static mesh拖拽到场景中之后的实例对象的属性面板）。选中要排除的物体，打开Show All Advanced Details，找到LOD -》 去掉勾选 All Cull Distance Volume。   常用的Distance级别设置   Cull Distance Volume在游戏运行时才有效，在编辑器非运行期间拖拉摄像机无效。
 识不足则多虑；威不足则多怒；信不足则多言。----弘一法师</description>
    </item>
    
    <item>
      <title>[UE4]物体跟随Spline路径移动(Move Along Spline Path)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E7%89%A9%E4%BD%93%E8%B7%9F%E9%9A%8Fspline%E8%B7%AF%E5%BE%84%E7%A7%BB%E5%8A%A8move-along-spline-path/</link>
      <pubDate>Sun, 04 Mar 2018 13:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E7%89%A9%E4%BD%93%E8%B7%9F%E9%9A%8Fspline%E8%B7%AF%E5%BE%84%E7%A7%BB%E5%8A%A8move-along-spline-path/</guid>
      <description>先建一个普通的Actor蓝图，然后再蓝图中添加Spline Component（注意：不是Spline Mesh Component）   然后编辑路径，如果要添加新节点，右键路径 -》 Add Spline Point Here。   然后把该Actor蓝图拖到场景中，然后在相应蓝图（比如角色蓝图）中编辑移动逻辑：   (图片放大：复制图片地址单独打开)
将Spline 曲线打直（Turn Splines curves into straight Spline paths） 选中需要打直的曲线，在Detail面板中找到：Selected Points -》 Type，修改为Linear，默认为Curve。
君子和而不同，小人同而不和。 ----《论语》</description>
    </item>
    
    <item>
      <title>[MacOS]编译Mac版本的protobuf2.6步骤</title>
      <link>http://www.dawnarc.com/2018/03/macos%E7%BC%96%E8%AF%91mac%E7%89%88%E6%9C%AC%E7%9A%84protobuf2.6%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Sat, 03 Mar 2018 18:35:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/macos%E7%BC%96%E8%AF%91mac%E7%89%88%E6%9C%AC%E7%9A%84protobuf2.6%E6%AD%A5%E9%AA%A4/</guid>
      <description>假设是在全新的Mac系统上安装protobuf 2.6
1，安装brew
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;  2，安装automake
brew install automake  3，安装libtool
brew install libtool  4，安装protobuf
分两种方式：
4.1，brew安装
brew install protobuf  4.2，下载protobuf源码，并cd到源码目录
sh autogen.sh  然后会提示：
Failed to connect to googletest.googlecode.com port 80: Operation timed out  这是因为autogen.sh中有去下载gtest，但是这个gtest地址是404，即使开启了科学上网工具。
解决办法：手动下载gtest并放到protobuf根目录，并改名为gtest。下载地址：https://github.com/google/googletest/tree/release-1.5.0
然后依次执行以下命令：
sh autogen.sh ./configure make make check sudo make install  最后检测是否安装成功：
protoc --version  常见问题 问题1 ./autogen.sh: 48: autoreconf: not found  解决办法：
brew install automake  问题2 configure.</description>
    </item>
    
    <item>
      <title>[UE4]大规模场景的优化(Large Scale Scene Optimization)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%9C%BA%E6%99%AF%E7%9A%84%E4%BC%98%E5%8C%96large-scale-scene-optimization/</link>
      <pubDate>Sat, 03 Mar 2018 18:31:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%9C%BA%E6%99%AF%E7%9A%84%E4%BC%98%E5%8C%96large-scale-scene-optimization/</guid>
      <description>keywords: 场景优化，Scene Optimization
Here are a few tips:
Start with dividing your project in logical smaller sub areas. Decide where you want more detail or what will be just background architecture. - use less detail in background areas. - the bigger your scene the more optimized it needs to be. Not just for performance but also for light map size or texture caching.
This brings us to the next problem: Lighting.</description>
    </item>
    
    <item>
      <title>[UE4]Precomputed Visibility Volume用法</title>
      <link>http://www.dawnarc.com/2018/03/ue4precomputed-visibility-volume%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 03 Mar 2018 11:22:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4precomputed-visibility-volume%E7%94%A8%E6%B3%95/</guid>
      <description>keywords: 预计算可视性，场景优化，Scene Optimization
Precomputed visibility not working on Mobile/MobilePIE
https://answers.unrealengine.com/questions/406345/precomputed-visibility-not-working-on-mobilemobile.html
PRECOMPUTED VISIBILITY VOLUMES
http://timhobsonue4.snappages.com/culling-precomputed-visibility-volumes
早知如此绊人心，何如当初莫相识。----李白《秋风词》</description>
    </item>
    
    <item>
      <title>[UE4]材质性能优化(Material Performance Optimization)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E6%9D%90%E8%B4%A8%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96material-performance-optimization/</link>
      <pubDate>Sat, 03 Mar 2018 11:22:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E6%9D%90%E8%B4%A8%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96material-performance-optimization/</guid>
      <description>Performance Guidelines for Artists and Designers
https://docs.unrealengine.com/latest/INT/Engine/Performance/Guidelines/
我希望我的文字，是一场一场的梦，是一阵一阵的风，是一片一片的月光。那些生活于尘土中的人们，那些在四季轮回中迷失了方向的人们，那些在大地的收货和欠收中痛苦和欣喜的人们，他们会有一个朝上仰望的这样一颗心灵。如果文学还能做什么，那么，文学需要承载大地上所有的苦难和沉重，让人们抬起头来，朝着云端去望，朝着树叶去望。这就是文学唯一能给我们的一点安慰。----刘亮程</description>
    </item>
    
    <item>
      <title>[UE4]障碍物检测(Line Trace)实例(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E9%9A%9C%E7%A2%8D%E7%89%A9%E6%A3%80%E6%B5%8Bline-trace%E5%AE%9E%E4%BE%8Bc--/</link>
      <pubDate>Fri, 02 Mar 2018 18:46:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E9%9A%9C%E7%A2%8D%E7%89%A9%E6%A3%80%E6%B5%8Bline-trace%E5%AE%9E%E4%BE%8Bc--/</guid>
      <description>检测两个坐标点之间是否可见的StaticMesh（障碍物检测）
FCollisionQueryParams TraceParams(TEXT(&amp;quot;TraceActor&amp;quot;), true, this); TraceParams.bTraceAsyncScene = true; TraceParams.bReturnPhysicalMaterial = false; TraceParams.bTraceComplex = false; FHitResult Hit(ForceInit); GetWorld()-&amp;gt;LineTraceSingleByChannel(Hit, SelfLoc, TargetLoc, ECC_Visibility, TraceParams); UStaticMeshComponent* MeshComp = Cast&amp;lt;UStaticMeshComponent&amp;gt;(Hit.GetComponent()); if (MeshComp) { ... }  一些普通人也获得了巨大的成功，只是因为他们不知道何时放弃。</description>
    </item>
    
    <item>
      <title>[UE4]时间膨胀(Time Dilation)</title>
      <link>http://www.dawnarc.com/2018/03/ue4%E6%97%B6%E9%97%B4%E8%86%A8%E8%83%80time-dilation/</link>
      <pubDate>Fri, 02 Mar 2018 16:20:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/03/ue4%E6%97%B6%E9%97%B4%E8%86%A8%E8%83%80time-dilation/</guid>
      <description>keywords: UE4 slow down game speed, slow down character motion.
全局时间膨胀
UGameplayStatics::SetGlobalTimeDilation(GetWorld(), 0.4);  单个对象时间膨胀
this-&amp;gt;CustomTimeDilation = 0.4;  参考：
Global time dilation and C++ spinning objects
https://answers.unrealengine.com/questions/473060/global-time-dilation-and-c-spinning-objects-need-h.html
亦舒说，美貌的最高级别是明明很美，却不觉得自己美。那么优秀的最高级别呢？或许是明明非常出色，却不把自己的出色太当回事儿。</description>
    </item>
    
    <item>
      <title>[UE4]Montage Section切换无效的问题</title>
      <link>http://www.dawnarc.com/2018/02/ue4montage-section%E5%88%87%E6%8D%A2%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 11 Feb 2018 21:58:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4montage-section%E5%88%87%E6%8D%A2%E6%97%A0%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>keywords: UE4 Montage Section not working
问题现象：
SetNextSection在编辑器中运行正常，但是在打包版本中无效。
解决办法：
将SetNextSection替换为JumpToSection。
参考自：Montage unwanted section switching
https://answers.unrealengine.com/questions/172537/montage-unwanted-section-switching.html
人生如逆旅，我亦是行人。----苏轼《临江仙》</description>
    </item>
    
    <item>
      <title>[Android NDK]protobuf-lite 2.6编译与protoc生成代码编译</title>
      <link>http://www.dawnarc.com/2018/02/android-ndkprotobuf-lite-2.6%E7%BC%96%E8%AF%91%E4%B8%8Eprotoc%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Sun, 11 Feb 2018 12:27:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/android-ndkprotobuf-lite-2.6%E7%BC%96%E8%AF%91%E4%B8%8Eprotoc%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/</guid>
      <description>Protobuf源码与protoc生成代码编译成一个静态库 工程结构：
MyProj |-jni |- Android.mk |- Application.mk |- google |- protobuf |- io |- stubs |- proto_gen_src  其中，google为protobuf的源码；proto_gen_src为protoc生成的代码，即：*.pb.cc。
Android.mk
LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) CC_LITE_SRC_FILES := \ google/protobuf/stubs/common.cc \ google/protobuf/stubs/once.cc \ google/protobuf/extension_set.cc \ google/protobuf/generated_message_util.cc \ google/protobuf/message_lite.cc \ google/protobuf/repeated_field.cc \ google/protobuf/wire_format_lite.cc \ google/protobuf/io/coded_stream.cc \ google/protobuf/io/zero_copy_stream.cc \ google/protobuf/io/zero_copy_stream_impl_lite.cc # C++ full library # ======================================================= #include $(CLEAR_VARS) LOCAL_MODULE := MyProj.ndk LOCAL_MODULE_TAGS := optional LOCAL_CPP_EXTENSION := .cc #protobuf源码目录 LOCAL_SRC_FILES += \ $(CC_LITE_SRC_FILES) #protoc生成代码的目录 MY_CPP_LIST := $(wildcard $(LOCAL_PATH)/proto_gen_src/*.</description>
    </item>
    
    <item>
      <title>[UE4]Unreal商标动画logo获取地址</title>
      <link>http://www.dawnarc.com/2018/02/ue4unreal%E5%95%86%E6%A0%87%E5%8A%A8%E7%94%BBlogo%E8%8E%B7%E5%8F%96%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Sun, 11 Feb 2018 10:34:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4unreal%E5%95%86%E6%A0%87%E5%8A%A8%E7%94%BBlogo%E8%8E%B7%E5%8F%96%E5%9C%B0%E5%9D%80/</guid>
      <description>UNREAL ENGINE BRANDING GUIDELINES AND TRADEMARK USAGE
https://www.unrealengine.com/en-US/branding/
Unreal Engine Static Logo https://epicgames.app.box.com/s/dzi271i7lenfe0hr6t7ihgbs981lvypd
Unreal Engine Logo Motion Graphics
https://epicgames.app.box.com/s/sm5ih4qtb94sjrvxnjz84ytfmam4ppdx
要么庸俗，要么孤独。----叔本华《要么孤独，要么庸俗》</description>
    </item>
    
    <item>
      <title>[UE4]引擎源码分析之：Memory</title>
      <link>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bmemory/</link>
      <pubDate>Wed, 07 Feb 2018 17:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bmemory/</guid>
      <description>内存管理的入口：
Engine\Source\Runtime\Core\Public\HAL\UnrealMemory.h  内存池中的内存开辟和销毁
Engine\Source\Runtime\Core\Private\HAL\MallocBinned.cpp  MallocBinned.cpp主要函数 内存池的创建：
static FPoolInfo* AllocatePoolMemory(FMallocBinned&amp;amp; Allocator, FPoolTable* Table, uint32 PoolSize, uint16 TableIndex) { const uint32 PageSize = Allocator.PageSize; // Must create a new pool. uint32 Blocks = PoolSize / Table-&amp;gt;BlockSize; uint32 Bytes = Blocks * Table-&amp;gt;BlockSize; UPTRINT OsBytes = Align(Bytes, PageSize); checkSlow(Blocks &amp;gt;= 1); checkSlow(Blocks * Table-&amp;gt;BlockSize &amp;lt;= Bytes &amp;amp;&amp;amp; PoolSize &amp;gt;= Bytes); // Allocate memory. FFreeMem* Free = nullptr; SIZE_T ActualPoolSize; //TODO: use this to reduce waste?</description>
    </item>
    
    <item>
      <title>[UE4]Live Plugin</title>
      <link>http://www.dawnarc.com/2018/02/ue4live-plugin/</link>
      <pubDate>Tue, 06 Feb 2018 10:16:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4live-plugin/</guid>
      <description>SubstancePainter: UE4 Livelink Plugin
https://www.youtube.com/watch?v=jWUBrd_5_qE
Maya: UE4 Livelink Plugin
https://youtu.be/C5DsfrBDIVQ?t=621
世界以痛吻我，要我报之以歌。----泰戈尔《飞鸟集》</description>
    </item>
    
    <item>
      <title>[VersionControl]svn常用命令行命令</title>
      <link>http://www.dawnarc.com/2018/02/versioncontrolsvn%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 06 Feb 2018 10:16:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/versioncontrolsvn%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
      <description>检出 （简写：svn co）
svn checkout url --username=*** --password=*** path //第一次check out svn checkout url //不是第一次check out  添加
svn add file //添加指定文件 svn add *.cpp //添加当前目录下的所有的cpp文件 svn add * --no-ignore 文件夹 //添加指定文件夹下的所有文件（包括忽略的文件类型.a、.pdb等）  提交（简写：svn ci）
svn commit -m &amp;quot;LogMessage&amp;quot;  更新（简写：svn up）
svn update . //更新当前目录 svn update test.cpp //更新指定文件 svn update -r 200 test.cpp //更新指定文件到指定版本  回退
svn revert . --depth=infinity //整个目录回退  回退到旧版本并提交
svn update //回退前要保证版本更新到最新，假设最新版本为150，准备回退到140 svn merge -r 150:140 .</description>
    </item>
    
    <item>
      <title>[UE4]UObject LoadConfig</title>
      <link>http://www.dawnarc.com/2018/02/ue4uobject-loadconfig/</link>
      <pubDate>Mon, 05 Feb 2018 21:01:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4uobject-loadconfig/</guid>
      <description>UObject支持从一个ini配置文件导入数据
Engine\Source\Runtime\CoreUObject\Public\UObject\Object.h
/** * Imports property values from an .ini file. * * @param Class the class to use for determining which section of the ini to retrieve text values from * @param Filename indicates the filename to load values from; if not specified, uses ConfigClass&#39;s ClassConfigName * @param PropagationFlags indicates how this call to LoadConfig should be propagated; expects a bitmask of UE4::ELoadConfigPropagationFlags values. * @param PropertyToLoad if specified, only the ini value for the specified property will be imported.</description>
    </item>
    
    <item>
      <title>[UE4]引擎源码分析之：GarbageCollection</title>
      <link>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bgarbagecollection/</link>
      <pubDate>Sun, 04 Feb 2018 15:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bgarbagecollection/</guid>
      <description>Engine\Source\Runtime\CoreUObject\Private\UObject\GarbageCollection.cpp
垃圾回收的逻辑堆栈（MainThread）：
UE4Editor-CoreUObject.dll!CollectGarbageInternal(EObjectFlags KeepFlags, bool bPerformFullPurge) Line 1496 UE4Editor-CoreUObject.dll!TryCollectGarbage(EObjectFlags KeepFlags, bool bPerformFullPurge) Line 1560 UE4Editor-Engine.dll!UEngine::PerformGarbageCollectionAndCleanupActors() Line 1134 UE4Editor-Engine.dll!UEngine::ConditionalCollectGarbage() Line 1108 UE4Editor-Engine.dll!UWorld::Tick(ELevelTick TickType, float DeltaSeconds) Line 1612 UE4Editor-UnrealEd.dll!UEditorEngine::Tick(float DeltaSeconds, bool bIdleMode) Line 1481 UE4Editor-UnrealEd.dll!UUnrealEdEngine::Tick(float DeltaSeconds, bool bIdleMode) Line 401 UE4Editor.exe!FEngineLoop::Tick() Line 3320 [Inline Frame] UE4Editor.exe!EngineTick() Line 62  人才的本领叫做技术，天才的创意叫做艺术。</description>
    </item>
    
    <item>
      <title>[UE4]引擎源码分析之：Load Object</title>
      <link>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bload-object/</link>
      <pubDate>Sat, 03 Feb 2018 23:06:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bload-object/</guid>
      <description>从FStreamableManager::LoadSynchronous到FUObjectHashTables AddObject的堆栈：
UE4Editor-CoreUObject.dll!HashObject(UObjectBase * Object) Line 904 UE4Editor-CoreUObject.dll!UObjectBase::AddObject(FName InName, EInternalObjectFlags InSetInternalFlags) Line 246 UE4Editor-CoreUObject.dll!UObjectBase::UObjectBase(UClass * InClass, EObjectFlags InFlags, EInternalObjectFlags InInternalFlags, UObject * InOuter, FName InName) Line 102 UE4Editor-CoreUObject.dll!StaticAllocateObject(UClass * InClass, UObject * InOuter, FName InName, EObjectFlags InFlags, EInternalObjectFlags InternalSetFlags, bool bCanRecycleSubobjects, bool * bOutRecycledSubobject) Line 2434 UE4Editor-CoreUObject.dll!StaticConstructObject_Internal(UClass * InClass, UObject * InOuter, FName InName, EObjectFlags InFlags, EInternalObjectFlags InternalSetFlags, UObject * InTemplate, bool bCopyTransientsFromClassDefaults, FObjectInstancingGraph * InInstanceGraph, bool bAssumeTemplateIsArchetype) Line 3161 [Inline Frame] UE4Editor-CoreUObject.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]两个连续感叹号(双感叹号)的意义</title>
      <link>http://www.dawnarc.com/2018/02/c--%E4%B8%A4%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%84%9F%E5%8F%B9%E5%8F%B7%E5%8F%8C%E6%84%9F%E5%8F%B9%E5%8F%B7%E7%9A%84%E6%84%8F%E4%B9%89/</link>
      <pubDate>Sat, 03 Feb 2018 21:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/c--%E4%B8%A4%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%84%9F%E5%8F%B9%E5%8F%B7%E5%8F%8C%E6%84%9F%E5%8F%B9%E5%8F%B7%E7%9A%84%E6%84%8F%E4%B9%89/</guid>
      <description>一种获取bool值的技巧，在获取bool值的同时有保证代码有可读性。
比如这种写法，直接将一个指针赋给一个bool值，看上去有点怪，不利于阅读。
void Test(A* Ptr) { bool b = Ptr; ... }  但是加两个感叹号，就可以清楚表明我是要明确获得一个bool。
void Test(A* Ptr) { bool b = !!Ptr; ... }  当然用三元运算符? : 也可以，不过要多敲一些字符。
void Test(A* Ptr) { bool b = Ptr ? true : false; ... }  三种方式的CPU指令数是完全一样，开销相同。
 bool b = !!Ptr; 003EA318 cmp dword ptr [Ptr],0 003EA31C je Test+6Ah (03EA32Ah) 003EA31E mov dword ptr [ebp-0E8h],1 003EA328 jmp Test+74h (03EA334h) 003EA32A mov dword ptr [ebp-0E8h],0 003EA334 mov al,byte ptr [ebp-0E8h] 003EA33A mov byte ptr [b],al  时间是一只藏在黑暗中的温柔的手，在你一出神一恍惚之间，物走星移。----龙应台《目送》</description>
    </item>
    
    <item>
      <title>[UE4]引擎源码分析之：State</title>
      <link>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bstate/</link>
      <pubDate>Sat, 03 Feb 2018 21:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/02/ue4%E5%BC%95%E6%93%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bstate/</guid>
      <description>Engine\Source\Runtime\Core\Public\Stats\Stats.h
State作用是用来收集性能分析相关的数据，命令行执行的stat命令，展示的数据都在State.h中。
我所理解的美好生活，是春天有花夏天有海，秋天落叶冬天下雪。</description>
    </item>
    
    <item>
      <title>[Python]从相对路径导入(Importing from a relative path)</title>
      <link>http://www.dawnarc.com/2018/01/python%E4%BB%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%AF%BC%E5%85%A5importing-from-a-relative-path/</link>
      <pubDate>Wed, 31 Jan 2018 20:02:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/python%E4%BB%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%AF%BC%E5%85%A5importing-from-a-relative-path/</guid>
      <description>假设python工程结构如下：
Proj/ Client/ Client.py Server/ Server.py Common/ __init__.py Common.py  要在Client.py中import Common目录。代码如下：
import sys, os sys.path.append(os.path.join(os.path.dirname(__file__), &#39;..&#39;, &#39;Common&#39;)) import Common  其中os.path.dirname(file)表示当前python脚本的所在目录。
参考：
Importing from a relative path in Python
https://stackoverflow.com/questions/7505988/importing-from-a-relative-path-in-python
我行过许多地方的桥，看过许多次数的云，喝过许多种类的酒，却只爱过一个正当最好年龄的人。----沈从文《湘行散记》</description>
    </item>
    
    <item>
      <title>[hugo]集成Highlight.js</title>
      <link>http://www.dawnarc.com/2018/01/hugo%E9%9B%86%E6%88%90highlight.js/</link>
      <pubDate>Wed, 31 Jan 2018 15:29:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/hugo%E9%9B%86%E6%88%90highlight.js/</guid>
      <description>方式一：修改config.toml（推荐） 在config.toml中开启highlight.js
[params] syntaxHighlighter = &amp;quot;highlight.js&amp;quot; customCSS = [&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/solarized-light.min.css&amp;quot;]  其中customCSS指定的是highlight的style名称，如果不设置，则会使用highlight.js的默认style。
这种方式需要hugo的theme提供highlight.js支持，hugo默认theme不支持这种方式。已知的支持highlight.js的hugo theme：https://github.com/kakawait/hugo-tranquilpeak-theme
 方式二：修改header.html 在theme的./layouts/partials或者./layouts/chrome/目录下，找到header.html或者header.includes.html文件，然后再在&amp;lt;header&amp;gt;标签内添加cdn地址：
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css&amp;quot;&amp;gt; &amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;  highlight.js的最新cdn地址获取
https://highlightjs.org/download/
如果要修改style，直接修改default.min.css的名字，比如想使用vs风格，那么就将
href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css&amp;quot;  修改为
href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/vs.min.css&amp;quot;  上述两种方式设置后，hugo文章模板中的所有代码都会统一替换为highlight.js风格，不用在修改原有的.md文件。
highlight.js style演示合集 https://highlightjs.org/static/demo/
Hugo highlight语法：Syntax Highlighting https://bwaycer.github.io/hugo_tutorial.hugo/extras/highlighting/#highlight-js-example
胡者，天之骄子也。----《汉书》</description>
    </item>
    
    <item>
      <title>[UE4]统计图表Statistics</title>
      <link>http://www.dawnarc.com/2018/01/ue4%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8statistics/</link>
      <pubDate>Mon, 29 Jan 2018 14:54:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8statistics/</guid>
      <description>统计资源面数 统计类型选择：Primitive Stats   Tris表示单个Mesh的三角面；SumTris表示该类型的Mesh面数总和。   一个人生命中最大的幸运，莫过于在他的人生中途，即在他年富力强的时候发现了自己的使命。 ----茨威格《人类群星闪耀时》</description>
    </item>
    
    <item>
      <title>[UE4]Cel Shading(卡通渲染)</title>
      <link>http://www.dawnarc.com/2018/01/ue4cel-shading%E5%8D%A1%E9%80%9A%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Mon, 29 Jan 2018 14:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4cel-shading%E5%8D%A1%E9%80%9A%E6%B8%B2%E6%9F%93/</guid>
      <description>keywords：Cel Shading、Cartoon Shader、卡通渲染、无主之地风格
Cel Shading Post Process
https://wiki.unrealengine.com/Cel_Shading_Post_Process
UE4 Tutorial: Toon Shader (Borderlands/Jet Set Radio)
https://www.youtube.com/watch?v=0UBNXneL1oo
UE4 - Tutorial - Cel Shading!
https://www.youtube.com/watch?v=_bpQoI5Xrx8
Stylized Rendering Post Processing
https://docs.unrealengine.com/en-us/Resources/Showcases/Stylized/PostProcessing
所谓自由，不是随心所欲，而是自我主宰。</description>
    </item>
    
    <item>
      <title>[UE4]资源异步加载(Assets Asynchronous Loading)与内存释放(Free Memory)</title>
      <link>http://www.dawnarc.com/2018/01/ue4%E8%B5%84%E6%BA%90%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BDassets-asynchronous-loading%E4%B8%8E%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BEfree-memory/</link>
      <pubDate>Fri, 26 Jan 2018 00:42:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4%E8%B5%84%E6%BA%90%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BDassets-asynchronous-loading%E4%B8%8E%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BEfree-memory/</guid>
      <description>为什么需要异步加载资源，因为当一次性加载的资源较多或者单个资源较大时，普通的LoadObject()方式会阻塞引擎的主线程。
假设测试工程叫TestTD4，自定义Character叫ATestTD4Character（头文件为TestTD4Character.h）
假设在Content/Assets/目录下放了三个动画文件（AnimSequence）。
异步加载 通过DefaultGame.ini配置文件生成FSoftObjectPath DefaultGame.ini
[/Script/TestTD4.TestTD4Character] +TestAssets=/Game/Assets/ThirdPerson_Jump.ThirdPerson_Jump +TestAssets=/Game/Assets/ThirdPersonRun.ThirdPersonRun +TestAssets=/Game/Assets/ThirdPersonWalk.ThirdPersonWalk  TestTD4Character.h
UPROPERTY(Config) TArray&amp;lt;FSoftObjectPath&amp;gt; TestAssets;  这个属性的意思是：加Config标签表示从DefaultGame.ini读取，TestAssets就是DefaultGame.ini中配置的属性名，当游戏启动时，这个数组会被自动填充3个元素，即资源的路径。
注：4.18版本中FStringAssetReference、TAssetPtr两个变量被重命名为：FSoftObjectPath、TSoftObjectPtr.
 TestTD4Character.cpp
void ATestTD4Character::BeginPlay() { Super::BeginPlay(); for (FSoftObjectPath&amp;amp; Asset : TestAssets) { GEngine-&amp;gt;AddOnScreenDebugMessage(-1, 3, FColor::Cyan, Asset.ToString()); } FStreamableManager&amp;amp; AssetLoader = UAssetManager::GetStreamableManager(); AssetLoader.RequestAsyncLoad(TestAssets, FStreamableDelegate::CreateUObject(this, &amp;amp;ATestTD4Character::AnimAssetsDeferred)); } void ATestTD4Character::AnimAssetsDeferred() { for (FSoftObjectPath SoftObj : TestAssets) { TAssetPtr&amp;lt;UAnimSequence&amp;gt; AnimAsset(SoftObj); UAnimSequence* AnimObj = AnimAsset.Get(); if (AnimObj) { GEngine-&amp;gt;AddOnScreenDebugMessage(-1, 3, FColor::Red, AnimObj-&amp;gt;GetName()); } } }  打印结果：</description>
    </item>
    
    <item>
      <title>[MacOS]通过 U 盘启动重装 macOS 系统</title>
      <link>http://www.dawnarc.com/2018/01/macos%E9%80%9A%E8%BF%87-u-%E7%9B%98%E5%90%AF%E5%8A%A8%E9%87%8D%E8%A3%85-macos-%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 23 Jan 2018 20:35:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/macos%E9%80%9A%E8%BF%87-u-%E7%9B%98%E5%90%AF%E5%8A%A8%E9%87%8D%E8%A3%85-macos-%E7%B3%BB%E7%BB%9F/</guid>
      <description>重装系统是工作和生活中经常需要做的事情，作为一名开发人员，学会该技能你才是一名合格的程序猿！以后再也不会遇到“程旭元你会装系统吗？”的尴尬了！本文主要介绍怎样通过U盘启动重新安装 macOS 系统，以安装当前最新的 macOS Sierra 10.12 为例。
一、准备工作  准备一个 8G 或以上的U盘，请备份U盘里面的数据，后面的操作会抹掉U盘中的数据；
 在 AppStore 中下载 macOS Sierra 安装包；或者通过其他途径下载，拖动至自己的应用程序（Applications）文件夹。
  二、格式化U盘  插入U盘，前往「应用程序」-&amp;gt;「实用工具」里面找到并打开「磁盘工具」；
 在左方列表中找到 U 盘的名称并点击
 右边顶部选择「分区」，然后在「分区布局」选择「1个分区」
 在分区信息中的 「名称」输入「myl」 (由于后面的命令中会用到此名称，如果你要修改成其它名称，请务必对应修改后面的命令)
 在「格式」中选择 「Mac OS 扩展 (日志式)」
 这时，先别急着点“应用”，还要先在 「选项」里面，选择「GUID 分区表」
 开始格式化
  三、制作启动盘  在「应用程序」-&amp;gt;「实用工具」里面找到「终端」并打开；
 复制下面的命令，并粘贴到「终端」里，按回车运行
$ sudo /Applications/Install\ macOS\ Sierra.app/Contents/Resources/createinstallmedia &amp;ndash;volume /Volumes/myl &amp;ndash;applicationpath /Applications/Install\ macOS\ Sierra.app &amp;ndash;nointeraction
  回车后，系统会提示你输入管理员密码，接下来就是等待系统开始制作启动盘了。这时，命令执行中你会陆续看到类似以下的信息：
WARNING: Improper use of the sudo command could lead to data loss or the deletion of important system files.</description>
    </item>
    
    <item>
      <title>[Dlang]Comparing compilation time of random code in C&#43;&#43;, D, Go, Pascal and Rust</title>
      <link>http://www.dawnarc.com/2018/01/dlangcomparing-compilation-time-of-random-code-in-c---d-go-pascal-and-rust/</link>
      <pubDate>Wed, 17 Jan 2018 18:20:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/dlangcomparing-compilation-time-of-random-code-in-c---d-go-pascal-and-rust/</guid>
      <description>原文：https://imgur.com/a/jQUav#xVgi2ZA
  Optimizing C++ takes time! (The other lines are all at the bottom) Compilers (all on Windows):
 VC++ 2013 x64 without (/Od) and with optimizations (/O2) Go 1.7.1 amd64 without (-gcflags -N -l) and with optimizations (no flags) Rust 1.12.0 MSVCx64 without (-C opt-level=0) and with optimizations (-C opt-level=2) DMD32 D 2.071.2 x64 without (no flags) and with optimizations (-O) Free Pascal 3.0.0 i386 without (-O-) and with optimizations (-O2)  The source codes being compiled are the same simplistically generated programs with an increasing number of functions of about 5-20 lines each.</description>
    </item>
    
    <item>
      <title>[UE4]移动端Joystick和UMG button冲突的问题</title>
      <link>http://www.dawnarc.com/2018/01/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AFjoystick%E5%92%8Cumg-button%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 14 Jan 2018 16:10:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AFjoystick%E5%92%8Cumg-button%E5%86%B2%E7%AA%81%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题1：UMG widget 遮挡 joystick，导致joystick只显示无法使用的问题。
原因：UMG的Canvas Panel组件的Visibility属性被修改了。
解决办法：打开UMG蓝图，设置Canvas Panel的Visibility为：Self Hit Test Invisible。
问题2：joystick摇杆和UMG button在移动端冲突的问题：按住摇杆时，UMG button按了不起作用。
原因：UMG button的Is Focusable属性设置为了true。
解决办法：UMG button的Is Focusable属性设置为false。
问题3：Widget的Visibility属性默认为Self Hit Test Invisible，这样，每当有新的Widget AddToViewport时，当前Widget会被自动隐藏。但是默认的Visibility无法相应Widget之外的鼠标或touch事件（比如一个UButton，如果按住UButton不放，然后鼠标或者手指拖拽到UButton之外，那么当松开鼠标或手指时，该button的Release事件无法影响），但是Visibility属性如果设置成Visible，那么就可以相应，但是当新的Widget添加Viewport时，当前Widget不会自动隐藏。
参考：Virtual Joystick conflicts UMG Buttons
https://answers.unrealengine.com/questions/211064/virtual-joystick-conflicts-umg-buttons.html
念念不忘，必有回响。----陈念萱</description>
    </item>
    
    <item>
      <title>[UE4]PlayerState用法</title>
      <link>http://www.dawnarc.com/2018/01/ue4playerstate%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 13 Jan 2018 14:08:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4playerstate%E7%94%A8%E6%B3%95/</guid>
      <description>示例代码：
const AYourPlayerController* PlayerPC = Cast&amp;lt;AYourPlayerController&amp;gt;(GetController()); if (PlayerPC) { ATTSPlayerState* YourPlayerStateClass = Cast&amp;lt;ATTSPlayerState&amp;gt;(PlayerPC-&amp;gt;PlayerState); if (YourPlayerStateClass) { GEngine-&amp;gt;AddOnScreenDebugMessage(21, 1.0f, FColor::Red, FString::SanitizeFloat(YourPlayerStateClass-&amp;gt;SomeVariable); } }  参考：PlayerState persistence across map change.
https://answers.unrealengine.com/questions/43814/playerstate-persistence-across-map-change.html
有两样东西，越是持久地进行思考，越使心灵充满惊赞和敬畏！它们就是头顶的璀璨星空和心中的道德法则。----德国古典哲学创始人康德</description>
    </item>
    
    <item>
      <title>[UE4]获取GameInstance变量时Crash(Cast Failed)</title>
      <link>http://www.dawnarc.com/2018/01/ue4%E8%8E%B7%E5%8F%96gameinstance%E5%8F%98%E9%87%8F%E6%97%B6crashcast-failed/</link>
      <pubDate>Sat, 13 Jan 2018 00:57:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4%E8%8E%B7%E5%8F%96gameinstance%E5%8F%98%E9%87%8F%E6%97%B6crashcast-failed/</guid>
      <description>代码（在GameMode::BeginPlay()中调用）：
void AReleaseGameMode::SpawnMainRole() { UE_LOG(LogTemp, Log, TEXT(&amp;quot;SpawnMainRole 11111 &amp;quot;)); if (UMyGameInstance* WSGI = Cast&amp;lt;UMyGameInstance&amp;gt;(GetWorld()-&amp;gt;GetGameInstance())) { UE_LOG(LogTemp, Log, TEXT(&amp;quot;SpawnMainRole 22222&amp;quot;)); if (ABaseCharacter* BC = GetWorld()-&amp;gt;SpawnActor&amp;lt;ABaseCharacter&amp;gt;(WSGI-&amp;gt;CurrentCharacter, MainRoleSpawnLoc_, MainRoleSpawnRot_)) { UE_LOG(LogTemp, Log, TEXT(&amp;quot;SpawnMainRole 333333 &amp;quot;)); BC-&amp;gt;SpawnDefaultController(); } } }  崩溃日志：
[2018.01.12-16.47.12:367][ 94]LogTemp: SpawnMainRole 11111 [2018.01.12-16.47.12:367][ 94]LogTemp: SpawnMainRole 22222 [2018.01.12-16.47.15:359][ 94]LogWindows: Error: === Critical error: === [2018.01.12-16.47.15:359][ 94]LogWindows: Error: [2018.01.12-16.47.15:359][ 94]LogWindows: Error: Fatal error! [2018.01.12-16.47.15:359][ 94]LogWindows: Error: [2018.01.12-16.47.15:359][ 94]LogWindows: Error: Unhandled Exception: EXCEPTION_ACCESS_VIOLATION reading address 0xffffffff [2018.</description>
    </item>
    
    <item>
      <title>[UE4]摄像机相关-PlayerCameraManager</title>
      <link>http://www.dawnarc.com/2018/01/ue4%E6%91%84%E5%83%8F%E6%9C%BA%E7%9B%B8%E5%85%B3-playercameramanager/</link>
      <pubDate>Fri, 12 Jan 2018 14:55:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4%E6%91%84%E5%83%8F%E6%9C%BA%E7%9B%B8%E5%85%B3-playercameramanager/</guid>
      <description>设置默认的PlayerCameraManager PlayerController构造函数中设置PlayerCameraManagerClass：
PlayerCameraManagerClass = AMyPlayerCameraManager::StaticClass();  摄像机不跟随角色一起旋转 USpringArmComponent::bAbsoluteRotation = true;  养老江湖外，藏名诗画中。----白狼</description>
    </item>
    
    <item>
      <title>[UE4]Character添加OnClicked事件（C&#43;&#43;和蓝图两种方式）</title>
      <link>http://www.dawnarc.com/2018/01/ue4character%E6%B7%BB%E5%8A%A0onclicked%E4%BA%8B%E4%BB%B6c--%E5%92%8C%E8%93%9D%E5%9B%BE%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 11 Jan 2018 23:30:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4character%E6%B7%BB%E5%8A%A0onclicked%E4%BA%8B%E4%BB%B6c--%E5%92%8C%E8%93%9D%E5%9B%BE%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>方式一：添加Cube（Static Mesh Component）          C++方式 MyCharacter.cpp构造函数中注册回调：
OnClicked.AddUniqueDynamic(this, &amp;amp;ATestTD2Character::OnSelected);  回调函数：
MyCharacter.h
UFUNCTION() void OnSelected(AActor* Target, FKey ButtonPressed);  MyCharacter.cpp
void MyCharacter::OnSelected(AActor* Target, FKey ButtonPressed) { GEngine-&amp;gt;AddOnScreenDebugMessage(-1, 2.f, FColor::Cyan, FString(&amp;quot;EEEEEEEEEEEEEEEEE&amp;quot;)); }  蓝图方式 选中Cube后，再在Detail面板中点击OnClick事件       方式二：GetHitResult 1，Project Settings中编辑Input配置   如果要用鼠标模式触屏输入方式，如要勾选Use Mouse for Touch。
2，C++中注册回调：先给PlayerController注册Input事件
void AMyPlayerController::SetupInputComponent() { //鼠标点击 InputComponent-&amp;gt;BindAction(&amp;quot;MouseClick&amp;quot;, IE_Pressed, this, &amp;amp;AMyPlayerController::OnMouseClick); //触屏输入 support touch devices InputComponent-&amp;gt;BindTouch(EInputEvent::IE_Pressed, this, &amp;amp;AMyPlayerController::OnFingerTouch); } void AMyPlayerController::OnMouseClick() { FHitResult HitResult; GetHitResultUnderCursor(ECollisionChannel::ECC_Pawn, false, HitResult); if (HitResult.</description>
    </item>
    
    <item>
      <title>[UE4]Creating outline or stroke effect around objects</title>
      <link>http://www.dawnarc.com/2018/01/ue4creating-outline-or-stroke-effect-around-objects/</link>
      <pubDate>Mon, 08 Jan 2018 18:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4creating-outline-or-stroke-effect-around-objects/</guid>
      <description>keywords：UE4, stroke effect、角色勾轮廓
UE4: Outline Post Process
http://www.tomlooman.com/ue4-outline-post-process/
Multi-color Outline Post Process in Unreal Engine 4
http://www.tomlooman.com/multi-color-outline-post-process-in-unreal-engine-4/
天道酬勤 地道酬善 商道酬信 业道酬精 人道酬诚 ----《尚书》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;创建DecalComponent并附加到角色、吸附地面</title>
      <link>http://www.dawnarc.com/2018/01/ue4c--%E5%88%9B%E5%BB%BAdecalcomponent%E5%B9%B6%E9%99%84%E5%8A%A0%E5%88%B0%E8%A7%92%E8%89%B2%E5%90%B8%E9%99%84%E5%9C%B0%E9%9D%A2/</link>
      <pubDate>Fri, 05 Jan 2018 16:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2018/01/ue4c--%E5%88%9B%E5%BB%BAdecalcomponent%E5%B9%B6%E9%99%84%E5%8A%A0%E5%88%B0%E8%A7%92%E8%89%B2%E5%90%B8%E9%99%84%E5%9C%B0%E9%9D%A2/</guid>
      <description>keywords：DecalComponent、贴花、C++
使用的贴花材质是UE4模版工程TopDown中的贴花材质：M_Cursor_Decal。
if (!FootRingComponent) { FootRingComponent = NewObject&amp;lt;UDecalComponent&amp;gt;(MyCharacter-&amp;gt;GetRootComponent()); if (FootRingComponent) { FootRingComponent-&amp;gt;RegisterComponent(); FootRingComponent-&amp;gt;AttachToComponent(MyCharacter-&amp;gt;GetRootComponent(), FAttachmentTransformRules::KeepRelativeTransform); UMaterial* Material = LoadObject&amp;lt;UMaterial&amp;gt;(NULL, TEXT(&amp;quot;Material&#39;/Game/Materials/Decal/M_Cursor_Decal.M_Cursor_Decal&#39;&amp;quot;)); if (Material) { FootRingComponent-&amp;gt;SetDecalMaterial(Material); FootRingComponent-&amp;gt;DecalSize = FVector(16.f, 128.f, 128.f); FootRingComponent-&amp;gt;SetRelativeRotation(FRotator(-90.f, 0.f, 0.f)); FootRingComponent-&amp;gt;SetRelativeLocation(FVector(0.f, 0.f, -90.f)); } } }  RelativeRotation一定要设置为FRotator(-90.f, 0.f, 0.f)或者FRotator(90.f, 90.f, 90.f)，否则贴花的无法正常显示；前者表示正向显示，后者表示反向显示。DecalSize的X表示贴花作用高度：比如一面墙高500，X设置为200，那么贴花在墙面上的显示高度只到200高度；Y、Z表示长和宽。
 贴花影响物体过滤 默认所有PrimitiveComponent都接受贴花，也可以让指定物体不显示贴花：
void UPrimitiveComponent::SetReceivesDecals(bool bNewReceivesDecals);  我只是个戏子，在别人的故事里，流着自己的泪。----席慕蓉《戏子》</description>
    </item>
    
    <item>
      <title>[UE4]获取本地(Local)PlayerController的几种方式</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0localplayercontroller%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 30 Dec 2017 17:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0localplayercontroller%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>代码：
APlayerController* PC1 = GetWorld()-&amp;gt;GetFirstLocalPlayerFromController()-&amp;gt;GetPlayerController(GetWorld()); APlayerController* PC2 = GetWorld()-&amp;gt;GetFirstPlayerController(); APlayerController* PC3 = GEngine-&amp;gt;GetFirstLocalPlayerController(GetWorld());  心似平原走马，易放难收。----《增广贤文》</description>
    </item>
    
    <item>
      <title>[UE4]自定义形状的button</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BD%A2%E7%8A%B6%E7%9A%84button/</link>
      <pubDate>Sat, 30 Dec 2017 16:55:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BD%A2%E7%8A%B6%E7%9A%84button/</guid>
      <description>Unreal Engine Custom Shape Button (Custom Hit Box)
https://www.youtube.com/watch?v=yxdP_NaFlzs
眼睛为她下着雨，心却为她打着伞，这就是爱情。----泰戈尔</description>
    </item>
    
    <item>
      <title>[UE4]GEngine-Browse用法(切换场景)</title>
      <link>http://www.dawnarc.com/2017/12/ue4gengine-browse%E7%94%A8%E6%B3%95%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Fri, 29 Dec 2017 15:54:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4gengine-browse%E7%94%A8%E6%B3%95%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF/</guid>
      <description>代码示例：
if (FWorldContext* Context = GEngine-&amp;gt;GetWorldContextFromWorld(GetWorld())) { FString Error; FURL URL(TEXT(&amp;quot;/Game/Demo/scecn_test/scecn_test02&amp;quot;)); EBrowseReturnVal::Type RS = GEngine-&amp;gt;Browse(*Context, URL, Error); if (EBrowseReturnVal::Type::Failure == RS) { WSI-&amp;gt;ChangePlayerState(EPlayerState::EP_LoginFailed); } }  GEngine-&amp;gt;Browse这种方式第一次打开场景时正常，如果第二次切换场景（比如从别的场景再切回原场景），则会导致程序崩溃。建议用：UGameplayStatics::OpenLevel(GetWorld(), TEXT(&amp;ldquo;/Game/Map/TestMap&amp;rdquo;)); 这种方式来回切场景不会出现崩溃问题。
 几时归去，作个闲人。对一张琴、一壶酒、一溪云。----宋·苏轼《行香子》</description>
    </item>
    
    <item>
      <title>[UE4]Skeleton骨骼视图中预览Socket武器绑定</title>
      <link>http://www.dawnarc.com/2017/12/ue4skeleton%E9%AA%A8%E9%AA%BC%E8%A7%86%E5%9B%BE%E4%B8%AD%E9%A2%84%E8%A7%88socket%E6%AD%A6%E5%99%A8%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Thu, 28 Dec 2017 14:31:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4skeleton%E9%AA%A8%E9%AA%BC%E8%A7%86%E5%9B%BE%E4%B8%AD%E9%A2%84%E8%A7%88socket%E6%AD%A6%E5%99%A8%E7%BB%91%E5%AE%9A/</guid>
      <description>血染江山的画，怎敌你眉间；一点朱砂，覆了天下也罢，始终不过一场繁华。----河图 《倾尽天下》</description>
    </item>
    
    <item>
      <title>[UE4]Box Collision的Overlap事件注册和触发(蓝图方式)</title>
      <link>http://www.dawnarc.com/2017/12/ue4box-collision%E7%9A%84overlap%E4%BA%8B%E4%BB%B6%E6%B3%A8%E5%86%8C%E5%92%8C%E8%A7%A6%E5%8F%91%E8%93%9D%E5%9B%BE%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 28 Dec 2017 14:20:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4box-collision%E7%9A%84overlap%E4%BA%8B%E4%BB%B6%E6%B3%A8%E5%86%8C%E5%92%8C%E8%A7%A6%E5%8F%91%E8%93%9D%E5%9B%BE%E6%96%B9%E5%BC%8F/</guid>
      <description>C++方式：http://www.dawnarc.com/2017/05/ue4c--%E5%88%9B%E5%BB%BAboxcollisionboxcomponent%E5%B9%B6%E6%B3%A8%E5%86%8Coverlap%E5%92%8Chit%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/
keywords：Hit和Overlap事件（碰撞和重叠）
  碰撞（Hit）事件的相关设置   先编辑障碍物的属性     再编辑Box Collision属性   重叠（Overlap）事件的相关设置   先编辑障碍物   再编辑Box Collision属性   人的一生会遇到两个人，一个惊艳了时光，一个温柔了岁月。----苏剧 《经年》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;动态创建Montage并播放动画</title>
      <link>http://www.dawnarc.com/2017/12/ue4c--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAmontage%E5%B9%B6%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB/</link>
      <pubDate>Mon, 25 Dec 2017 20:36:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4c--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAmontage%E5%B9%B6%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB/</guid>
      <description>keywords：UE4, C++, AnimSequence, AnimMontage, Slot, 动态创建, 播放动画
首先要在动画蓝图中添加Slot节点，默认的Slot名字为DefaultSlot。这个名字会在C++代码中使用   假设已经获取了要播放的AnimSequence对象指针：AnimSeq
float AnimLength = 0.f; if (USkeletalMeshComponent *Mesh = MyActor-&amp;gt;FindComponentByClass&amp;lt;USkeletalMeshComponent&amp;gt;()) { if (UAnimInstance *AnimInst = Mesh-&amp;gt;GetAnimInstance()) { if (UAnimMontage* Mtg = AnimInst-&amp;gt;PlaySlotAnimationAsDynamicMontage(AnimSeq, TEXT(&amp;quot;DefaultSlot&amp;quot;), 0.25f, 0.25f, 1.f, 1)) { AnimLength = Mtg-&amp;gt;GetPlayLength(); } } }  C++播放Montage动画（静态Montage资源） http://www.dawnarc.com/2016/02/ue4%E5%A6%82%E4%BD%95%E6%92%AD%E6%94%BEmontage%E5%8A%A8%E7%94%BBc--/
所有的战争都是内战，因为所有的人类都是同胞。——弗朗索瓦·费奈隆（FrancoisFenelon）</description>
    </item>
    
    <item>
      <title>[VersionControl]TortoiseGit支持SSH的安装注意事项</title>
      <link>http://www.dawnarc.com/2017/12/versioncontroltortoisegit%E6%94%AF%E6%8C%81ssh%E7%9A%84%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Mon, 25 Dec 2017 18:19:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/versioncontroltortoisegit%E6%94%AF%E6%8C%81ssh%E7%9A%84%E5%AE%89%E8%A3%85%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>在安装完以后的配置选项中，SSH选择OpenSSH：   如果选择PuTTY，则每次更新或提交时，都需要输入密码。
除了在安装配置页面设置，也可以在安装完毕以后，右键 -》 TortoiseGit -》 Settings -》Network -》 SSH -》 修改为：&amp;quot;ssh.exe&amp;quot; 或者 &amp;quot;Git安装目录\usr\bin\ssh.exe&amp;quot;
生成公钥 命令（ssh-keygen.exe 位于 Gi安装目录\usr\bin 目录下）
ssh-keygen -t rsa -C &amp;quot;mysshkey&amp;quot;  执行后敲三次回车，即可生成SSH公钥和私钥。
我感到难过，不是因为你欺骗了我，而是因为我再也不能相信你了。----尼采《天才的激情与感悟》</description>
    </item>
    
    <item>
      <title>[UE4]动态加载关卡或无缝切换场景的常见错误</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%85%B3%E5%8D%A1%E6%88%96%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF%E7%9A%84%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</link>
      <pubDate>Fri, 22 Dec 2017 16:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%85%B3%E5%8D%A1%E6%88%96%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF%E7%9A%84%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</guid>
      <description>错误：LogGameMode: Warning: CanServerTravel: Seamless travel currently NOT supported in single process PIE.
原因：单进程PIE模式下不支持无缝切图。
解决办法：开启两个UE4Editor，一个当服务器，一个当客户端？（未验证）
Seamless Travel with Play in Editor
https://answers.unrealengine.com/questions/335050/seamless-travel-with-play-in-editor.html
错误2：LogWorld: Warning: SetActiveLevelCollection attempted to use an out of date NetDriver: GameNetDriver
原因：没有开启Steamless。
解决办法：GameMode需要开启Seamless，即 UseSeamlessTravel = true;
错误3：
0x00000000F6601F28 KERNELBASE.dll!UnknownFunction [] 0x00000000E84D76D4 UE4Editor-ApplicationCore.dll!FWindowsErrorOutputDevice::Serialize() [c:\unrealengine-4.18.2-release\engine\source\runtime\applicationcore\private\windows\windowserroroutputdevice.cpp:65] 0x00000000CF8835AB UE4Editor-Core.dll!FOutputDevice::Logf__VA() [c:\unrealengine-4.18.2-release\engine\source\runtime\core\private\misc\outputdevice.cpp:70] 0x00000000CF816259 UE4Editor-Core.dll!FDebug::AssertFailed() [c:\unrealengine-4.18.2-release\engine\source\runtime\core\private\misc\assertionmacros.cpp:414] 0x00000000CD8D9334 UE4Editor-Engine.dll!UEngine::TickWorldTravel() [c:\unrealengine-4.18.2-release\engine\source\runtime\engine\private\unrealengine.cpp:10109] 0x00000000CAA76201 UE4Editor-UnrealEd.dll!UEditorEngine::Tick() [c:\unrealengine-4.18.2-release\engine\source\editor\unrealed\private\editorengine.cpp:1605] 0x00000000CB33B856 UE4Editor-UnrealEd.dll!UUnrealEdEngine::Tick() [c:\unrealengine-4.18.2-release\engine\source\editor\unrealed\private\unrealedengine.cpp:396] 0x00000000F4BC5A26 UE4Editor.exe!FEngineLoop::Tick() [c:\unrealengine-4.18.2-release\engine\source\runtime\launch\private\launchengineloop.cpp:3296] 0x00000000F4BD5430 UE4Editor.exe!GuardedMain() [c:\unrealengine-4.18.2-release\engine\source\runtime\launch\private\launch.cpp:166] 0x00000000F4BD54AA UE4Editor.exe!GuardedMainWrapper() [c:\unrealengine-4.18.2-release\engine\source\runtime\launch\private\windows\launchwindows.cpp:134] 0x00000000F4BE2379 UE4Editor.</description>
    </item>
    
    <item>
      <title>[UE4]Multiple concurrent levels on one server</title>
      <link>http://www.dawnarc.com/2017/12/ue4multiple-concurrent-levels-on-one-server/</link>
      <pubDate>Fri, 22 Dec 2017 15:28:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4multiple-concurrent-levels-on-one-server/</guid>
      <description>keywords：UE4, Multiple concurrent levels, Dedicated Server, 独立服务器上多个地图同时共存
Multiple concurrent levels on one server, how?
https://answers.unrealengine.com/questions/263913/multiple-concurrent-levels-on-one-server-how.html
How to run multiple sessions on single dedicated server?
https://answers.unrealengine.com/questions/372150/how-to-run-multiple-sessions-on-single-dedicated-s.html
Multiple multiplayer online servers on single multiplayer map
https://answers.unrealengine.com/questions/36781/multiple-multiplayer-online-servers-on-single-mult.html
Multiple maps loaded at once
https://answers.unrealengine.com/questions/378655/multiple-maps-loaded-at-once.html
Travelling in multiplayer | unreal engine
http://7-finder.com/blog/unreal-engine-4-dedicated-server-port/MHx8V2VifHxodHRwczovL2RvY3MudW5yZWFsZW5naW5lLmNvbS9sYXRlc3QvSU5UL0dhbWVwbGF5L05ldHdvcmtpbmcvVHJhdmVsbGluZy98fDY.html
UE4-Network
https://silver2dream.wordpress.com/2017/08/28/2334/
众里寻他千百度，
蓦然回首，
那人却在，灯火阑珊处。
----辛弃疾《青玉案·元夕》</description>
    </item>
    
    <item>
      <title>[UE4]UE4Editor运行程序相关参数</title>
      <link>http://www.dawnarc.com/2017/12/ue4ue4editor%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0/</link>
      <pubDate>Fri, 22 Dec 2017 14:52:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4ue4editor%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0/</guid>
      <description>编译器运行模式下，客户端自动连接Dedicated Server：
      编辑器模式下以打包版本运行客户端（非PIE模式）
  如果你给我的，和你给别人的是一样的，那我就不要了。----三毛</description>
    </item>
    
    <item>
      <title>[UE4]移动端开启动态阴影</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%90%AF%E5%8A%A8%E6%80%81%E9%98%B4%E5%BD%B1/</link>
      <pubDate>Thu, 21 Dec 2017 15:13:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%90%AF%E5%8A%A8%E6%80%81%E9%98%B4%E5%BD%B1/</guid>
      <description>keywords：UE4, Mobile, Dynamic Shadow
    How to Enable Dynamic Shadows &amp;amp; Correct Reflection Maps on Mobile
https://forums.unrealengine.com/development-discussion/android-development/41661-tip-how-to-enable-dynamic-shadows-correct-reflection-maps-on-mobile
Lighting for Mobile Platforms
https://docs.unrealengine.com/latest/INT/Platforms/Mobile/Lighting/
4.7 release mobile shadows
https://answers.unrealengine.com/questions/180482/47-release-mobile-shadows.html
嗜欲深者天机浅 ---《庄子·大宗师》</description>
    </item>
    
    <item>
      <title>[UE4]动态加载关卡或无缝切换场景的资料收集</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%85%B3%E5%8D%A1%E6%88%96%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF%E7%9A%84%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/</link>
      <pubDate>Thu, 21 Dec 2017 12:22:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%85%B3%E5%8D%A1%E6%88%96%E6%97%A0%E7%BC%9D%E5%88%87%E6%8D%A2%E5%9C%BA%E6%99%AF%E7%9A%84%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86/</guid>
      <description>How to open level asynchronously, without visible after load?
https://forums.unrealengine.com/development-discussion/c-gameplay-programming/47363-how-to-open-level-asynchronously-without-visible-after-load
Level Streaming: Move from MainMenu to World level.
https://answers.unrealengine.com/questions/280618/level-streaming-move-from-mainmenu-to-world-level.html
How to change Map? C++ code.
https://answers.unrealengine.com/questions/146988/how-to-load-a-level.html
Failed to load package on client
https://answers.unrealengine.com/questions/196214/failed-to-load-package-on-client.html
What is the difference between ServerTravel and OpenLevel?
https://answers.unrealengine.com/questions/55477/the-difference-of-the-two-functions.html
UE4中动态创建并加载流关卡
http://blog.csdn.net/xi_niuniu/article/details/54408188
// 获取永久性关卡 UWorld* PersistentWorld = GetWorld(); if (!PersistentWorld) { UE_LOG(LogTemp, Fatal, TEXT(&amp;quot;UDynamicLevels::LoadTileToStreamingArray &amp;gt;&amp;gt; Invalid PersistentWorld!!!&amp;quot;)); return; } UE_LOG(LogTemp, Display, TEXT(&amp;quot;aaaaaaaaaaaaaa&amp;quot;)); //new StreamingClass Instance 新流关卡实例 UClass* StreamingClass = ULevelStreamingKismet::StaticClass(); ULevelStreaming* StreamingLevel = Cast&amp;lt;ULevelStreaming&amp;gt;(StaticConstructObject_Internal(StreamingClass, PersistentWorld)); // FName PackageName = TEXT(&amp;quot;/Game/TempUmap/Level_01&amp;quot;) 根据项目实际情况获取并设置PackageName FName PackageName(TEXT(&amp;quot;/Game/Demo/scecn_test/scene_create_role&amp;quot;)); StreamingLevel-&amp;gt;SetWorldAssetByPackageName(PackageName); UE_LOG(LogTemp, Display, TEXT(&amp;quot;bbbbb&amp;quot;)); //Make New Level Visible 使流关卡可见 StreamingLevel-&amp;gt;bShouldBeLoaded = true; StreamingLevel-&amp;gt;bShouldBeVisible = true; StreamingLevel-&amp;gt;bShouldBlockOnLoad = false; UE_LOG(LogTemp, Display, TEXT(&amp;quot;cccccc&amp;quot;)); //Very Important, used by LevelStreaming* to load the map 设置流关卡的包名 StreamingLevel-&amp;gt;PackageNameToLoad = PackageName; //Add to UWorld 将流关卡添加到World中 PersistentWorld-&amp;gt;StreamingLevels.</description>
    </item>
    
    <item>
      <title>[UE4]命令行打包安卓版本(Command Line Build using Unreal Automation Tool)</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%93%E5%8C%85%E5%AE%89%E5%8D%93%E7%89%88%E6%9C%ACcommand-line-build-using-unreal-automation-tool/</link>
      <pubDate>Wed, 20 Dec 2017 17:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%93%E5%8C%85%E5%AE%89%E5%8D%93%E7%89%88%E6%9C%ACcommand-line-build-using-unreal-automation-tool/</guid>
      <description>keywords：命令行、打包、安卓、CMD Batch Build Android
原文：Getting Started with In App Billing APIs on Unreal Engine for Android
https://medium.com/@anirudhd/getting-started-with-in-app-billing-apis-on-unreal-engine-for-android-f3da0ed9b6d8
青山依旧在，几度夕阳红。----杨慎《临江仙·滚滚长江东逝水》</description>
    </item>
    
    <item>
      <title>[UE4]Android package for engine source build</title>
      <link>http://www.dawnarc.com/2017/12/ue4android-package-for-engine-source-build/</link>
      <pubDate>Tue, 19 Dec 2017 19:20:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4android-package-for-engine-source-build/</guid>
      <description>先设置NDK的环境变量： https://docs.unrealengine.com/latest/INT/Platforms/Android/Reference/index.html#environmentvariables   然后重新运行引擎源码根目录下的Setup.bat。此时会开始下载几百兆的内容，且Excluding没有出现Android字样，如果没有配置NDKROOT，Excluding会包含Android，表示下载内容排除android编译环境。   如果不设置环境变量，也可以通过命令行Setup.bat &amp;ndash;all来下载所有平台的编译文件（包括ios和linux）。
下载完成后，rebuild一下Development - Android   常见错误 如果不下载android的相关文件，编译安卓版本时可能出现以下错误：
错误1（出现这个错误的另一个原因是Project Settings的Android-SDK的NDK API Level修改了，UE4默认是android-19）：
UATHelper: Packaging (Android (ASTC)): clang++.exe: error: no such file or directory: &#39;C:/UnrealEngine-4.18.1-release/Engine/Build/Android/Prebuilt/bsdsignal/lib/armeabi-v7a/libbsdsignal.a&#39; UATHelper: Packaging (Android (ASTC)): Total build time: 899.04 seconds (Local executor: 890.45 seconds) UATHelper: Packaging (Android (ASTC)): Took 899.2723232s to run UnrealBuildTool.exe, ExitCode=5 UATHelper: Packaging (Android (ASTC)): ERROR: Command failed (Result:5): C:\UnrealEngine-4.18.1-release\Engine\Binaries\DotNET\UnrealBuildTool.exe WarSoul Android Development -Project=G:\Source\Work\project2\ue4_proj\WarSoul\WarSoul.uproject G:\Source\Work\project2\ue4_proj\WarSoul\WarSoul.uproject -NoUBTMakefiles -remoteini=&amp;quot;G:\Source\Work\project2\ue4_pr oj\WarSoul&amp;quot; -skipdeploy -noxge -NoHotReload -ignorejunk.</description>
    </item>
    
    <item>
      <title>[UE4]运行时切换武器(AttachToComponent)</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%87%E6%8D%A2%E6%AD%A6%E5%99%A8attachtocomponent/</link>
      <pubDate>Tue, 19 Dec 2017 18:55:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%87%E6%8D%A2%E6%AD%A6%E5%99%A8attachtocomponent/</guid>
      <description>https://github.com/tomlooman/EpicSurvivalGameSeries/blob/4a6ee9a6081529fadbe0f693b2e4e6729d5ec08d/SurvivalGame/Source/SurvivalGame/Private/Items/SWeapon.cpp#L106
EpicSurvivalGameSeries\SurvivalGame\Source\SurvivalGame\Private\Items\SWeapon.cpp
void ASWeapon::AttachMeshToPawn(EInventorySlot Slot) { if (MyPawn) { // Remove and hide DetachMeshFromPawn(); USkeletalMeshComponent* PawnMesh = MyPawn-&amp;gt;GetMesh(); FName AttachPoint = MyPawn-&amp;gt;GetInventoryAttachPoint(Slot); Mesh-&amp;gt;SetHiddenInGame(false); Mesh-&amp;gt;AttachToComponent(PawnMesh, FAttachmentTransformRules::SnapToTargetNotIncludingScale, AttachPoint); } } void ASWeapon::DetachMeshFromPawn() { Mesh-&amp;gt;DetachFromComponent(FDetachmentTransformRules::KeepWorldTransform); Mesh-&amp;gt;SetHiddenInGame(true); }  念去去、千里烟波，暮霭沉沉楚天阔。----北宋·柳永《雨霖铃》</description>
    </item>
    
    <item>
      <title>[UE4]Skeletal Mesh Sockets用法</title>
      <link>http://www.dawnarc.com/2017/12/ue4skeletal-mesh-sockets%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 19 Dec 2017 14:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4skeletal-mesh-sockets%E7%94%A8%E6%B3%95/</guid>
      <description>SkeletalMeshSockets
https://docs.unrealengine.com/latest/INT/Engine/Content/Types/SkeletalMeshes/Sockets/
Setting Up and Using Sockets With Static Meshes
https://docs.unrealengine.com/latest/INT/Engine/Content/Types/StaticMeshes/HowTo/Sockets/
雕栏玉砌应犹在，只是朱颜改。----李煜《虞美人》</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]计算两个向量的夹角(Get an angle between 2 Vectors)</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%90%91%E9%87%8F%E7%9A%84%E5%A4%B9%E8%A7%92get-an-angle-between-2-vectors/</link>
      <pubDate>Sun, 17 Dec 2017 03:31:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%90%91%E9%87%8F%E7%9A%84%E5%A4%B9%E8%A7%92get-an-angle-between-2-vectors/</guid>
      <description>示例代码
float AimAtAngle = FMath::RadiansToDegrees(acosf(FVector::DotProduct(PlayerDirection, MouseDirection)));  参考：How to get an angle between 2 Vectors?
https://answers.unrealengine.com/questions/31058/how-to-get-an-angle-between-2-vectors.html
两情若是久长时，又岂在、朝朝暮暮！----秦观《鹊桥仙》</description>
    </item>
    
    <item>
      <title>[UE4]How to Install a Plugin on Unreal Engine</title>
      <link>http://www.dawnarc.com/2017/12/ue4how-to-install-a-plugin-on-unreal-engine/</link>
      <pubDate>Sun, 17 Dec 2017 00:56:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4how-to-install-a-plugin-on-unreal-engine/</guid>
      <description>在GameMode构造函数中加载（LoadObject或者ConstructorHelpers::FObjectFinder）蓝图，该蓝图使用了plugin（这里我使用了一个叫Swipe的插件），如果在构造函数中加载，则会报错：
/Game/Demo/Female/Blueprints/FemaleCharBP : Can&#39;t find file for asset. /Script/Swipe Failed to load /Script/Swipe.SwipeComponent Referenced by K2Node_ComponentBoundEvent_2 Failed to load /Script/Swipe.SwipeComponent Referenced by K2Node_ComponentBoundEvent_3 Failed to load /Script/Swipe.SwipeComponent Referenced by SCS_Node_1  解决办法：成员变量（LoadObject返回值，在构造函数中创建的对象）添加UPROPERTY()宏。
另外一种解决办法：给C++的GameMode套一个蓝图，然后在该蓝图中设置DefaultPawnClass、PlayerControllerClass等GameMode属性，此时即使这些PawnClass或者PlayerControllerClass蓝图使用了plugin，也不会报错。
醉里挑灯看剑，梦回吹角连营。----辛弃疾《破阵子·为陈同甫赋壮词以寄之》</description>
    </item>
    
    <item>
      <title>[UE4]Plugin的加载问题</title>
      <link>http://www.dawnarc.com/2017/12/ue4plugin%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 16 Dec 2017 22:13:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4plugin%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/</guid>
      <description>How to Install a Plugin on Unreal Engine 4
https://idkudk.blogspot.jp/2015/02/how-to-install-plugin-on-unreal-engine-4.html
UE4/Plugin installation
https://wiki.popcornfx.com/index.php/UE4/Plugin_installation
梧桐更兼细雨，到黄昏、点点滴滴。----李清照《声声慢》</description>
    </item>
    
    <item>
      <title>[UE4]Why can&#39;t I tag a delegate created with DECLARE_EVENT as a UPROPERTY</title>
      <link>http://www.dawnarc.com/2017/12/ue4why-cant-i-tag-a-delegate-created-with-declare_event-as-a-uproperty/</link>
      <pubDate>Sat, 16 Dec 2017 17:21:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4why-cant-i-tag-a-delegate-created-with-declare_event-as-a-uproperty/</guid>
      <description>问题：error : Unrecognized type &amp;lsquo;MCPlayerBaseAtkAnim&amp;rsquo; - type must be a UCLASS, USTRUCT or UENUM
解决办法：去掉MULTICAST对象的UPROPERTY宏。如果要用UPROPERTY，请使用 DECLARE_MULTICAST，而不是 MULTICAST。
Why can&amp;rsquo;t I tag a delegate created with DECLARE_EVENT as a UPROPERTY
https://answers.unrealengine.com/questions/357296/why-cant-i-tag-a-delegate-created-with-declare-eve.html
Creating a multicast delegate https://www.packtpub.com/mapt/book/game_development/9781785885549/5/ch05lvl1sec69/creating-a-multicast-delegate
枯藤老树昏鸦，
小桥流水人家，
古道西风瘦马。
夕阳西下，
断肠人在天涯。
----马致远《天净沙·秋思》</description>
    </item>
    
    <item>
      <title>[UE4]角色悬在半空的问题（BoundsBox）</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E8%A7%92%E8%89%B2%E6%82%AC%E5%9C%A8%E5%8D%8A%E7%A9%BA%E7%9A%84%E9%97%AE%E9%A2%98boundsbox/</link>
      <pubDate>Sat, 16 Dec 2017 13:56:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E8%A7%92%E8%89%B2%E6%82%AC%E5%9C%A8%E5%8D%8A%E7%A9%BA%E7%9A%84%E9%97%AE%E9%A2%98boundsbox/</guid>
      <description>可能是场景的StaticMesh的Bounds Box范围有问题，需要在Max或者Maya中修改Bounds Box
  也可以在UE4种修改Bounds大小   衡量一个人的成功标志，不是看他登到顶峰的高度，而是看他跌到低谷的反弹力。----王石</description>
    </item>
    
    <item>
      <title>[UE4]Mobile Input - Swipe and Pinch</title>
      <link>http://www.dawnarc.com/2017/12/ue4mobile-input---swipe-and-pinch/</link>
      <pubDate>Fri, 15 Dec 2017 14:16:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4mobile-input---swipe-and-pinch/</guid>
      <description>A plugin for Unreal Engine 4 that exposes touches and swipes on mobile devices as events in blueprints
https://github.com/getsetgames/Swipe
Ultimate Touch Components
https://www.unrealengine.com/marketplace/custom-touch-controls
三十功名尘与土，八千里路云和月。----岳飞《满江红》</description>
    </item>
    
    <item>
      <title>[UE4]UE4Editor.exe crash：dx11 feature level 10.0 is required to run the engine</title>
      <link>http://www.dawnarc.com/2017/12/ue4ue4editor.exe-crashdx11-feature-level-10.0-is-required-to-run-the-engine/</link>
      <pubDate>Wed, 13 Dec 2017 17:52:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4ue4editor.exe-crashdx11-feature-level-10.0-is-required-to-run-the-engine/</guid>
      <description>UE4源码编译的UE4Editor启动时崩溃：
dx11 feature level 10.0 is required to run the engine （运行引擎需要dx11特性等级）  原因：显卡驱动有问题
解决办法：卸载显卡驱动，并从AMD或者NVIDIA官网下载对应的驱动。如果更新驱动后还是出现这个问题，则清理掉UE4的源码工程重新编译一次。 另外，如果自己游戏工程是在旧的驱动下面编译的，那么最好把这些编译中间文件删掉。 另外，删除编辑中间文件时最好手动删除文件夹，而不要直接使用VS中清理，因为即使执行“仅清理当前工程”，也会把整个UE4的源码工程清理掉，这次下次编译时又得重新编译整个UE4源码。
勤俭节约，未有不兴，骄奢倦怠，未有不败。----《曾国藩家书》</description>
    </item>
    
    <item>
      <title>[UE4]静态链接Protobuf 3.x版本的错误</title>
      <link>http://www.dawnarc.com/2017/12/ue4%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5protobuf-3.x%E7%89%88%E6%9C%AC%E7%9A%84%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 09 Dec 2017 16:44:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5protobuf-3.x%E7%89%88%E6%9C%AC%E7%9A%84%E9%94%99%E8%AF%AF/</guid>
      <description>如果使用3.x，将protoc生成的代码打成lib链接到UE4工程时，会出现以下错误（当template文件中有string字段时会报错，如果没有string可以编译通过）：
2&amp;gt;TestTDGameMode.cpp.obj : error LNK2019: unresolved external symbol &amp;quot;public: void __cdecl my_proto::login_info::set_account(char const *)&amp;quot; (?set_account@login_info@fh_proto@@QEAAXPEBD@Z) referenced in function &amp;quot;public: virtual void __cdecl ATestTDGameMode::BeginPlay(void)&amp;quot; (?BeginPlay@ATestTDGameMode@@UEAAXXZ) 2&amp;gt;G:\Source\Work\Game20171205\program\client\TestTD\Binaries\Win64\UE4Editor-TestTD-4710.dll : fatal error LNK1120: 1 unresolved externals  Python脚本对protoc生成代码二次转换，然后与UE4工程编译(Protobuf 3.x) https://github.com/thejinchao/libprotobuf
https://thecodeway.com/blog/?p=1394
修改Protobuf 3.x源码并作为UE4 plugin编译
https://github.com/jashking/UE4Protobuf
我基于该项目的protobuf代码，做了一个cmake自动构建配置：
https://github.com/dawnarc/protobuf_ue4_cmake
将protobuf3.x作为插件集成进UE4
https://github.com/marshal-it/Protobuffer_UE4
如果使用protobuf 2.x版本，可以不用修改任何代码，直接作为一个lib链接UE4工程。
景色如冬
萧瑟如枫
攻势如弓
魂断犹如梦中
----《黄金甲》</description>
    </item>
    
    <item>
      <title>[Build]nmake下一些错误的解决办法</title>
      <link>http://www.dawnarc.com/2017/12/buildnmake%E4%B8%8B%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Sat, 09 Dec 2017 15:32:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/buildnmake%E4%B8%8B%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>原文：http://10305101ivy.blog.163.com/blog/static/584765892012227322607
最近编译工程用到了windows下nmake工具，遇到了很多的问题，在网上苦寻答案，终于得到解决。现在把遇到的问题及解决办法写下来，希望给大家一些帮助。
1.NMAKE:fatal error U1077.“cl.exe” return code 0xc0000135 产生原因：在安装visual studio的时候没有勾选注册环境变量导致的。
解决办法：在系统环境变量中加入visual studio的安装路径：vs安装路径\VC\Bin,以及vs安装路径\Common7\IDE
2.NMAKE:fatal error U1077. return code 0x2 产生原因：找不到代码文件中包含的头文件
解决办法：cmd下进入到vs安装路径\VC\Bin下，执行vcvars32,此时会执行vcvas32.bat自动为vs设置环境变量
3.NMAKE:fatal error U1077. return code 0x460 产生原因：你的工程中连接了一个lib文件，链接的时候却出现不能解析的外部符号。可能问题是你包含的lib是错的，或者有不兼容问题。我的问题就是后者，我的系统的32位的，但是链接了一个64位的lib.
解决办法：链接正确的lib
乱石穿空，惊涛拍岸，卷起千堆雪。江山如画，一时多少豪杰。----北宋·苏轼《念奴娇·赤壁怀古》</description>
    </item>
    
    <item>
      <title>[VisualStudio]不能运行 &#39;rc.exe&#39;( error LNK1158 cannot run &#39;rc.exe&#39;)</title>
      <link>http://www.dawnarc.com/2017/12/visualstudio%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C-rc.exe-error-lnk1158-cannot-run-rc.exe/</link>
      <pubDate>Sat, 09 Dec 2017 14:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/visualstudio%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C-rc.exe-error-lnk1158-cannot-run-rc.exe/</guid>
      <description>先装VS2017，再装VS2015后，使用cmake-gui生成vs solution时报错：
不能运行 &#39;rc.exe&#39;( error LNK1158: cannot run &#39;rc.exe&#39;)  解决办法：
转载自：https://blog.csdn.net/leifeng_soul/article/details/52622584
 在D:\Programs\Microsoft Visual Studio 12.0\Common7\IDE中找到devenv.exe。在cmd命令行中切换到该路径，使用命令devenv /ResetSettings将VS2013重置到初始设置。
 打开VS2013里面的属性-&amp;gt;常规-&amp;gt;平台工具，将v120改成v120_xp。     英雄之所以是英雄，是他不知道有一个阴谋在他身后。——张锐锋《古战场》</description>
    </item>
    
    <item>
      <title>[UE4]4.18.1引擎编译bug：&#39;MergeShaderCacheFiles&#39; is not a member of &#39;FShaderCache&#39; ShaderCacheTool</title>
      <link>http://www.dawnarc.com/2017/12/ue44.18.1%E5%BC%95%E6%93%8E%E7%BC%96%E8%AF%91bugmergeshadercachefiles-is-not-a-member-of-fshadercache-shadercachetool/</link>
      <pubDate>Thu, 07 Dec 2017 17:18:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue44.18.1%E5%BC%95%E6%93%8E%E7%BC%96%E8%AF%91bugmergeshadercachefiles-is-not-a-member-of-fshadercache-shadercachetool/</guid>
      <description>UE4.18.1源码编译错误：
Error C2039 &#39;MergeShaderCacheFiles&#39;: is not a member of &#39;FShaderCache&#39; ShaderCacheTool C:\Users\xC0DEB10C\Documents\Git\UnrealEngine\Engine\Source\Programs\Mac\ShaderCacheTool\Private\ShaderCacheTool.cpp 66 Error C1083 Cannot open include file: &#39;Interfaces/IAutomationWorkerModule.h&#39;: No such file or directory BuildPatchTool C:\Users\xC0DEB10C\Documents\Git\UnrealEngine\Engine\Source\Programs\BuildPatchTool\Private\ToolModes\AutomationMode.cpp 12  这是官方已经确定的bug，4.19修复。
手动修改方式如下：
打开
Engine/Source/Programs/Mac/ShaderCacheTool/Private/ShaderCacheTool.cpp
将
bool bOK = FShaderCache::MergeShaderCacheFiles(RunInfo.InputFile1, RunInfo.InputFile2, RunInfo.OutputFile);  修改为
bool bOK = true;  具体参考：
https://github.com/EpicGames/UnrealEngine/pull/4222/files
世界只有一个，就是此刻压迫着你的这个，你也只在这一分钟活着，就是此刻这一分钟；而唯一的生命之道，就是接纳每一分钟，视之为独一无二的奇迹。</description>
    </item>
    
    <item>
      <title>[UE4]VS2017编译引擎错误：error C1083 Cannot open include file &#39;metahost.h&#39;</title>
      <link>http://www.dawnarc.com/2017/12/ue4vs2017%E7%BC%96%E8%AF%91%E5%BC%95%E6%93%8E%E9%94%99%E8%AF%AFerror-c1083-cannot-open-include-file-metahost.h/</link>
      <pubDate>Thu, 07 Dec 2017 14:46:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/ue4vs2017%E7%BC%96%E8%AF%91%E5%BC%95%E6%93%8E%E9%94%99%E8%AF%AFerror-c1083-cannot-open-include-file-metahost.h/</guid>
      <description>编译错误：
c:\memspect\vsassert\pch.h(20): fatal error C1083: Cannot open include file: &#39;metahost.h&#39;: No such file or directory  解决办法：
重新打开VS2017的安装器，下面的都勾上，然后安装。   参考： https://blogs.msdn.microsoft.com/calvin_hsia/2017/02/13/cannot-open-include-file-metahost-h-no-such-file-or-directory/
不降志，不屈身，不追赶时髦，也不回避危险。──胡适</description>
    </item>
    
    <item>
      <title>[Windows]开启共享文件夹</title>
      <link>http://www.dawnarc.com/2017/12/windows%E5%BC%80%E5%90%AF%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Wed, 06 Dec 2017 15:09:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/windows%E5%BC%80%E5%90%AF%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>一个人知道自己为什么而活，就可以忍受任何一种生活。---尼采</description>
    </item>
    
    <item>
      <title>[Windows]Windows Server搭建FTP共享服务器</title>
      <link>http://www.dawnarc.com/2017/12/windowswindows-server%E6%90%AD%E5%BB%BAftp%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 06 Dec 2017 14:59:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/windowswindows-server%E6%90%AD%E5%BB%BAftp%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>假设已经安装好IIS服务。
打开IIS
                  年少的承诺，执着的相守。看似美好，却是无情。----《花千骨》</description>
    </item>
    
    <item>
      <title>[Map-Baking]SP烘焙法线贴图：使用Cage处理UV接缝</title>
      <link>http://www.dawnarc.com/2017/12/map-bakingsp%E7%83%98%E7%84%99%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE%E4%BD%BF%E7%94%A8cage%E5%A4%84%E7%90%86uv%E6%8E%A5%E7%BC%9D/</link>
      <pubDate>Sat, 02 Dec 2017 21:52:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/12/map-bakingsp%E7%83%98%E7%84%99%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE%E4%BD%BF%E7%94%A8cage%E5%A4%84%E7%90%86uv%E6%8E%A5%E7%BC%9D/</guid>
      <description>Keywords：Substance Painter、Normals Maps Baking、UV seams、Cage、烘焙法线贴图、接缝
这里SP版本为2017.3；Maya版本为2018.1。
1，准备好高模、低模、Cage 这里以Maya为例。
高模   硬边低模   低模UV，因为全部是硬边，这里全部切开   平均法线的Cage   Cage的制作方式： 这里的Cage是直接在Maya中对硬边低模Duplicate（Ctrl+D）后再扩大（Move Tool），然后再执行平均法线（Mesh Display -》 Average）。
平均法线之前：   平均法线之后：   注意：是Average Normals平均法线的Cage，不是软边的Cage！否则仍然会有明显的UV接缝。
 平均法线和软边的法线方向还是有略微差距，法线方向如下：
Cage和低模都为软边   Cage为平均法线，低模软边   2，将模型的OBJ文件导入SP 先将上述的三个对象导出为OBJ。当前示例导出的3个OBJ文件为：low.obj、high.obj、cage.obj。
然后打开SP，New project（File -》 New）。   然后选择前面导出的低模OBJ   导入之后，再点击TextureSet Settings面板钟的Bake Textures   弹出的Baking面板中，我们只勾选Normal，因为这里只演示法线贴图的烘焙；   常用参数解释
 Output Size：贴图尺寸。 High Definition Meshes：高模obj。 Use Cage：是否使用cage。 Cage File：cage的文件位置。 Average Normals：是否使用平均法线。 Antialiasing：抗锯齿级别。  烘焙完带cage的法线后，再烘焙一张无cage的法线：去掉勾选Use Cage、Average Normals。   将两张法线贴图导出，然后再贴到低模上看效果。（因为在SP上看法线效果区别没有Maya明显，所以这里的的法线预览效果我转到了Maya中查看）</description>
    </item>
    
    <item>
      <title>[UE4]模型从3D Max、Maya、Blender导入UE4时如何保留顶点法线</title>
      <link>http://www.dawnarc.com/2017/11/ue4%E6%A8%A1%E5%9E%8B%E4%BB%8E3d-maxmayablender%E5%AF%BC%E5%85%A5ue4%E6%97%B6%E5%A6%82%E4%BD%95%E4%BF%9D%E7%95%99%E9%A1%B6%E7%82%B9%E6%B3%95%E7%BA%BF/</link>
      <pubDate>Sat, 18 Nov 2017 23:36:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/ue4%E6%A8%A1%E5%9E%8B%E4%BB%8E3d-maxmayablender%E5%AF%BC%E5%85%A5ue4%E6%97%B6%E5%A6%82%E4%BD%95%E4%BF%9D%E7%95%99%E9%A1%B6%E7%82%B9%E6%B3%95%E7%BA%BF/</guid>
      <description>keywords：UE4、FBX、Maya、3D Max、Blender、Vertices Normals、顶点法线、Soften Edges、Harden Edges
顶点法线在Max中叫做光滑组（Smoothing Group），在Maya中叫软硬边（Soften Edges/Harden Edges），Blender中叫光滑边（Smoothing Edge）。
3D Max FBX   OBJ   Maya Maya无论导出FBX还是OBJ，都不需要在参数面板中勾选（根本就没有参数面板。。），导出时会默认保留对象上的软边和硬边。如果模型上有软边但又不希望导出，那么在导出前将这些边改成硬边。
Blender FBX   OBJ   导入游戏引擎 UE4 UE4导入资源的面板参数中，Normal Import Method表示是否使用资源自带的法线，默认是使用资源自带的（Import Normals）。   Unity3D Unity导入资源提供的选项：automatically calculate normals，不勾选就表示使用自带的顶点法线。
杜郎老矣，想旧事、花须能说。记少年、一梦扬州，二十四桥明月。—周密《瑶华》</description>
    </item>
    
    <item>
      <title>[Maya]Hypershade编辑</title>
      <link>http://www.dawnarc.com/2017/11/mayahypershade%E7%BC%96%E8%BE%91/</link>
      <pubDate>Thu, 16 Nov 2017 15:45:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayahypershade%E7%BC%96%E8%BE%91/</guid>
      <description>Maya版本为2018
Hypershade是Maya中编辑shader材质的工具，比如制作ID贴图时会用到Hypershader。
打开Hypershade窗口 点击Windows -》 Rendering Editors -》 Hypershade。设置shader材质   首次打开后，默认只有3种材质(Material)   编辑Shader材质 要创建自定义颜色的材质，先在Create面板中找到需要的材质模板，单击一下即可在Material栏中创建一个。这里我们使用Lambert这种默认材质。     选中材质后，再在中间的材质编辑栏中选中主体属性框   然后再在右边的Property Editor中单击Color属性，打开取色器。   然后选择需要的颜色。这里择取红色   然后就可以将自定义材质设置为指定的颜色。   用途：给模型着色 在模型中选中需要上色的面   然后再在材质栏中右键单击需要上色的材质 -》 Assign Material To Selection。   这样选中的面就会被涂上指定的颜色材质。   人之有德于我也，不可忘也；吾有德于人也，不可不忘也。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Channel Box &amp; Layer Editor</title>
      <link>http://www.dawnarc.com/2017/11/mayachannel-box--layer-editor/</link>
      <pubDate>Tue, 14 Nov 2017 15:09:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayachannel-box--layer-editor/</guid>
      <description>Maya版本为2018
打开Channel Box/Layer Editor的按钮：   或者点击：Windows -》 General Editors -》 Channel Box/Layer Editor。     Layers 在Display面板下，点击右上角的按钮：Create a new layer.   然后双击layer，可以修改相关属性    Name：层的名字 Display type：有三种，Normal、Template、Reference，对应Layer显示栏的第3个方框，空白表示Normal。 Visible：是否可见，对应Layer显示栏的第1个方框，默认为显示，即第一个方框显示为“V”。 Hide on playback：是否在播放动画的时候隐藏当前layer。对应Layer显示栏的第二个方框，默认为P，表示参与播放动画，不隐藏。 Color：表示Layer的标识颜色，对应Layer显示栏的第4个方框，默认没有颜色。  新建好一个Layer之后，在选中需要加入当前layer中的对象，   然后右键点击layer -》 Add Selected Objects。这样之后就可以通过控制当前layer的显示，来控制在当前layer下的所有物体的显示。   Layer显示栏的4个方框的作用 4个方框对应前面描述的Edit Layer面板中的几个参数。除了第4个颜色标识方框外，其他三个都可以通过单击来切换。
Visible     Hide On Playback   Display Type     Color   无形者，形之君也。无端者，事之本也。---《战国策》</description>
    </item>
    
    <item>
      <title>[Map-Baking]Maya烘焙ID贴图(ID Color Maps、Diffuse Maps)</title>
      <link>http://www.dawnarc.com/2017/11/map-bakingmaya%E7%83%98%E7%84%99id%E8%B4%B4%E5%9B%BEid-color-mapsdiffuse-maps/</link>
      <pubDate>Mon, 13 Nov 2017 22:41:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/map-bakingmaya%E7%83%98%E7%84%99id%E8%B4%B4%E5%9B%BEid-color-mapsdiffuse-maps/</guid>
      <description>Keywords：Maya、Color ID Maps/Diffuse Maps 颜色贴图/ID贴图
Maya版本为2018.1
1，准备好低模、低模UV、高模。 假设我们已经做好了低模和高模     并且假设我们已经为低模做好了UV   2，编辑Shader材质 打开Hypershade窗口：点击Windows -》 Rendering Editors -》 Hypershade。设置shader材质   首次打开后，默认只有3种材质(Material)   这里我自定义了红绿蓝三种颜色的材质   3，使用shader材质给高模着色 在模型中选中需要上色的面   然后再在材质栏中右键单击需要上色的材质 -》 Assign Material To Selection。   这样选中的面就会被涂上指定的颜色材质。   当前示例使用了3种颜色，最终效果如下：     4，Transfer Maps窗口，设置参数并烘焙 上好颜色后，在切换到Rendering模式   再点击菜单：Lighting/Shading -》 Transfer Maps。   打开后记得先点击Target Meshes和Source Meshes的Clear All，以清除旧的历史记录。   然后在Target Meshes中选中低模并Add，在Source Meshes中选中高模并Add。     然后点击一下Diffuse，表示输出一张color ID贴图，格式我们选择PNG。点击一次后以后再次打开Transfer Maps版本就会默认保留这个输出选项，不需要再点击。   其他的常用修改参数为贴图尺寸、抗锯齿级别。   最后点击Bake，就可以生成color ID贴图。当前示例的贴图效果：   烘焙贴图时（包括ID、法线等），一定要保证高模没有UV，如果有UV一定要删掉，高模低模同时有UV时，即使两个UV的轮廓一模一样，烘焙贴图时也会耗时很长。以ID贴图烘焙为例，如果高模没有UV，可以瞬间完成。</description>
    </item>
    
    <item>
      <title>[Maya]小技巧合集(个人零散笔记)</title>
      <link>http://www.dawnarc.com/2017/11/maya%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%90%88%E9%9B%86%E4%B8%AA%E4%BA%BA%E9%9B%B6%E6%95%A3%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 12 Nov 2017 15:56:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/maya%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%90%88%E9%9B%86%E4%B8%AA%E4%BA%BA%E9%9B%B6%E6%95%A3%E7%AC%94%E8%AE%B0/</guid>
      <description>Maya版本为2018
To Faces 选中圆柱顶部的所有面 先选中顶部中心的顶点   然后按住Ctrl+右键连续向下拖拽两次   就可以选中顶部的所有面   Collapse Edge 塌陷处理 假如有个这样的结构     我们希望处理的效果如下：     处理方式如下：
先选中要塌陷处理的边。因为这里假设是对称结构，所以我选择了两条边，如果你只需要对某一边做塌陷，那么只选择一条边即可。   然后按住Shift+鼠标右键：     如上所述：如果是单条边线塌陷，则这条线的两端的顶点在边线中点位置合并为一个点。 如果是选择多条连续的边，则这些边会全部消失并缩成一个顶点。例如：       圆角矩形的高模低模布线 高模   低模   环形凹凸平面压平 比如有如下结构，现在需要拓扑低模，圆柱顶部的凹凸结构改成一个简单的圆形平面。   做法如下： 先删掉顶部的除边界外的所有环线   然后再删除顶点   然后再切换到侧视图中将圆形的中心点移动与边沿齐平的位置。   惟有楼前流水，应念我、终日凝眸。凝眸处，从今又添，一段新愁。---李清照《凤凰台上忆吹箫》</description>
    </item>
    
    <item>
      <title>[UE4]UMG使用实例(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2017/11/ue4umg%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8Bc--/</link>
      <pubDate>Wed, 08 Nov 2017 15:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/ue4umg%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8Bc--/</guid>
      <description>Keywords：UE4、UMG、C++、Widget、Demo、Example、示例、实例、例子、UI
两年前写过一篇C++操控UMG蓝图的文章，当时写的有点乱，非核心的东西写了不少，干扰阅读（当时自己刚学UE4，完全懵逼）。另外最新版本中，UMG不需要在Build.cs中添加配置，默认即可。
这里用4.18版本重新做一个C++控制UMG的精简实例，完整工程下载见文章底部。
假设新建的测试工程叫：UMGTest。实现一个简单的功能：点击按钮，动态替换掉按钮上的背景图片。
UMG使用步骤如下：
1，创建自定义的UMG C++类。 在UE4编辑器中点击：File -》 New C++ Class。   弹出的对话框中，勾选Show All Classes，并找到UserWidget，选中后再点击Next。表示选择UserWidget作为我们创建的C++ class的父类。   起好名字（这里命名为：MyUserWidget），点击创建   2，创建UMG蓝图 在内容浏览器中，右键点击：User Interface -》 Widget Blueprint。   修改蓝图名称并保存。这里命名为：NewWidgetBlueprint。   然后双击打开UMG蓝图，拖拽一个Button组件到编辑视图中。假设给这个Button命名为：BtnChangeImg。   并设置按钮的大小，这里设置为和图片素材一样的大小   再拖拽一个Image组件到这个Button内   并设置Image组件的大小     然后切换到Graph视图   然后再点击Class Settings   再找到Parent Class，设置为之前创建的C++类：MyUserWidget。   3，添加图片资源 我这里使用两张PNG图片，导入UE4即可。   4，编写自定义UserWidget的C++代码 添加需要的头文件，比如我们在头文件中使用了UImage，那么需要指明这个UImage所在的头文件。例如：
#include &amp;quot;Components/Image.h&amp;quot;  具体代码如下：</description>
    </item>
    
    <item>
      <title>[Maya][UV]Align and Snap</title>
      <link>http://www.dawnarc.com/2017/11/mayauvalign-and-snap/</link>
      <pubDate>Mon, 06 Nov 2017 23:26:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayauvalign-and-snap/</guid>
      <description>Maya版本为2018.1
Align 对齐 在UV Toolkit面板中的Align一共有5种方式，依次是：左对齐、纵向居中对齐、右对齐、上对齐、横向居中对齐、下对齐。   以“下对齐”为例，先选中要对齐的点   然后点击“下对齐”按钮   Snap 吸附    Snap用来操作UV壳，上面的九宫格，分别对应不同方位的吸附对齐，例如：右上角方框就表示UV壳吸附到UV贴图的右上角位置，例如：   只身千里客，孤枕一灯秋。---宋·真山民《渡江之越宿萧山县》</description>
    </item>
    
    <item>
      <title>[Maya][UV]Select</title>
      <link>http://www.dawnarc.com/2017/11/mayauvselect/</link>
      <pubDate>Sun, 05 Nov 2017 17:27:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayauvselect/</guid>
      <description>Maya版本为2018.1
在UV Toolkit的顶部，是UV选择模式的按钮   Selection 选择模式 左边三个是建模时的点、线、面选择模式   右边两个分别是UV编辑模式下的点选择、UV壳选择。   在建模模式下，选择点、线的时候，maya会自动帮你选中其他UV壳上与之公用的点、线。     如果UV模式下，选择点，则不会选中其他UV壳上与之关联的点。   建模模式下选中的点为黄色，UV模式下选中的点为绿色。
 All/Clear/Inverse 全选、清除、反选    All 全选（Ctrl + Shift + A）    Clear 清除    Inverse 反选   注意：多边形建模时的Ctrl、Shift、Ctrl+Shift框选方式同样对UV适用。例如按住Shift反选。
     Shrink/Grow Selection 收缩/扩张选择模式 在UV Toolkit面板中有以下几种    Grow Selection along loop （第4个）        Grow Selection （第3个）        Shrink Selection （第2个） 相当于Grow Selection的倒序操作。</description>
    </item>
    
    <item>
      <title>[Maya][UV]Cut and Sew</title>
      <link>http://www.dawnarc.com/2017/11/mayauvcut-and-sew/</link>
      <pubDate>Sun, 05 Nov 2017 13:23:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayauvcut-and-sew/</guid>
      <description>Maya版本为2018.1
UV Toolkit面板钟展开Cut and Sew选项   Auto-Seams 自动接缝 按住shift键点击Auto-Seams，弹出参数面板   参数说明
 Seams：是直接帮你裁切好，还是只是帮你选中可裁切的边，默认是Cut直接裁切。 Method：接缝方式，是自动，还是沿着硬边裁切。 Shell Splittings Tolerance：一个UV壳（shell）被裁切多个UV壳的可能性，0到1。相当于你预估一个现有的UV shell有多大的可能行被裁切。 Connect Holes：是否自动补洞，自动补洞可以减少扭曲。  Cut（UV裁切） 先选中要裁切的边线   然后点击Cut，则会以这条边线为边界，裁切出一个新的UV壳。   Cut Tool（UV裁切工具） 先点击Cut Tool之后，再单击需要裁切的边线，这样就可以边点击边裁切UV。       Sew（UV缝合） 假设要风格的位置如下   先选择要缝合的边线   然后点击Sew。   同欲者相憎，同忧者相亲。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya][UV]展UV完整流程实例</title>
      <link>http://www.dawnarc.com/2017/11/mayauv%E5%B1%95uv%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Fri, 03 Nov 2017 19:55:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayauv%E5%B1%95uv%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E5%AE%9E%E4%BE%8B/</guid>
      <description>Maya版本为2018.1
注意事项：分UV一定是用低模，而不是高模。若用高模来分UV，裁切时比较复杂，且不好优化。
 假设分UV的模型如下，现在对其展UV。     步骤如下： 打开UV编辑器
点击菜单：UV -》 UV Editor。   如果模型的结构较复杂，打开UV编辑器后，默认是空白的   如果是一个简单结构的模型，maya会自动帮你展开UV，例如：   自动分UV 
在UV Toolkit面板钟点击Create，选择需要创建的规则。    Automatic：自动创建 Planar：基于平面创建 Camera-Based：基于摄像机视角创建  当前示例中，自动创建的UV如下：   手动分UV 
当结构较为复杂时，自动布局不是很合理，我们手工裁切，步骤如下：
1，基于摄像机创建UV 先将摄像机调整为一个随意的方向，然后执行UV Toolkit面板钟的Create -》 Camera-Based，创建一个顶视图的UV布局。     2，裁切UV壳 先将圆柱的上下两个圆的边框选中   然后执行UV Toolkit面板中的Cut and Sew-》 Cut。     然后再将圆柱曲面切开：随便选中一条纵向的边线（实际应用中最好选择位置隐蔽的线，这样不容易看出接缝），然后再执行：Cut and Sew-》 Cut。     3，展开UV并优化 先框选整个圆柱体   然后执行UV Toolkit面板中的：Unfold -》 Unfold     如果默认开后的UV壳比较弯曲，希望能够自动变直，则可以多次执行：Unfold -》 Optimize，来进行优化。   因为当前的结构比较简单，默认有没弯曲的UV壳，所以这里可以不用做优化。</description>
    </item>
    
    <item>
      <title>[Maya][UV]Hotbox</title>
      <link>http://www.dawnarc.com/2017/11/mayauvhotbox/</link>
      <pubDate>Thu, 02 Nov 2017 22:31:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/11/mayauvhotbox/</guid>
      <description>Maya版本为2018.1
鼠标右键   Shift + 鼠标右键 不同的选择模式，Shift + 右键的菜单不同   5种选择模式下，Shift + 右键的菜单依次是           Ctrl+鼠标右键 5种选择模式下的Ctrl + 右键菜单都一样。   以财交者，财尽而交尽；以色交者，华落而爱渝。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya][UV]Create</title>
      <link>http://www.dawnarc.com/2017/10/mayauvcreate/</link>
      <pubDate>Tue, 31 Oct 2017 16:29:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayauvcreate/</guid>
      <description>Maya版本为2018.1
假设找分UV的模型如下     在UV Toolkit面板中展开Create选项   注意，每次之前Create之前，需要框选中需要分UV的面或者Object。如果是整个物体，则框选所有面或者选中Object，然后执行Create命令。只框选顶点不起作用。
 不同的Create方式效果如下：
 Automatic    Cylinderical    Spherical    Camera-Based    Normal-Based    Planar    Best-Plane
先框选需要处理的对象   然后点击Best-Plane，此时会提示你选择一个面或者三个顶点作为投射方向，来确定投射的方向   选择好面或者3个顶点之后，再按回车，则maya会自动按照这个投射方向来创建UV。    Contour Stretch
先选中需要切割的区域   然后执行Contour Stretch     行百里者半九十。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya][UV]UV Editor</title>
      <link>http://www.dawnarc.com/2017/10/mayauvuv-editor/</link>
      <pubDate>Tue, 31 Oct 2017 12:23:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayauvuv-editor/</guid>
      <description>Maya版本为2018.1
打开UV编辑器 点击菜单：UV -》UV Editor     打开UV Toolkit 打开UV Editor的同时，会自动打开UV Toolkit面板   UV Editor常用快捷菜单 面板顶部列出了常用的菜单   最左边3个按钮分别是：边框显示、颜色块显示、扭曲度显示。前两个必须二选一，后面一个不是必选。    边框显示（Wireframe）      颜色块显示（Shaded）   正向法线的面显示为蓝色，反向法线的面显示为红色   也可以Shift+鼠标左键单击按钮，打开设置菜单，来设置正向和反向的颜色   如果右键单击改按钮，则每个UV壳以不同颜色显示    扭曲度/畸变度显示（UV Distortion）   扭曲程度越严重，则红色越深，平铺越均匀则白色越深。    显示贴图边框（Texture Borders）      UV壳边界显示（Shell Borders）      关闭/显示UV网格（Grid）        UV贴图输出   UV贴图制作完成后输出到指定路径     Pin Selection 锁定 如果想锁定UV的顶点，让其不可编辑，则选中需要锁定的顶点或者UV壳，然后点击UV Editor中的：Edit -》 Pin Selection。被锁定的区域会被表示为蓝色。     如果要取消锁定，再点击：Edit -》 Unpin Selection。</description>
    </item>
    
    <item>
      <title>[Maya]复杂结构的倒角硬化</title>
      <link>http://www.dawnarc.com/2017/10/maya%E5%A4%8D%E6%9D%82%E7%BB%93%E6%9E%84%E7%9A%84%E5%80%92%E8%A7%92%E7%A1%AC%E5%8C%96/</link>
      <pubDate>Sun, 29 Oct 2017 00:08:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E5%A4%8D%E6%9D%82%E7%BB%93%E6%9E%84%E7%9A%84%E5%80%92%E8%A7%92%E7%A1%AC%E5%8C%96/</guid>
      <description>结构预览       布线结构   绿杨芳草长亭路，年少抛人容易去。---晏殊《木兰花》</description>
    </item>
    
    <item>
      <title>[Maya]倒角硬化处理技巧</title>
      <link>http://www.dawnarc.com/2017/10/maya%E5%80%92%E8%A7%92%E7%A1%AC%E5%8C%96%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 21 Oct 2017 22:16:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E5%80%92%E8%A7%92%E7%A1%AC%E5%8C%96%E5%A4%84%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
      <description>Maya版本为2018
假设我们想做这样的硬化倒角效果：       方式1：直接设置Bevel的Segments参数 Bevel之后将Segments参数设置大一点，比如为5   然后再在外沿Cut出两条线   基本上也能达到效果，如果觉得边界还不够硬，则可以将Segments设置更大   如果Segments为3，效果就差很多     方式2：手工卡线 上一种方式中，如果你最终不需要构建低模，那么没什么问题。但如果需要低模，比如次世代游戏美术的做法，那么用上述方法制作出来的模型面数较高。
这里介绍第二种方式，以较低的面数，手工卡线实现硬化倒角效果。
先建一个正方体   Bevel倒角处理   然后在倒角处外沿分别卡出三条环线   此时如果想在内沿卡环线时，则无法形成环线了   为了能够一次性卡出环线，我们用一种取巧的方式：在倒角的边线处卡出一条与其距离非常近的线。   然后我们在内侧就可以卡出环线了   环线卡出来后，之前那条临时边线就可以删掉了   然后我们再删掉三角处的这条短的直线     然后我们在给下方倒角的内侧卡出两条线     然后我们再在三角处的底部卡出一条环线。 注意：之前的步骤顺序不能换，否则这条环线cut不出来。
     然后在连接三角处内部的两条线     到此正方体的一个角就完成了，平滑效果如下：   剩下其他角我们使用mirror镜像来生成。</description>
    </item>
    
    <item>
      <title>[Maya]曲面凹槽的卡线技巧</title>
      <link>http://www.dawnarc.com/2017/10/maya%E6%9B%B2%E9%9D%A2%E5%87%B9%E6%A7%BD%E7%9A%84%E5%8D%A1%E7%BA%BF%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 19 Oct 2017 11:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E6%9B%B2%E9%9D%A2%E5%87%B9%E6%A7%BD%E7%9A%84%E5%8D%A1%E7%BA%BF%E6%8A%80%E5%B7%A7/</guid>
      <description>Maya版本为2018
假设我们要在圆柱的表面做这样一个凹槽效果   首先建一个圆柱体，由于曲面上做凹槽，要出效果需要较高的细分级别，所以这里设置Subdivisions为100。     然后卡出两条线，当作凹槽的宽度   为了避免圆柱边沿的平滑区域影响到凹槽的位置，我们同时将圆柱的边沿卡两条线   这里我们使用4个面在做凹槽   曲面上做凹槽，凹槽一般至少要使用3个面，但是为了更出效果，建议使用4个面。

先挤压，并设置offset，形成一个小间隔，一般设置为0.01就够了，这么做的目的是为了给凹槽四周卡出一条环线，方便后面布线。   然后再挤压一次，并向内拖拽形成凹槽   挤压后同样需要设置下offset，形成一个倾斜角。目的是为了防止垂直结构引起以后的贴图烘焙错误。   此时可以看下平滑效果，还没有达到完美的效果，这是因为凹槽的布线还不均匀。   然后我们在凹槽左右的边沿的两侧分别卡出一条线，一共4条。
注意，此时卡出的环线与边沿的间隔要约等于当前圆柱曲面的一个细分级别的宽度，简单的说就是新卡出的环线形成的四边形要近似正方形而不是长方形。
   此时再看下平滑效果，相比之前好了很多   但是此时仍不是最完美，细看的画还是有折线的痕迹，且底部的边线被过度平滑了。   继续对边沿进行卡线   此时再看平滑效果，横向的折线几乎看不见了。 纵向的折线仍然明显，原因是圆柱曲面的细分级别还不够，如果要做到极致，可以把细分级别设置为200甚至更高，当前示例中设置的为100。
   最终的整体效果   春无踪迹谁知？除非问取黄鹂。百啭无人能解，因风飞过蔷薇。---黄庭坚《清平乐》</description>
    </item>
    
    <item>
      <title>[Maya]补洞后的补线技巧</title>
      <link>http://www.dawnarc.com/2017/10/maya%E8%A1%A5%E6%B4%9E%E5%90%8E%E7%9A%84%E8%A1%A5%E7%BA%BF%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 17 Oct 2017 19:58:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E8%A1%A5%E6%B4%9E%E5%90%8E%E7%9A%84%E8%A1%A5%E7%BA%BF%E6%8A%80%E5%B7%A7/</guid>
      <description>Maya版本为2018
假如一个物体删面后的结构如下，现在需要对其进行补洞   如果用Append to Polygon或者Fill hole，其效果如下。中间的两条环线断开了，需要自己补上断开的环线   等分环线的补线 如果环线的位置是在等分的位置，比如当前例子中假设两条环线是在物体宽度的三分之一处，那么可以线上添加等分的顶点：选中线后，按住Shift+鼠标右键 -》 Add Divisions To Edge   然后设置需要的顶点数量，执行Add Divisions。   这样就可以在线上生成两个顶点，然后就可以用Multi-Cut连线了。   非等分环线的补线 但是假如环线的位置不是等分的，那么用Add Divisions的方式就无法使用。当然也不是完全不可以，Add Divisions之后，使用Snap To Point吸附，手动将一个个顶点移动到指定的位置，也能达到想要的效果，但是如果顶点多了效率就不高了。
解决办法如下： 先选中洞的一条边，然后挤压（Ctrl+E）   然后向洞的另一边的方向拖动，等拖到第一条环线位置处附近时，使用Snap To Point（V键）进行吸附，使挤压出来的线正好和环线的位置重合。   然后再挤压一次，重复上述的操作，直到整个洞全部补齐。     挤压完毕后记得合并顶点：选择所有顶点，然后按住Shift+鼠标右键 -》 Merge Vertices -》 Merge Vertices。

在挤压过线的过程中，可能会产生法线方向朝内的面，这些面为黑色，把这些黑色的面反转一下（Mesh Display -》 Reverse）。
如果有的面是黑白相间的阴影，则说明这里有两个重合的面且两个面的法线方向时相反的，需要先删掉一个面，然后如果仍然时黑色则再反转一次，直到所有的面都变为正常光影的面。     面反转完后，然后按3看下平滑效果，看每个面是否有异常，如果有异常，且之前已经合并过顶点，则说明面有问题：两个面重叠了，且法线方向是正常的，所以看不到黑色。   那么就需要删掉异常位置处多余的面，然后再按3平滑一次按效果。正常效果如下：   人有悲欢离合，月有阴晴圆缺，此事古难全。---苏轼《水调歌头》</description>
    </item>
    
    <item>
      <title>[Maya]Mesh Display</title>
      <link>http://www.dawnarc.com/2017/10/mayamesh-display/</link>
      <pubDate>Tue, 17 Oct 2017 13:25:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamesh-display/</guid>
      <description>Maya版本为2018   Reverse 法线反转 默认情况下，场景灯光没有开启双面显示   那么法线反方向的面会显示为黑色   如果希望将这些黑色面的法线方向反转，选中面以后，点击：Mesh Display -》 Reverse。     Reverse的Hotbox为：按住Shift+鼠标右键 -》 Face Normals -》 Reverse Normals。     Lock Normals 锁定法线 假如有个正方体，硬边时的顶点法线如下：   改为软边后的顶点法线如下：     改成软边后，然后再压扁物体，顶点法线的方向也会随关联的面的面积变化而变化。   如果在压扁过程中希望顶点法线保持原有的方向，则可以在压扁之前固定法线：Mesh Display -》 Lock Normals。   固定法线之后，法线颜色就变成了黄色   然后再压扁时，顶点法线的方向不会变化。   Average Normals 平均法线 对于这种硬边结构   如果改成软边，则顶点法线的方向不会按照关联的3个面的法线方向进行平均处理：   如果想让顶点法线方向不受面的大小影响，只受面的法线方向影响，则可以执行Average平均法线：Mesh Display -》 Average。执行Average之后，被选中的部分会被转换为软边。     如果只选中部分，那么该部分进行法线平均     注意：法线平均时只对硬边有效，对软边无效。</description>
    </item>
    
    <item>
      <title>[Maya]Deform</title>
      <link>http://www.dawnarc.com/2017/10/mayadeform/</link>
      <pubDate>Mon, 09 Oct 2017 15:17:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayadeform/</guid>
      <description>Maya版本为2018
Nonlinear  Bend
假设有这样一个平面   然后点击Deform -》 Nonlinear -》 Bend   然后就会出现一条很长的线贯穿与平面   按住线段中间的菱形上下拖动，就可以让物体变弯曲，并且会出现一条绿色的线表示当前的弯曲程度。     这里的平面之所以没有弯曲，是因为平面的方向不对，应该调整为与菱形端点的线段平行，而非垂直。
所以我们再次选中平面，设置他的朝向   调整完之后再点击线段，回到曲线编辑状态。
这里我们可以再设置下线段的长度，   然后再按住中间的菱形拖拽，然后平面的两边可以同时卷曲     如果只想让平面的某一边卷曲，可以按住线段两边的某个端点拖拽，这样就只卷曲某一边。    Flare
以圆柱体为例        Sine          Squash
以圆柱为例              Twist</description>
    </item>
    
    <item>
      <title>[Maya]Lighting &amp; Shading</title>
      <link>http://www.dawnarc.com/2017/10/mayalighting--shading/</link>
      <pubDate>Sun, 08 Oct 2017 23:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayalighting--shading/</guid>
      <description>Maya版本为2018
Assign Material Maya新建物体后，默认是没有材质效果的，如果想看下简单的渲染效果，可以切换到Rendering模式下，点击Lighting/Shading -》 Assign Existing Material -》 选择需要的材质。   快捷方式是右键点击物体，选择Assign Existing Material，然后选择材质   左边为默认着色效果，右边为Blinn材质的着色效果。   Two Sided Lighting 默认情况下，如果删除了模型的某个面，则其内部的面会显示为黑色，这样的好处是可以观察法线方向。   如果希望内部的面也像正常面一样显示为灰色，则点击Lighting -》 Two Sided Lighting     但是不建议这样做，因为这样做出来的模型倒入引擎后，模型会显示为半透明，当然在引擎中可以调整贴图属性来修复模型透明的问题，比如在UE4中可以通过Blend Mode属性，但是这种搞法终究不正规。
狡兔有三窟，仅得免其死耳。---《战国策》</description>
    </item>
    
    <item>
      <title>[Next-Gen]次世代相关技术标准</title>
      <link>http://www.dawnarc.com/2017/10/next-gen%E6%AC%A1%E4%B8%96%E4%BB%A3%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%E6%A0%87%E5%87%86/</link>
      <pubDate>Sun, 08 Oct 2017 22:35:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/next-gen%E6%AC%A1%E4%B8%96%E4%BB%A3%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%E6%A0%87%E5%87%86/</guid>
      <description>PBR贴图（当前次世代标准）类型：  颜色 金属度 高光度 法线（凹凸纹理） 自发光（可选）  细分级别 一般为了保证裁切UV、制作LOD时的方便，细分级别普遍是4的倍数。 比如以圆柱体为例，轴向细分级别设置为4的倍数。   这个标准适用于绝大数情况，当然也有特殊情况下可以不是4的倍数。
坐标轴方向  X轴对称（即X轴就是模型正面的朝向）； Z轴为纵深； Y轴为高度；  以TPose的角色为例，脸的朝向为X轴，左右手臂方向为Z轴，从脚到头的方向为Y轴。这也是zbrush的默认轴向。
就圆不就方 在制作大形的时候，能用圆形结构就不要用方形结构，因为圆形结构比方形结构难处理，所以在制作一个曲线结构时，不要用一个正方体拉出曲线的效果，而应该是用球形或者圆柱形结构去制作。
严禁出现90度的凹槽结构 比如这种四周为90度凹槽结构，在烘培贴图的时候会出错，软件很难识别出这种结构   如果有这种凹陷的结构，一定要将底面缩小一点，使它的衔接面变为倾斜而非垂直。   另外一种特殊情况： 如果是在曲面上挤压凹槽，比如这样   那么一定要挤压两次，第一次挤压后只修改offset不调整挤压幅度，形成一小段间距，   第二次再挤压凹槽并调整底面的offset，将其缩小。   这么做的原因有两个：
1，在曲面上直接挤压，如果底面的offset调整的不够，底面与衔接面仍然是90度夹角。这里第一次挤压是为了保证四周的衔接面与最外层表面的夹角为90度，如果没有第一次挤压offset，直接挤压凹槽，则四周的衔接面与外表面的夹角小于90度，因为是曲面结构。
2，多出这样一个小间隔，是为了给凹槽边沿多卡出一条线，没有没有这条线，那么后面平滑处理这个凹槽结构。这也就最重要的原因。
人面不知何处，绿波依旧东流。---晏殊《清平乐》</description>
    </item>
    
    <item>
      <title>[Maya]对称添加环线的方式</title>
      <link>http://www.dawnarc.com/2017/10/maya%E5%AF%B9%E7%A7%B0%E6%B7%BB%E5%8A%A0%E7%8E%AF%E7%BA%BF%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 08 Oct 2017 11:56:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E5%AF%B9%E7%A7%B0%E6%B7%BB%E5%8A%A0%E7%8E%AF%E7%BA%BF%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>Maya版本为2018
Keywords：Maya、Edge Loop
方式1：Insert Edge Loop 点击菜单Mesh Tools -》 Insert Edge Loop菜单的小方框   或者选中Edge并Shift+鼠标右键，点击Insert Edge Loop Tool   打开属性面板后，Maintain position选择Multiple Edge Loops，然后需要对称环线的条数Number of edge loops。
如果只是单条环线，Maintain position选择Relative distance from edge。   如果Number of edge loops是偶数，则会在鼠标点击的位置的两旁分别创建环线     如果是奇数，则在鼠标的点击位置处会有一条环线   这种方式创建的环线是固定在线段的均等处的，比如线条个数是3，那么每条线分别在边线的1/4等分点的位置。
方式2：Offset Edge Loop Tool 先插入单条环线，   然后shift + 右键选择Offset Edge Loop Tool   然后在单条环线的位置处左右拖拽     注意，拖拽时的两条环线的位置是相对中间环线的上下间隔比例来移动的：如果中间环线正好在相交边线的正中间，那么两offset环线和中间的环线的间隔是等距的；如果中间环线靠下，那么两条offset环线与中间环线的间隔是不等距的。     方式3：Bevel 倒角 先插入单条环线并选中   然后点击Bevel（Ctrl+B或者Edit Mesh -》 Bevel），在Chanel box面板中修改offset和segments，前者表示间距，后者表示条数。   算好春长在，好花长见，原只是，人憔悴。---程垓《水龙吟》</description>
    </item>
    
    <item>
      <title>[Maya]Display-Show &amp; Hide</title>
      <link>http://www.dawnarc.com/2017/10/mayadisplay-show--hide/</link>
      <pubDate>Sun, 08 Oct 2017 07:26:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayadisplay-show--hide/</guid>
      <description>Maya版本为2018
假设有两个重叠的物体   只显示选中的物体（方式1） 如果只显示选中的物体，选中物体后，点击Show -》 Isolate Select -》 View Selected，或者按Ctrl+1来切换显示状态，每按一次，未被选中的物体就会显示或者隐藏。   还可以点击快捷栏的Isolate Select按钮       只显示选中的物体（方式2） 先选中物体，然后按Alt + H       隐藏选中的物体 先选中要隐藏的物体，然后按Ctrl+H       显示隐藏的物体 打开Outliner（点击屏幕右边的Outliner图标，或者点击菜单windows -》 Outliner），选中隐藏的物体，按Shift + H。     显示上次隐藏的物体 按Ctrl + Shift + H来显示上次隐藏的物体   显示所有物体（不管是否隐藏） 如果要显示所有，点击Display -》 Show -》 All。   面刺寡人之过者，受上赏；上书谏寡人者，受中赏；能谤讥于市朝闻寡人之耳者，受下赏。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Create</title>
      <link>http://www.dawnarc.com/2017/10/mayacreate/</link>
      <pubDate>Fri, 06 Oct 2017 20:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayacreate/</guid>
      <description>Maya版本为2018
Create Polygon Primitives Create -》 Polygon Primitives可以直接创建常规物体。   如果勾选Interactive Creation，则表示创建时可以通过鼠标手势来指定物体的初始大小，但是需要两步：先按住鼠标左键拖拽来设置底部的大小，然后松开鼠标再按住不放拖拽，来设置高度。也可以单击一下鼠标左键直接生成默认大小的模型。     Create Polygon的hotbox操作是：按住shift+鼠标右键，这里也可以勾选Interactive Creation。   Create Image Plane Image Plane是一个可以放置图片的平面，可以将三视图放置在里面，以便在建模过程中有物体的大小、比例、位置等参考信息。
Create -》 Free Image Plane创建一个Image Plane。     然后打开Image Plane的Attribute面板   然后设置图片路径   效果   我们把图片位置调整后，不希望其位置、大小可编辑，而是将其锁定，可以Channel Box中选择相应属性，然后选择Lock Selected。   另外一种锁定方式：
打开Channel Box，在display标签页中选择Create a new layer。这个Layer类似PS的图层。     然后选中Image Plane   然后再右键layer，选择Add Selected Objects   然后将第3个方框切换为R（通过单击来切换），R表示不可选中。这样也可以防止Image Plane被编辑。   T表示隐藏   空白表示可选中   另外，最左边的V按钮表示隐藏或显示Layer。</description>
    </item>
    
    <item>
      <title>[Maya]Display-Heads Up Display</title>
      <link>http://www.dawnarc.com/2017/10/mayadisplay-heads-up-display/</link>
      <pubDate>Fri, 06 Oct 2017 11:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayadisplay-heads-up-display/</guid>
      <description>Maya版本为2018   In-View Editors 这是一个可以在视图内直接编辑模型的工具栏，不同的操作对应的工具栏属性也不一样，2018版本默认关闭了此工具栏。
比如Extrude Face有很多参数，但是常用的主要有Thickness等属性，那么就可以直接在这个工具栏中编辑这些属性。     如果觉得这些常用属性还不够多，也可以自己添加属性。点击右上角的选项按钮。   右上角的小圆圈表示左右拖动属性时的属性值变化间隔。小圆圈点击一下则变以下，蓝色区域越多表示属性值变化的梯度越小（也就是单位值越小），蓝色区域越小表示属性值变化的梯度越大。   循法之功，不足以高世；法古之学，不足以制今。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Modeling Toolkit 教程05：Bevel Tool</title>
      <link>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B05bevel-tool/</link>
      <pubDate>Fri, 06 Oct 2017 09:58:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B05bevel-tool/</guid>
      <description>Maya版本为2018
先选中要倒角的边   然后点击Bevel     如果想在倒角时设置更多的参数，可以按住Shift键再点击Bevel按钮，就可以弹出参数菜单。   倒角大小设置 倒角的大小有参数Fraction控制，默认是0.5（边线的二分之一处），如果改成0.1（边线的十分之一处）则倒角会变小     也可以把Offset as Fraction关掉，通过Offset来设置倒角的大小，效果一样。     Segments 倒角密度      Depth 倒角方向        Bevel的Hotbox 选中Edge后，Shift按住不放+鼠标右键   Bevel处理棱角的三种效果 假设一个正方体，准备对其三条边线进行倒角   分3中情况：
 1，选中三条边同时倒角。这样棱角就是一个三角形    2，三条边线逐个倒角。    3，先选中两条边进行倒角，然后再对第三条倒角。这样棱角就是一个正方形     不建议用第二种和第三种，因为这样会产生五边面，结构复杂了以后要处理很多五边面、六边面。
 polyBevel官方文档 https://knowledge.autodesk.com/support/maya/learn-explore/caas/CloudHelp/cloudhelp/2018/ENU/Maya-Modeling/files/GUID-40E32F44-1EB9-4DC6-8EE4-6A013EEC626F-htm.html
一场消黯，永日无言，却下层楼。---柳永《曲玉管》</description>
    </item>
    
    <item>
      <title>[Maya]Modeling Toolkit 教程04：Target Weld Tool</title>
      <link>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B04target-weld-tool/</link>
      <pubDate>Thu, 05 Oct 2017 20:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B04target-weld-tool/</guid>
      <description>Maya版本为2018
注意：执行Target Weld之前，情确保需要缝合的两个点是同一个Object（可以通过Mesh -》 Combine将两个Object合并为一个Object），否则无法缝合。
 假设有这样一个模型   选中Target Weld   然后鼠标左键按住起始顶点不放   然后往目标顶点拖动，等到出现黄圈后再松开。   这样就缝合完成。   为了确保缝合成功，可以拖动试一下，看两个顶点的位置有没同时移动。   也可以按数字键3看平滑效果是否正常，如果有顶点没有缝合，平滑时的效果会很奇怪。
风萧萧兮易水寒，壮士一去兮不复还。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Merge Vertices和Target Weld的区别</title>
      <link>http://www.dawnarc.com/2017/10/mayamerge-vertices%E5%92%8Ctarget-weld%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Tue, 03 Oct 2017 00:23:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamerge-vertices%E5%92%8Ctarget-weld%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>Maya版本为2018
Merge Vertices表示将多个顶点合并为一个点，且这个新的顶点的位置可能不是原有顶点的位置。 Target Weld 也是多个点合并为一个点，但是每次只能同时合并两个，且合并过程中需要手动指定起始顶点和目标顶点，而Merge Vertices则不用关心起始顶点和目标顶点。
以下面的模型为例   两种效果分别为：
Merge Vertices（合并点的间隔可以设置，这里为了演示将Threshold设置了最大，即合并为一个点）   Target Weld   Merge Vertices和Target Weld快捷键：按住Shift+鼠标右键-》Merge Vertices。     参考：
Merge Vertices and Target Weld in Maya https://www.youtube.com/watch?v=LsDnWZ4hHTk
效小节者不能行大威，恶小耻者不能立荣名。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Modeling Toolkit 教程03：Symmetry Tool</title>
      <link>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B03symmetry-tool/</link>
      <pubDate>Mon, 02 Oct 2017 22:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B03symmetry-tool/</guid>
      <description>Maya版本为2018
Toolkit中的Symmetry是用来控制对称的，默认是关闭的   假如场景有个模型，我们开启X轴对称     之后的操作，都会沿X轴进行对称处理。 比如选择面的时候，会自动选中沿X轴对称的两个面   同样，挤压、移动都会进行对称处理     启用Symmetry的其他方式  方式1 ：Ctrl + Shift + 鼠标右键，或者Q键+鼠标左键。两种方式等价。      方式2：W键+鼠标左键      方式3：点击右上角的Tool Settings，然后展开Symmetry Settings       祸与福相贯，生与死为邻。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Modeling Toolkit 教程02：Quad Draw</title>
      <link>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B02quad-draw/</link>
      <pubDate>Mon, 02 Oct 2017 22:09:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B02quad-draw/</guid>
      <description>Maya版本为2018
要使用Quad Draw，必须先保证场景有个存在的Mesh或者Live Surface。
这里我们先新建一个Plane。   然后点击Toolkit中的Quad Draw   然后在场景中任意单击鼠标左键，绘制一个个独立的点   然后按住shift键，光标悬停在这些点之间，此时会自动将附近最近的四个点练成一个四边面       确定好要绘制的四边面后，单击鼠标左键，可以完成一个四边面的绘制     明主爱其国，忠臣爱其名。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Modeling Toolkit 教程01：Multi-Cut</title>
      <link>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B01multi-cut/</link>
      <pubDate>Mon, 02 Oct 2017 19:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodeling-toolkit-%E6%95%99%E7%A8%8B01multi-cut/</guid>
      <description>Maya版本为2018
点击右上角的Toolkit图标，打开Modeling Toolkit面板。     下面讲解Multi-Cut的用法。
先新建一个正方体   然后点击Multi-Cut（快捷键Ctrl + Shift + X）   绘制单条边线 光标悬停在模型的点或者边上，点和边会变成红色，表示可以绘制顶点     点击一下顶点或者边线，然后再在空白位置点一下，即可绘制新的顶点和边线：   绘制过程中，起点和终点必须都在原有的模型得到边或者顶点上，如果终点还没有连接其他顶点或边线，则表示绘制还没结束，此时可以接着修改当前新顶点的位置：光标悬停在顶点上，顶点变成红色后，按住鼠标左键拖动。   当终点连接顶点或者边线后，则可以完成这一次绘制，鼠标右键单击物体，表示绘制结束     边线上添加顶点 在边线上点击后可以按住鼠标，回来拖动来移动新添加的顶点的位置，此时会有个百分比显示当前顶点在边线上的位置。   绘制环绕边线 光标悬停在某条边线，边线变红色，按住Ctrl键不放，此时会出现一条黄色的环绕边线     来回移动光标，该黄线会自动跟随光标移动，等确定位置后，单击下鼠标左键，即可绘制出一条环绕的边线。   绘制投射环线 按住鼠标左键拖拽   脱出一条线后松开鼠标，就可以在物体上投射出一条环线   划线的时候，如果希望直线以固定角度旋转，拖拽鼠标左键的时候按住Shift。默认旋转间隔为10度，修改Snap Step，值表示多少度，例如60就表示每次旋转的间隔为60度。   Snap Step （按住Shift键才生效） Multi-Cut有个参数叫Snap Step，表示在卡边（绘制顶点和边线）时，光标可以自动吸附边线的均等份位置上，前提时按住Shift键。
比如默认是10%，表示在按住shift键后，光标在边线上移动时，光标会自动吸附边线的最近的10等分点的位置，如果是50%，则表示光标每次会自动吸附在边线的中点位置。这个操作对上述的环线和单条线都适用。   例如，Snap Step设置为50%后的效果     Keyboard/Mouse Shortcuts 不同的Tool激活后，对应的快捷键提示也会变化，比如Multi-Cut的快捷键如下：   Extrude 挤压 Modeling Toolkit提供了更加快捷的挤压操作：按住Shift + 鼠标左键。</description>
    </item>
    
    <item>
      <title>[Maya]新版本中如何打开已消失的菜单命令</title>
      <link>http://www.dawnarc.com/2017/10/maya%E6%96%B0%E7%89%88%E6%9C%AC%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80%E5%B7%B2%E6%B6%88%E5%A4%B1%E7%9A%84%E8%8F%9C%E5%8D%95%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 02 Oct 2017 18:25:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/maya%E6%96%B0%E7%89%88%E6%9C%AC%E4%B8%AD%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80%E5%B7%B2%E6%B6%88%E5%A4%B1%E7%9A%84%E8%8F%9C%E5%8D%95%E5%91%BD%E4%BB%A4/</guid>
      <description>Maya版本为2018
Maya旧版本的某些菜单在新版本中不存在了，新版本提供了更先进的方式，如果不想用新版本的方式，继续使用旧版本的菜单或命令，可以在maya命令行中输入相应的菜单命令。
比如InteractiveSplitTool和SplitPolygonTool这两个菜单在Maya2015之后就不存在了，如果仍然需要使用，可以在命令行中输入该命令回车，即可激活相应的菜单功能。
Maya2018的命令输入框在底部靠中间的位置。   参考：
https://forums.autodesk.com/t5/maya-forum/where-is-the-interactive-split-tool-in-maya-2015/td-p/5218129
千古江山，英雄无觅，孙仲谋处。---辛弃疾《永遇乐》</description>
    </item>
    
    <item>
      <title>[Maya]Modify</title>
      <link>http://www.dawnarc.com/2017/10/mayamodify/</link>
      <pubDate>Mon, 02 Oct 2017 18:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamodify/</guid>
      <description>Maya版本为2018
坐标轴相对物体居中 Modify -》Center Pivot   NURBS转换为Polygon 点击菜单 Modify -》 Convert -》 NURBS To Polygons   Universal Manipulator （快捷键：Ctrl + T，Q键取消） 用来显示物体的尺寸等信息     Math Transformations 假设有两个物体   我们想将右边物体的Rotation复制到左边的物体上。方式如下： 先框选左边的物体，再按shift键框选右边的问题   然后再点击Modify -》 Match Transformations -》 Math Rotation     Freeze Transformations 当物体执行Transform操作之后，Channel Box面板中的参数就会发生变化。例如：     如果此时就想以物体当前Transform为坐标轴的原点位置，Rotation也相当于初始时的Rotation，Scale也被当作为1，可以点击：Modify -》 Freeze Transformations。   执行后，相关参数就会变化初始化的参数，但是物体的Transform不会变化。   可惜流年，忧愁风雨，树犹如此。---辛弃疾《水龙吟》</description>
    </item>
    
    <item>
      <title>[Maya]Mesh</title>
      <link>http://www.dawnarc.com/2017/10/mayamesh/</link>
      <pubDate>Mon, 02 Oct 2017 12:01:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/10/mayamesh/</guid>
      <description>Maya版本为2018
Combine 假设有两个独立的物体，想把他们合并为一个整体。   先选中两个物体   然后按住Shift + 鼠标右键，点击Combine   这样两个物体就合并和一个整体，共享移动、伸缩、旋转等操作。   如果要分离两个物体，选中后按住Shift + 鼠标右键，点击Separate。
Combine和Separate的菜单位置再Mesh目录下：   Booleans 假设有两个物体相交在一起   然后点击Mesh -》 Booleans，有三个选项：Union结合、Difference相减，Intersection相交。    Union 结合    Difference 相减
先选中的哪个物体，则保留哪个物体    Intersection相交     Triangulate和Quadrangulate（三角化/四角化） 假设有这样一个方框形状的模型，那么的某些面不是三角边也不是四角边   如果需要将所有面转换为三角边或者四角边，点击：Mesh -》 Triangulate或者Quadrangulate     Smooth （相当于ZBrush的Divide细分） 点击菜单Mesh -》Smooth，多次点击可多次平滑       平滑的另外一种方式：</description>
    </item>
    
    <item>
      <title>[Maya]Mesh Tools</title>
      <link>http://www.dawnarc.com/2017/09/mayamesh-tools/</link>
      <pubDate>Sat, 30 Sep 2017 23:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayamesh-tools/</guid>
      <description>Maya版本为2018
Create Polygon Create Polygon作用是可以自由创建一个多边形。
Shift + 鼠标右键 -》 Create Polygon Tool，或者点击菜单 Mesh Tool -》 Create Polygon（2018版本。Maya老版本的Create Polygon Tool 在Mesh菜单下）     然后就在可以场景中，多次单击鼠标左键，画出自定义多边形。   完成后再点击鼠标右键 -》 Complete Tool，或者点击Enter回车键，来完成一个自定义多边形的创建。     Append to Polygon（相当于Bridge的DIY版本） 假设有两个正方体，两个对立面是开口的   先将模型Combine（Mesh -》 Combine）   然后点击 Mesh Tools -》 Append to Polygon   此时开口的边会被自动加粗   然后加粗的某一条边，这些边周围会显示紫色的线   然后点击另外一条与之桥接的边，此时就会将两条边线桥接起来   然后再按Y键，表示这两条边桥接完成，准备桥接其他边   然后再点击其他的一条边，   然后再点击与之桥接的另一条边   重复这些步骤直至所有桥接的边完成。</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]C&#43;&#43;11 template alias和using(模板的模板)</title>
      <link>http://www.dawnarc.com/2017/09/c--c--11-template-alias%E5%92%8Cusing%E6%A8%A1%E6%9D%BF%E7%9A%84%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Fri, 29 Sep 2017 18:47:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/c--c--11-template-alias%E5%92%8Cusing%E6%A8%A1%E6%9D%BF%E7%9A%84%E6%A8%A1%E6%9D%BF/</guid>
      <description>keywords：alias template、模板别名、模板的模板
如果模版的type(T)不是具体类型，也是一个模板，C++11之前的语法不支持，现在C++11提供了新的语法支持这种场景：using identifier attr(optional) = type-id
示例：
template &amp;lt;template &amp;lt;typename&amp;gt; class&amp;gt; struct X { X() { std::cout &amp;lt;&amp;lt; &amp;quot;1&amp;quot;; } }; template &amp;lt;typename&amp;gt; struct Y { }; template &amp;lt;typename T&amp;gt; using Z = Y&amp;lt;T&amp;gt;; template &amp;lt;&amp;gt; struct X&amp;lt;Y&amp;gt; { X() { std::cout &amp;lt;&amp;lt; &amp;quot;2&amp;quot;; } }; int main(int argc, char* argv[]) { X&amp;lt;Y&amp;gt; x1; X&amp;lt;Z&amp;gt; x2; }  运行结果：
21  Type alias, alias template (since C++11)
http://en.cppreference.com/w/cpp/language/type_alias
尺之木必有节目，寸之玉必有瑕瓋。---《吕氏春秋》</description>
    </item>
    
    <item>
      <title>[OpenGL]Shader编译流程示例</title>
      <link>http://www.dawnarc.com/2017/09/openglshader%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Fri, 29 Sep 2017 18:04:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/openglshader%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B%E7%A4%BA%E4%BE%8B/</guid>
      <description>这里以演示如何编译Vertex Shader为例，其他类型的Shader类似。
1，先用io流读取shader文件
std::stringstream code; code &amp;lt;&amp;lt; inFile.rdbuf(); inFile.close(); string codeStr(code.str());  2，创建空白Shader对象
GLuint vertShader = glCreateShader( GL_VERTEX_SHADER );  3，编译Shader代码到Shader对象中
// Load the source code into the shader object const GLchar* codeArray[] = {codeStr.c_str()}; glShaderSource(vertShader, 1, codeArray, NULL); // Compile the shader glCompileShader( fragShader );  4，Shader链接
4.1 创建program对象
// Create the program object GLuint programHandle = glCreateProgram();  4.2 附加Shader对象到program对象中
// Attach the shaders to the program object glAttachShader( programHandle, vertShader ); glAttachShader( programHandle, fragShader );  4.</description>
    </item>
    
    <item>
      <title>[UE4]Character Movement and Networking相关</title>
      <link>http://www.dawnarc.com/2017/09/ue4character-movement-and-networking%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Fri, 15 Sep 2017 10:55:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4character-movement-and-networking%E7%9B%B8%E5%85%B3/</guid>
      <description>keywords：UE4、Movement Replicate、Networking、Server、Client、Smooth
引擎对于客户端服务端的位移同步，CharacterMovementComponent::SmoothCorrection()函数中有进行平滑处理。
其他参考资料：
What is the best way to smooth player movement for network hiccups? Interp? Ease? (no physics)
https://answers.unrealengine.com/questions/479211/what-is-the-best-way-to-smooth-player-movement-for.html
Authoritative Networked Character Movement
https://wiki.unrealengine.com/Authoritative_Networked_Character_Movement
Advanced Topic: Adding New Movement Abilities to Character Movement
https://docs.unrealengine.com/latest/INT/Gameplay/Networking/CharacterMovementComponent/index.html#advancedtopic:addingnewmovementabilitiestocharactermovement
Custom Character Movement Component
https://wiki.unrealengine.com/Custom_Character_Movement_Component
人们常常用咄咄逼人来掩饰弱点，真正持久的力量存在于忍受中，只有软骨头才急躁粗暴，他们因此丧失了人的尊严。我等待，我观看。恩惠也许来，也许不来。也许这种既平静又不平静的等待就是恩惠的使者，抑或恩惠本身。──弗兰茨·卡夫卡（FranzKafka）</description>
    </item>
    
    <item>
      <title>[UE4]Error Detected negative delta time - on AMD systems please install</title>
      <link>http://www.dawnarc.com/2017/09/ue4error-detected-negative-delta-time---on-amd-systems-please-install/</link>
      <pubDate>Fri, 15 Sep 2017 10:55:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4error-detected-negative-delta-time---on-amd-systems-please-install/</guid>
      <description>keywords：UE4、Fixed Frame rate、Dedicated Server、Crash
如果锁定帧率（Project Settings -》 Engine -》 General Settings -》 Use Fixed Frame Rate），专用服务器启动时会报错：
LogWindows: Error: Fatal error: [File:D:\sdk\UnrealEngine-4.17.1-release\Engine\Source\Runtime\Engine\Private\UnrealEngine.cpp] [Line: 1385] LogWindows: Error: Detected negative delta time - on AMD systems please install http://files.aoaforums.com/I3199-setup.zip.html - DeltaTime:-0.000259, bUseFixedFrameRate:1, bTimeWasManipulatedDebug:1, FixedFrameRate:30.000000  感觉这是个bug，提示我要打AMD的补丁，但是我机器是Intel的U。
凝碧旧池头，一听管弦凄切，多少梨园声在，总不堪华发。—韩元吉《好事近》</description>
    </item>
    
    <item>
      <title>[UE4]Error Only Local Player Controllers can be assigned to widgets</title>
      <link>http://www.dawnarc.com/2017/09/ue4error-only-local-player-controllers-can-be-assigned-to-widgets/</link>
      <pubDate>Thu, 14 Sep 2017 19:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4error-only-local-player-controllers-can-be-assigned-to-widgets/</guid>
      <description>服务端错误提示：
PIE: Error: Only Local Player Controllers can be assigned to widgets. MyPlayerController_0 is not a Local Player Controller.  原因：
在服务端创建客户端相关的对象时，则会报这个错误，比如创建一个Widget，需要判断下是客户端还是服务端。
解决办法：
在创建Widget时判断下是否为服务器，例如：
void AReplTestPlayerController::BeginPlay() { if (GetNetMode() == NM_Standalone) { if (UClass* BPClass = LoadClass&amp;lt;UMyUserWidget&amp;gt;(NULL, TEXT(&amp;quot;WidgetBlueprint&#39;/Game/TopDownCPP/Blueprints/NewWidgetBlueprint.NewWidgetBlueprint_C&#39;&amp;quot;))) { LoginWidget = CreateWidget&amp;lt;UMyUserWidget&amp;gt;(this, BPClass); if (LoginWidget) { LoginWidget-&amp;gt;AddToViewport(); } } } }  花自飘零水自流。一种相思，两处闲愁。
此情无计可消除，才下眉头，却上心头。
----李清照《一剪梅》</description>
    </item>
    
    <item>
      <title>[UE4]客户端登陆时如何传递参数给服务器</title>
      <link>http://www.dawnarc.com/2017/09/ue4%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%99%BB%E9%99%86%E6%97%B6%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E7%BB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 14 Sep 2017 14:00:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%99%BB%E9%99%86%E6%97%B6%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E7%BB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>keywords：UE4、Client、Dedicated Server、Passing Arguments、Login、ClientTravel
客户端发送参数 执行PlayerController-&amp;gt;ClientTravel时，默认Address URL如下：
FString Address = TEXT(&amp;quot;127.0.0.1:7777&amp;quot;);  登陆时如果需要传递参数，则URL的格式如下：
FString Address = FString::Printf(TEXT(&amp;quot;127.0.0.1:7777?Param1=%s?Param2=%s&amp;quot;), *Param1, *Param2);  服务端解析参数 先重写GameMode的InitNewPlayer()函数，然后再在该函数内做如下解析：
FString AMyGameMode::InitNewPlayer(APlayerController* NewPlayerController, const FUniqueNetIdRepl&amp;amp; UniqueId, const FString&amp;amp; Options, const FString&amp;amp; Portal = TEXT(&amp;quot;&amp;quot;)) { FString Param1 = UGameplayStatics::ParseOption(Options, TEXT(&amp;quot;Param1&amp;quot;)); FString Param2 = UGameplayStatics::ParseOption(Options, TEXT(&amp;quot;Param2&amp;quot;)); }  官方文档：Passing Arguments To Server During Connection
https://wiki.unrealengine.com/Passing_Arguments_To_Server_During_Connection
明朝且做莫思量，如何过得今宵去？—周紫芝《踏莎行》</description>
    </item>
    
    <item>
      <title>[UE4]HUD中绘制文本(Font字体蓝图使用)</title>
      <link>http://www.dawnarc.com/2017/09/ue4hud%E4%B8%AD%E7%BB%98%E5%88%B6%E6%96%87%E6%9C%ACfont%E5%AD%97%E4%BD%93%E8%93%9D%E5%9B%BE%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 13 Sep 2017 23:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4hud%E4%B8%AD%E7%BB%98%E5%88%B6%E6%96%87%E6%9C%ACfont%E5%AD%97%E4%BD%93%E8%93%9D%E5%9B%BE%E4%BD%BF%E7%94%A8/</guid>
      <description>keywords：UE4、Font、HUD、Canvas
1，先获取需要字体ttf或otf文件。如果是windows系统，打开C:\Windows\Fonts\，然后在Ctrl C和Ctrl V需要的字体文件   2，现在内容浏览器中新建一个Font蓝图：鼠标右键 -》 User Interface -》 Font。   3，打开Font蓝图，然后在Font Family中指定字体文件(ttf或者otf文件)，然后保存。   4，在C++代码钟加载Font蓝图
#include &amp;quot;UObject/ConstructorHelpers.h&amp;quot; UFont* Font; ConstructorHelpers::FObjectFinder&amp;lt;UFont&amp;gt; FontObject(TEXT(&amp;quot;Font&#39;/Game/TopDownCPP/Blueprints/NewFont.NewFont&#39;&amp;quot;)); if (FontObject.Object) { Font = FontObject.Object; }  比如在HUD中绘制文本时需要指定字体，此时就可以使用上面加载好的字体
FCanvasTextItem TextItem(Center2D, FText::FromString(FString(TEXT(&amp;quot;测试文字&amp;quot;))), Font, FColor::Red); Canvas-&amp;gt;DrawItem(TextItem);  心似双丝网，中有千千结。—张先《千秋岁》</description>
    </item>
    
    <item>
      <title>[UE4]创建自定义AIController的方法(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2017/09/ue4%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89aicontroller%E7%9A%84%E6%96%B9%E6%B3%95c--/</link>
      <pubDate>Wed, 13 Sep 2017 20:09:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89aicontroller%E7%9A%84%E6%96%B9%E6%B3%95c--/</guid>
      <description>之前写过如何用C++创建自定义PlayerController方式：
FActorSpawnParameters SpawnInfo; SpawnInfo.Instigator = Instigator; SpawnInfo.ObjectFlags |= RF_Transient; // We never want to save player controllers into a map SpawnInfo.bDeferConstruction = true; AMyPlayerController* NewPC = GetWorld()-&amp;gt;SpawnActor&amp;lt;AMyPlayerController&amp;gt;(AMyPlayerController::StaticClass(), SpawnLocation, SpawnRotation, SpawnInfo);  如果用同样的方式，在服务端创建AIController，会有问题，执行：
EPathFollowingRequestResult::Type AAIController::MoveToLocation(const FVector&amp;amp; Dest, ...);  返回值是Success，但是没有任何效果。
原因：
自己设置FActorSpawnParameters相关参数，对PlayerController可行，但是对AIController，相关参数设置不一样，导致AIController在服务端失效。
解决办法：
两种方式
方式一：AIControllerClass指定 1，先为Character指定AI Controller Class，且禁用AutoPossessPlayer。这段代码可以放在构造函数中，保证在Possess之前设置好。以下3个属性也可以在角色蓝图中指定。
AutoPossessPlayer = EAutoReceiveInput::Type::Disabled; AutoPossessAI = EAutoPossessAI::PlacedInWorld; AIControllerClass = AMyAIController::StaticClass();  2，Character被Spawn出来后，再执行：
void APawn::SpawnDefaultController();  如果AutoPossessAI设置为Disable，则接着执行一下Possess：
void AController::Possess(APawn* InPawn);  方式一：SpawnActor时使用默认FActorSpawnParameters。  AMyAIController* PC = GetWorld()-&amp;gt;SpawnActor&amp;lt;AMyAIController&amp;gt;(AMyAIController::StaticClass(), SpawnLoc, SpawnRot);  不要自己设置FActorSpawnParameters，因为AIController和PlayerController表现不一样。</description>
    </item>
    
    <item>
      <title>[UE4]No owning connection for actor XXX. Function XXX will not be processed</title>
      <link>http://www.dawnarc.com/2017/09/ue4no-owning-connection-for-actor-xxx.-function-xxx-will-not-be-processed/</link>
      <pubDate>Tue, 12 Sep 2017 18:26:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4no-owning-connection-for-actor-xxx.-function-xxx-will-not-be-processed/</guid>
      <description>keywords：UE4、Dedicated Server、Replication、独立服务器
在客户端连接独立服务端的情况下，客户端执行Server函数时提示以下警告：
LogNet: Warning: UIpNetDriver::ProcesRemoteFunction: No owning connection for actor TopDownCharacter_C_0. Function ServerMoveToDest will not be processed.  原因：
Client执行Server函数的对象，是在服务端Spawn出来的，不是在客户端创建的，所以提示这个警告。
比如你在Server端的GameMode中创建了一个Character，且这个Character的Replicated相关属性设置为true，你在客户端用这个Character对象来执行Server函数（即UFUNCTION(Server, Reliable)函数），这时就会提示这个错误。
UE4独立服务端的规则是，只有在客户端创建的对象才允许执行Server函数，比如PlayerController，这个是引擎自动在客户端创建的对象，它身上的Server函数可以在客户端调用且在服务端执行。
解决办法：
如果你的逻辑是要操作某个服务端创建的对象，比如刚刚说的在服务端Spawn出来的Character，可以先通过PlayerController执行Server函数，在其Server函数内部获取服务端的Character对象，然后再执行相关逻辑。
UE4独立服务器的几个注意要点：
 Replicated属性只允许服务端修改，而不允许客户端修改。 客户端和客户端之间无法直接通信，只能通过独立服务器广播通知。 客户端要执行服务端函数，则执行对象必须是在客户端Spawn出来的，服务端创建的且复制到客户端的对象，没有权限执行服务端函数。这也很好理解，这是为了保证安全性。  最高贵的复仇是宽容。──维克多·雨果（HugoVictor）</description>
    </item>
    
    <item>
      <title>[UE4]GetNavigationSystem返回NULL的问题</title>
      <link>http://www.dawnarc.com/2017/09/ue4getnavigationsystem%E8%BF%94%E5%9B%9Enull%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 12 Sep 2017 15:31:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4getnavigationsystem%E8%BF%94%E5%9B%9Enull%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>keywords：UE4、Client、UNavigationSystem、自动寻路、Dedicated Server
在有独立服务器的情况下，客户端默认关闭了Navigation，导致在客户端获取NavigationSystem时始终返回NULL。
UNavigationSystem* const NavSys = GetWorld()-&amp;gt;GetNavigationSystem();  解决办法：
打包之前勾选工程设置的中的Allow Client Side Navigation（Project Settings -》 Engine -》 Navigation System）：   注意事项：
默认关闭Allow Client Side Navigation，是因为UE4的DedicatedServer默认开启了角色的Movement Replicate，所以可以不用客户端寻路。如果要开启此项，一般是关闭了角色的自动位移同步，自己手动处理客户端和服务端的位移同步。
天涯旧恨，试看几许消魂？长亭门外山重叠。不尽眼中青，是愁来时节。—张元千《石州慢》</description>
    </item>
    
    <item>
      <title>[UE4]窗口化启动游戏</title>
      <link>http://www.dawnarc.com/2017/09/ue4%E7%AA%97%E5%8F%A3%E5%8C%96%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Tue, 12 Sep 2017 15:22:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/ue4%E7%AA%97%E5%8F%A3%E5%8C%96%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</guid>
      <description>keywords：UE4、Launch Game、Windowed
命令：
MyProject.exe -WINDOWED  更多参数说明：
Command-Line Arguments
https://docs.unrealengine.com/latest/INT/Programming/Basics/CommandLineArguments/index.html
我住长江头，君住长江尾；日日思君不见君，共饮长江水。—李之仪《卜算子》</description>
    </item>
    
    <item>
      <title>[Algorithms]算法题：计算整数数组中，任意两个元素组合的差值，等于指定值的组合个数</title>
      <link>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E8%AE%A1%E7%AE%97%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BB%BB%E6%84%8F%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E7%BB%84%E5%90%88%E7%9A%84%E5%B7%AE%E5%80%BC%E7%AD%89%E4%BA%8E%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E7%BB%84%E5%90%88%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Tue, 12 Sep 2017 12:19:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E8%AE%A1%E7%AE%97%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BB%BB%E6%84%8F%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E7%BB%84%E5%90%88%E7%9A%84%E5%B7%AE%E5%80%BC%E7%AD%89%E4%BA%8E%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E7%BB%84%E5%90%88%E4%B8%AA%E6%95%B0/</guid>
      <description>题目：
给定一个数组a，再给定一个值k，数组a的任意两个元素组合，他们的差值要求等于k，求出这种组合的对数。比如数组{1, 5, 3, 4, 2}，k=2，那么组合对数等于3，因为符合要求的组合为{1,3}、{4,2}、{5,3}。
代码：
#include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; int main(int argc, char* argv[]) { std::vector&amp;lt;int&amp;gt; a; a.push_back(1); a.push_back(5); a.push_back(3); a.push_back(12); a.push_back(4); a.push_back(6); a.push_back(9); a.push_back(2); int k = 3; int count = 0; std::vector&amp;lt;std::vector&amp;lt;int&amp;gt;&amp;gt; paired_eles(a.size(), std::vector&amp;lt;int&amp;gt;()); for (size_t i = 0; i &amp;lt; a.size(); i++) { for (size_t j = i + 1; j &amp;lt; a.size(); j++) { if (abs(a[i] - a[j]) == k) { paired_eles[i].push_back(j); count++; std::cout &amp;lt;&amp;lt; a[i] &amp;lt;&amp;lt; &amp;quot;,&amp;quot; &amp;lt;&amp;lt; a[j] &amp;lt;&amp;lt; std::endl; } } } std::cout &amp;lt;&amp;lt; count &amp;lt;&amp;lt; std::endl; system(&amp;quot;pause&amp;quot;); }  输出结果：</description>
    </item>
    
    <item>
      <title>[Maya]Select</title>
      <link>http://www.dawnarc.com/2017/09/mayaselect/</link>
      <pubDate>Sat, 09 Sep 2017 20:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayaselect/</guid>
      <description>Maya版本为2018
Selection Constraints  Border
假如有如下物体，一个面删掉了，现在我们想选中这个面的边界，也就是4条边。     然后Ctrl+Shift+鼠标右键，选择：Selection Constraints -》 Border   这样将鼠标放在边界上，就可以自动地同时选中4条边。    Edge Loop（快捷键：鼠标左键双击）
表示选中封闭的环形边线    Edge Ring
表示选中环形表面的独立边线     批量选择 鼠标左键双击一个面，表示选中整个物体。     选中一个面之后再按住shift键，鼠标左键双击相邻的另外一个面，表示选中这一圈的所有面。     选择一个面，然后按住shift键，鼠标左键双击另外一个不相邻的面，则表示选中两个面之间的所有面。     选择共点面 比如圆柱体的上下两个面   批量选择共点面方式有多种：
 方式1：直接框选
  缺点是投射的方向也会被框选    方式2：To Faces
先切换至Vertex，然后选中中心点，按住Ctrl+鼠标右键，选择To Faces -》 To Faces。       同样的方式也可以用来选中共点线，即To Edges。</description>
    </item>
    
    <item>
      <title>[Maya]Harden Edge和Softend Edge区别</title>
      <link>http://www.dawnarc.com/2017/09/mayaharden-edge%E5%92%8Csoftend-edge%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 08 Sep 2017 19:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayaharden-edge%E5%92%8Csoftend-edge%E5%8C%BA%E5%88%AB/</guid>
      <description>keywords：Maya、硬边、软边、3DMax smoothing group、光滑组
简单的说就是：多个面是否公用法线，硬边不共用法线，软件共用法线。Maya的软硬边相当于Max和Blender中的光滑组（Smoothing Groups）。
以下面的球体为例   如果是硬边，则顶点在不同的面的方向上，都有对应的独立的法线。（显示顶点法线：Display -》 Polygons -》 Vertex Normals）     如果是软边，一个顶点关联的不同的面，即使面的方向不同，这个顶点也只有一根法线。   软边的好处是：烘焙法线时，如果硬边位置的UV没有断开，则法线有明显接缝，如果硬边位置的UV不想断开，且又不希望烘焙法线时有明显接缝，那么就可以是将该位置改为软边。
 官方解释   官方文档：
Edit the vertex normals to affect polygon shading
http://download.autodesk.com/global/docs/maya2014/en_us/index.html?url=files/Editing_polygons_Edit_the_vertex_normals_to_affect_polygon_shading.htm,topicNumber=d30e163432
执行Harden Edge/Soften Edge的方式 选中边以后，Display -》 Polygons -》 Soft/Hard Edges   或者在选中边之后按住Shitf+鼠标右键 -》 Soften/Harden Edges     父母之爱子，则为之计深远。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Edit Mesh</title>
      <link>http://www.dawnarc.com/2017/09/mayaedit-mesh/</link>
      <pubDate>Fri, 08 Sep 2017 16:56:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayaedit-mesh/</guid>
      <description>Maya版本为2018
  Extrude 挤压 表示在原有物体上挤压出新的形状。 先选中需要挤压的面   然后点击 Edit Mesh -》 Extrude（Ctrl + E），或者Shift + 鼠标右键 -》 Extrude Face     然后拖动坐标轴     其中，右上角的小圆圈表示坐标轴类型，默认是当前面朝向的坐标轴，点击一下可切换到世界坐标轴   挤压后可以设置的3个常用属性：Offset、Divisions、Thickness   Offset=0.3   Divisions=11   Thickness=3   除了可以直接修改数值，还可以用鼠标拖动： 先选中属性名   然后鼠标悬停在输入栏，光标会变成表示可左右拖动的样式，然后按住鼠标左键左右拖动   平面内卡环线的技巧：Extrude挤压和Scale伸缩结合使用 假设我们想用圆柱体挤压出这样的效果   方式如下：
先选中面，然后Ctrl+E挤压     此时不用拖动坐标轴，而是按下R键切换到Scale模式   然后按住中间的黄色小方块拖拽   然后再按Ctrl+E，然后再拖动向上的坐标轴     这种方式同样可以用凹槽效果的底边卡线   Extract提取 表示将面从物体中分离并提取出来。 先选中面   然后点击Edit Mesh -》 Extract     此时再拖动坐标轴，就可以将选中的面提取出来   Average Vertices 当顶点分布不均匀时，通过Average Vertices可以是顶点重新分布均匀   选中需要均匀分布的顶点，然后点击：Edit Mesh -》 Average Vertices。     多次点击可以可使顶点逐步均匀，直至和周围的布线统一。     Bridge桥接 假设有两个正方体，对立的两个面都是开口的。   先将两个模型Combine（Mesh -》 Combine）   然后选中两个模型的开口的4条边   然后在点击：Edit Mesh -》 Bridge   Project Curve on Mesh 演示示例 先新建一个球体，和一个圆形曲线     调整曲线的位置和旋转     然后切换到需要投射方向的视图   然后同时选中球体和圆圈   然后再点击Edit Mesh -》 Project Curve on Mesh   这样在球体上就投射形成了一个特殊曲线   然后再选中球体和球体上的曲线，选中方式：按住鼠标左键框选曲线和球体，不要点击球体     如果单击球体，选中状态就是这样的（这种情况下无法进行后续的操作）：   然后点击Edit Mesh -》 Split mesh with projected curve     然后拖动球体，是原本的曲线与球体分离开   然后再切换到侧向视图，   选中要删除的面，并删除     这样就挖出了一个特殊形状的开口   Detach Component 分离组件 假设有个球形，选中一圈线   然后执行：Edit Mesh -》 Detach   或者按住Shift + 鼠标右键 -》 Detach Components   然后切换到面选中模式，双击某个面，选中整个被分离出来的Component     然后就可以拖动这个Component。此时两个Components仍然属于同一个Object。   谋泄者，事无功；计不决者，名不成。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Display-Polygon</title>
      <link>http://www.dawnarc.com/2017/09/mayadisplay-polygon/</link>
      <pubDate>Fri, 08 Sep 2017 11:38:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayadisplay-polygon/</guid>
      <description>Maya版本为2018
Display -》 Polygons，都是Polygon显示相关的菜单。     Backface Culling 表示是否显示背面的网格。默认情况下，选中点线面时，默认会把背部的点线面也选中，如果只想选中当前正面的点线面，可以点击Backface Culling。 显示背面：   隐藏背面   Face Normals 显示面的法线   Vertex Normals 显示顶点的法线   Border Edges 边界边加粗显示   Edge Width 调节Border Edges的线宽   面刺寡人之过者，受上赏；上书谏寡人者，受中赏；能谤讥于市朝闻寡人之耳者，受下赏。---《战国策》</description>
    </item>
    
    <item>
      <title>[Tools]windows的命令行工具</title>
      <link>http://www.dawnarc.com/2017/09/toolswindows%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 06 Sep 2017 23:10:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/toolswindows%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
      <description>cmder Linux上文件目录相关的命令都可以通过这个工具在Windows运行，并且能自动识别git版本目录。
https://github.com/cmderdev/cmder   高柳垂阴，老鱼吹浪，留我花间住。田田多少，几回沙际归路。---姜夔《念奴娇》</description>
    </item>
    
    <item>
      <title>[OpenGL]GLSL Cookbook源码编译步骤流程</title>
      <link>http://www.dawnarc.com/2017/09/openglglsl-cookbook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 06 Sep 2017 22:38:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/openglglsl-cookbook%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4%E6%B5%81%E7%A8%8B/</guid>
      <description>以下文章内容是基于glslcookbook所在github上2017年8月份的提交版本，当前文章所述的配置glm和glfw的步骤与github上最新CMakeList.txt已不再适用！针对2018.06的github代码，我新增了文章《[OpenGL]GLSL Cookbook源码编译步骤流程(2018.06新版)》。如果是萌新，建议先把当前旧文章看完再看新文章。
 这里讲解《OpenGL 4 Shading Language Cookbook, Second Edition》 这本书的示例代码如何编译。
编译步骤 1，下载glm的源码，并用cmake-gui生成出VisualStudio的工程文件。
https://github.com/g-truc/glm/releases
2，下载glfw。
https://github.com/glfw/glfw/releases
注意是下载bin文件不是src源码。（如果你想用src编译lib，则无视）
3，下载glslcookbook源码，这是《OpenGL 4 Shading Language Cookbook, Second Edition》的书籍源码，下载后同样用cmake-gui生成vs工程文件： https://github.com/daw42/glslcookbook
4，cmake-gui首次生成glshcookbook源码时会报错   这时需要指定GLM的依赖库位置，这个位置就是步骤1中的生成的GLM库的bin目录。注意这个bin目录不是GLM自带的，是通过cmake-gui指定生成的。
在指定GLM_INCLUDE_DIR之后，再点击Generate，又会出现新的错误，提示GLFW找不到，这时需要再指定GLFW的相关目录，即步骤2中下载的GLFW lib和头文件。   参数解释：
 CMAKE_BUILD_TYPE ：默认，不做修改 CMAKE_CONFIGURATION_TYPES ：默认，不做修改 CMAKE_INSTALL_PREFIX ：不清楚，删掉也不影响 GLFW3_INCLUDE_DIR ：GLFW的头文件目录 GLFW3_LIBRARY ：GLFW的静态库目录 GLM_INCLUDE_DIR ：GLM的头文件目录  最后生成成功的提示为：   打开VS工程，可以看到每一章的示例代码并可编译。（这里看不到.sln的图标是因为我电脑之前卸载了旧版本的vs，导致新版本vs的图标显示不正常，可以无视）     运行程序 每个章节的exe无法双击运行，需要命令输入相关参数。 以章节5为例，先CD到exe所在目录：
cd /d D:\glslcookbook\bin\chapter05\Debug&amp;gt;  然后输入：
chapter05.exe  则会提示：
Recipe names: blur : Gaussian blur deferred : deferred rendering edge : edge detection filter gamma : gamma correction msaa : multisample anti-aliasing tone-map : tone mapping example.</description>
    </item>
    
    <item>
      <title>[Build]cmake-gui使用</title>
      <link>http://www.dawnarc.com/2017/09/buildcmake-gui%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 06 Sep 2017 14:50:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/buildcmake-gui%E4%BD%BF%E7%94%A8/</guid>
      <description>要使用cmake-gui，请确保已经写好了CMakeLists.txt。 打开cmake-gui后，指定source目录和生成的bin目录。   再点击Configure，指定VS版本。然后就可以生成VS工程sln等文件了。   如果生成过程中有相关依赖库没有指定正确，输出窗口会给出提示，比如示例中有个glm库的没有指定，此时我们再重新指定下依赖库的位置。   配置后再点击Generate，直到没有错误信息提示。   CMAKE相关的配置说明  CMAKE_CONFIGURATION_TYPES
表示VS上的Solution Configurations（Debug/Release等）选项    CMAKE_INSTALL_PREFIX
表示编译后存放的目录，以方便FIND_XXX()方式来查找。
  删除临时文件 如果要删除cache文件，点击：File -》 Delete Cache。   树德莫如滋，去疾莫如尽。----《左传》</description>
    </item>
    
    <item>
      <title>[OpenGL]Mesa3D，一个OpenGL规范的开源库</title>
      <link>http://www.dawnarc.com/2017/09/openglmesa3d%E4%B8%80%E4%B8%AAopengl%E8%A7%84%E8%8C%83%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93/</link>
      <pubDate>Tue, 05 Sep 2017 18:48:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/openglmesa3d%E4%B8%80%E4%B8%AAopengl%E8%A7%84%E8%8C%83%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93/</guid>
      <description>官方：
https://mesa3d.org/
优点：开源
缺点：硬件加速支持不够
马上琵琶关塞黑。更长门、翠辇辞金阙。看燕燕，送归妾。---辛弃疾《贺新郎》</description>
    </item>
    
    <item>
      <title>[OpenGL]Windows上OpenGL开发环境搭建</title>
      <link>http://www.dawnarc.com/2017/09/openglwindows%E4%B8%8Aopengl%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 05 Sep 2017 16:38:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/openglwindows%E4%B8%8Aopengl%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>转载请注明出处：http://www.dawnarc.com/
网上资料很多都是基于Cygwin来搭建的环境，这里介绍一种非Cygwin搭建Windows上的OpenGL开发环境。
1，OpenGL Loader Generator下载安装
OpenGL Loader是一个标准规范，定义了如何在运行时期间加载OpenGL相关函数的指针。 这是windows上开发OpenGL程序才需要的lib，因为从1.1版本开始，windows不在对OpenGL 后续版本的 ABI(application binary interface)提供支持（可能是微软的DX出来后与OGL商业竞争吧），所以开发者无法直接获取OGL新版本的相关函数，不过有好心人写了工具，在运行时期间获取OGL的新版函数，这里介绍两个开源库：
glad
https://github.com/Dav1dde/glad
glloadgen
https://bitbucket.org/alfonse/glloadgen/wiki/Home
我是用的是glad，这个开源库的开发者还提供了在线生成工具，可以不用下载安装Load Generator，直接在线生成指定版本的OpenGL Loader： http://glad.dav1d.de/
2，编译OpenGL Loader的静态库
通过glad生成的代码，编译一个lib， 以便后面的的示例工程调用。因为这些代码开发者不用做修改，只是调用，所以最好编译成lib，而不要直接加到自己的项目代码中。
3，下载GLM（OpenGL Mathematics）
这是OpenGL的数学库
https://github.com/g-truc/glm/releases
4，下载GLFW
这是一个提供了OpenGL, OpenGL ES和Vulkan相关接口的跨平台的开源库，有这个库你就可以访问他们的最新API。 https://github.com/glfw/glfw/releases
5，新建一个C++工程并设置OpenGL相关的头文件和静态库
指定头文件的目录   指定静态库的目录   在代码需要包含的头文件以及lib：
#include &amp;lt;KHR/khrplatform.h&amp;gt; #include &amp;lt;glad/glad.h&amp;gt; #include &amp;lt;GLFW/glfw3.h&amp;gt; #pragma comment(lib, &amp;quot;opengl32.lib&amp;quot;) #pragma comment(lib, &amp;quot;glad.lib&amp;quot;) #pragma comment(lib, &amp;quot;glfw3.lib&amp;quot;)  新建的测试工程叫GLTest，目录结构如下： 新加了两个分别叫include和lib的目录，用于存放第三方库的头文件和库文件   完整的测试的代码：
#pragma once #include &amp;lt;iostream&amp;gt; #include &amp;lt;windows.h&amp;gt; #include &amp;lt;fstream&amp;gt; #include &amp;lt;sstream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;KHR/khrplatform.</description>
    </item>
    
    <item>
      <title>[Algorithms]算法题：多个字母任意组合多个新字符串</title>
      <link>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%A4%9A%E4%B8%AA%E5%AD%97%E6%AF%8D%E4%BB%BB%E6%84%8F%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 03 Sep 2017 20:22:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%A4%9A%E4%B8%AA%E5%AD%97%E6%AF%8D%E4%BB%BB%E6%84%8F%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>题目：
比如一串字符，string s = &amp;ldquo;abcd&amp;rdquo;，假设里面的每个字符都不重复，求出这些字符任意组合后，形成的所有的新字符串。忽略掉顺序，比如ac和ca是同一种。 例子：
abc的3个字符可以组合的情况为： a b c ab bc ac abc
代码：
#include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; int main(int argc, char* argv[]) { std::string s(&amp;quot;abcd&amp;quot;); std::vector&amp;lt;std::string&amp;gt; vec; for (size_t i = 0; i &amp;lt; s.length(); i++) { std::string s1(1, s.at(i)); vec.push_back(s1); for (size_t j = i + 1; j &amp;lt; s.length(); j++) { for (size_t k = 0; k &amp;lt; s.length() - j; k++) { std::string s2 = s.</description>
    </item>
    
    <item>
      <title>[Algorithms]算法题：字符串转换为整数并排序</title>
      <link>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 03 Sep 2017 20:22:28 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/algorithms%E7%AE%97%E6%B3%95%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>题目：
给定一组字符串，字符串中的字符都是数字，比如：&amp;rdquo;343&amp;rdquo;、&amp;rdquo;4521&amp;rdquo;、&amp;rdquo;3&amp;rdquo;，将这些字符串转换为整数后并升序排序。
代码：
#include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;math.h&amp;gt; int main(int argc, char* argv[]) { std::vector&amp;lt;std::string&amp;gt; StrArr; StrArr.push_back(std::string(&amp;quot;563435&amp;quot;)); StrArr.push_back(std::string(&amp;quot;234234&amp;quot;)); StrArr.push_back(std::string(&amp;quot;454&amp;quot;)); StrArr.push_back(std::string(&amp;quot;5765&amp;quot;)); StrArr.push_back(std::string(&amp;quot;12&amp;quot;)); StrArr.push_back(std::string(&amp;quot;6&amp;quot;)); //字符串转数字 std::vector&amp;lt;int&amp;gt; IntArr; for (std::string&amp;amp; str : StrArr) { size_t len = str.length(); int val = 0; for (size_t i = 0; i &amp;lt; len; i++) { char c = str.at(i); //判断是不是阿拉伯数字 if (c &amp;lt; 48 || c &amp;gt; 57) { continue; } int iv = c - 48; val += pow(10, (len - 1 - i)) * iv; } IntArr.</description>
    </item>
    
    <item>
      <title>[Maya]Polygon建模的常用操作与命令</title>
      <link>http://www.dawnarc.com/2017/09/mayapolygon%E5%BB%BA%E6%A8%A1%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 02 Sep 2017 18:00:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayapolygon%E5%BB%BA%E6%A8%A1%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%91%BD%E4%BB%A4/</guid>
      <description>Maya版本为2018
Bevel Edge倒角        倒角的大小有参数Fraction控制，默认是0.5（边线的二分之一处），如果改成0.1（边线的十分之一处）则倒角会变小     也可以把Offset as Fraction关掉，通过Offset来设置倒角的大小，效果一样。     Insert Edge Loop插入环形边线 两种方式，一种是在Object Mode模式下，Shift + 鼠标右键 -》 Insert Edge Loop Tool，一种是点击菜单Mesh Tools-》 Insert Edge Loop。     然后在按住鼠标左键在需要插入的位置上拖动。     Edge Ring and Split 插入中线 先选中要插入中线的边   再按住Ctrl键+鼠标右键，选择Edge Ring Utilities，   再选择To Edge Ring and Split。   效果   Extrude Face挤压面 先选中面   然后按住shift+鼠标右键，选择Extrude Face   然后拖动坐标轴   默认是挤压出的面是黏在一起的，如果想让选中的面分开挤压，再按住Ctrl+Shift+鼠标右键，选择Toggle Keep Faces Together。   效果：   如果想合并，再执行一次Toggle Keep Faces Together。</description>
    </item>
    
    <item>
      <title>[Maya]Project相关</title>
      <link>http://www.dawnarc.com/2017/09/mayaproject%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Fri, 01 Sep 2017 10:52:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/09/mayaproject%E7%9B%B8%E5%85%B3/</guid>
      <description>生成工程文件目录结构 如果要为工程建一个系统的文件目录结构，点击：File -》 Project Window   然后再点击New为工程命名，然后再点击Accept，   这样就会在指定目录下创建一系列的文件夹，用于存放不同类型的工程文件   多个工程目录之间切换 如果我们有多个工程，需要再不同工程目录之间切换，点击Edit -》 Set Project：   然后再选择指定的工程目录：   十年生死两茫茫，不思量，自难忘。---苏轼《江城子》</description>
    </item>
    
    <item>
      <title>[Maya]Hotbox</title>
      <link>http://www.dawnarc.com/2017/08/mayahotbox/</link>
      <pubDate>Thu, 31 Aug 2017 21:42:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayahotbox/</guid>
      <description>Maya版本为2018
Hotbox是maya的招牌功能，用的熟练可以提高建模效率。
按下空格键不放，会弹出快捷菜单   单击需要的菜单（下图中点击的Mesh Tools），就可以弹出来。好处是不用到屏幕顶部的菜单点击，只在当前鼠标位置附近找到相应菜单。   按住Ctrl或者Shift或者Ctrl+Shift，再按鼠标右键都可以弹出hotbox菜单，选中的组件类型（Vertex、Edge、Face）不同，弹出的菜单也不同。
选中Vertex 分别按Shift、Ctrl，再按鼠标右键时的菜单：（选中Vertex后，Ctrl+Shift+右键无任何菜单）   选中Edge 分别按Shift、Ctrl，再按鼠标右键时的菜单：   选中Face 分别按Shift、Ctrl，再按鼠标右键时的菜单：   Vertex、Edge、Face三者的Ctrl+鼠标右键相同：   Q、W、E、R（即Select、Move、Rotate、Scale四种模式与点、线、面是否选中无关）+鼠标左键 Q键+鼠标左键，或者Ctrl+Shift+鼠标右键。   W键+鼠标左键   E键+鼠标左键   R键+鼠标左键   见兔而顾犬，未为晚也；亡羊而补牢，未为迟也。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Move Tool常用设置参数</title>
      <link>http://www.dawnarc.com/2017/08/mayamove-tool%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 31 Aug 2017 20:25:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayamove-tool%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0/</guid>
      <description>双击Move Tool，打开参数菜单。   在Move Snap Settings下有个参数Retain Component Spacing，表示吸附操作时是否保持各个顶点的间距。   假设有这样两个平面物体，左下方的问题的某条边的4个顶点位置相互错开，现在要使用Snap to Points将这4个顶点吸附到右上角物体的边上。   开启Retain Component Spacing后效果：   关闭Retain Component Spacing后效果：   开启关闭Retain Component Spacing的快捷方式：W键按住不放+鼠标左键。   Soft Select 软选择（快捷键：B键）   假设有个球体，选择了部分顶点，并准备移动这些顶点：   如果不开启Soft Select，那么想移动物体表面的某些顶点，效果是这样算的：   开启Soft Select之后，顶点的颜色会发生变化：   然后再移动，相比不开启的效果，模型的变化会比较自然。   如果要调节Soft Select的大小范围，按住B键不放，在拖拽鼠标左键：   Soft Select的Falloff Mode 假设球体的某些面被删掉了   如果Falloff mode为Volume，那么移动时，不会忽略被删掉的面，顶点会整体移动     如果Falloff mode选择Surface，则移动时会忽略断开的顶点。     注意：如果你的Soft Select范围太大，可能Surface和Volume两种模式没有效果，如果要使用Surface模式，需要将范围调整到尽量小的范围。</description>
    </item>
    
    <item>
      <title>[Maya]Snap操作</title>
      <link>http://www.dawnarc.com/2017/08/mayasnap%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 31 Aug 2017 15:15:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayasnap%E6%93%8D%E4%BD%9C/</guid>
      <description>场景网格的显示与隐藏        Snap To Grids（快捷键X按住不放） 点击Snap To Grids，表示物体移动时吸附场景的网格来移动，就是说移动的最小单位距离为一个方格大小。如果只是临时需要启用Snap To Grids，可以按住X键不放，等操作完了在松开X键。X键表示Snap to Grids取消或者选中：如果当前Snap 拖Grips未选中，按住X键就表示选中，否则相反。   如果要快速的拖动物体移到某个网格位置，可以按住X键不放，然后再在网格位置出按住鼠标中间并短距离的拖动以下。     Snap To Grids 技巧1 比如你想用Multi-Cut沿着网格投射出一条线，但是你希望的投射线段的起点对应的Grid网格正好再模型内部且周围点和线较多（途中黄圈部位），这是你把鼠标悬停在这个网格位置处，maya不一定会自动帮你吸附到这个网格，这个时候的解决办法为： 从模型外的网格投射，然后再删掉不想要的部分。比如把图中两个红圈所示的位置当作起点进行投射，这样maya就会自动帮你吸附在这两个位置处。   Snap To Curves（快捷键C按住不放） 假设有个场景有个平面物体。我们在物体旁边画一条曲线。
先点击：Create -》 Curve Tools -》 CV Curve Tool，   然后鼠标左键依次点击多个点，形成一条曲线，   生成好以后，再点击鼠标右键，弹出菜单中，选择Complete Tool。     然后再选中平面的一个顶点   然后选中Snap to Curves（或者按住C键不放）：   然后再把鼠标悬停在曲线上，并按住鼠标中键不放，来回滑动，就可以将选中的顶点沿曲线滑动。   在Snap to Curves模式下，除了可以吸附曲线滑动，也可以吸附其他的物体的边沿直线来滑动。   Snap to Points（快捷键：V键按住不放） 比如，相对两个平面的物体的边做缝合操作。   鼠标右键选择Vertex，切换到顶点模式。   再选择Move Tool，快捷键W。   再选中要缝合的点。   点击Snap to Points，或者按住V键不放。   然后把鼠标悬停在要另外一个物体要缝合的点上，比如红框标识的位置，然后再按住鼠标中键不放，小距离拖拽一下。   这样就可以把两个点连接在一起。     两条边上的点都连接好以后，切换到Object Mode，   然后选中两个物体。   然后执行Combine（Mesh -》 Combine）   然后框选要缝合的点。</description>
    </item>
    
    <item>
      <title>[UE4]VS2017(15.3)编译引擎代码错误：error C2187 syntax error &#39;identifier&#39; was unexpected here</title>
      <link>http://www.dawnarc.com/2017/08/ue4vs201715.3%E7%BC%96%E8%AF%91%E5%BC%95%E6%93%8E%E4%BB%A3%E7%A0%81%E9%94%99%E8%AF%AFerror-c2187-syntax-error-identifier-was-unexpected-here/</link>
      <pubDate>Wed, 30 Aug 2017 22:05:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/ue4vs201715.3%E7%BC%96%E8%AF%91%E5%BC%95%E6%93%8E%E4%BB%A3%E7%A0%81%E9%94%99%E8%AF%AFerror-c2187-syntax-error-identifier-was-unexpected-here/</guid>
      <description>错误信息：
D:\Program_Filesx86\Windows Kits\8.1\include\um\combaseapi.h(229): error C2187: syntax error: &#39;identifier&#39; was unexpected here  报错的代码位置：c:\Program Filesx86\Windows Kits\8.1\Include\um\combaseapi.h
extern &amp;quot;C++&amp;quot; { template&amp;lt;typename T&amp;gt; _Post_equal_to_(pp) _Post_satisfies_(return == pp) void** IID_PPV_ARGS_Helper(T** pp) { #pragma prefast(suppress: 6269, &amp;quot;Tool issue with unused static_cast&amp;quot;) static_cast&amp;lt;IUnknown*&amp;gt;(*pp); // make sure everyone derives from IUnknown return reinterpret_cast&amp;lt;void**&amp;gt;(pp); } }  原因：VS2017 15.3版本的bug。
解决办法：把下面这个代码补丁加入你们引擎代码中。估计4.17.2版本就会把这个补丁合进来。 https://github.com/EpicGames/UnrealEngine/commit/4f48ef53ed646a22532e8e981f5515c94f303932
参考自：
https://answers.unrealengine.com/questions/688112/ue417-will-not-compile-with-new-153-update.html
寂寞凭高念远，向南楼、一声归雁。—陈亮《水龙吟》</description>
    </item>
    
    <item>
      <title>[Maya]Parent</title>
      <link>http://www.dawnarc.com/2017/08/mayaparent/</link>
      <pubDate>Wed, 30 Aug 2017 15:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayaparent/</guid>
      <description>打开Outliner，选中需要执行Parent操作的物体。   需要同时选中多个，如果只选择一个无法执行Parent。且最先选中的哪个物体，则该物体会被当作父节点，其他物体当作子节点。
选中后在点击：Edit -》 Parent。     子物体执行Transform，父物体不会变换，但父物体执行Transform，所有物体都会变换。
东风夜放花千树，更吹落、是如雨。---辛弃疾《青玉案 元夕》</description>
    </item>
    
    <item>
      <title>[Maya]Group</title>
      <link>http://www.dawnarc.com/2017/08/mayagroup/</link>
      <pubDate>Wed, 30 Aug 2017 14:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayagroup/</guid>
      <description>创建Group 假设有两个模型   想把两个模型分成一个Group，框选两个物体，再点击：Edit -》 Group，快捷键：Ctrl + G。     再点开Outliner，就可以看到创建的Group：   当点击该Group，就可以同时选中两个物体。点击其中一个物体名称，就可以选中单个物体。         当选中某个物体后，再点击向上箭头，就会选中整个Group     删除Group 选中Group之后，再点击：Edit -》 Ungroup。   宁为鸡口，无为牛后。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]Duplicate Special</title>
      <link>http://www.dawnarc.com/2017/08/mayaduplicate-special/</link>
      <pubDate>Wed, 30 Aug 2017 12:54:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayaduplicate-special/</guid>
      <description>Duplicate Special之Instance 假设场景有个正方体，然后点击Duplicate Special菜单的方框   然后再选择Instance和Parent：   然后再点击Apply，此时就复制出了一个模型   复制出这个模型，是可以和原物体同时编辑的，比如我拖动某个点，那么另外一个物体也会提示变化。   孪子之相似者，唯其母知之而已；利害之相似者，唯智者知之而已。---《战国策》</description>
    </item>
    
    <item>
      <title>[Maya]修改坐标轴原点</title>
      <link>http://www.dawnarc.com/2017/08/maya%E4%BF%AE%E6%94%B9%E5%9D%90%E6%A0%87%E8%BD%B4%E5%8E%9F%E7%82%B9/</link>
      <pubDate>Tue, 29 Aug 2017 20:21:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/maya%E4%BF%AE%E6%94%B9%E5%9D%90%E6%A0%87%E8%BD%B4%E5%8E%9F%E7%82%B9/</guid>
      <description>方式一：Insert 默认坐标轴中间在模型底部的正中间位置，   如果想改变坐标轴原点位置，先把物体挪开，然后再按下insert键   此时就可以移动坐标轴   确定好新的坐标世界坐标原点后，再按一次insert键，即可完成修改。   技巧：如果移动过程中，希望坐标轴能一个网格一个网格的移动，而不是随意距离拖动，点击Snap to Grids（快捷键：按住X键不放）。   方式二：Reset Transformation 先将物体移动后，先执行：Modify -》 Freeze Transformations，再执行：Modify -》 Reset Transformations。   执行后坐标轴原点就会自动变为初始时的位置。   方式三：快捷键D 与Insert键一样，但是相对Insert键按起来更方便，因为Insert键离字母键区域较远。
坐标轴相对物体居中   庭院深深深几许？杨柳堆烟，帘幕无重数。---欧阳修《蝶恋花》</description>
    </item>
    
    <item>
      <title>[Maya]Edit</title>
      <link>http://www.dawnarc.com/2017/08/mayaedit/</link>
      <pubDate>Tue, 29 Aug 2017 18:20:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayaedit/</guid>
      <description>Repeat 上一次执行的操作（G键）   比如我们对某条边执行了Bevel操作，   相对另一条边也执行同样的操作，可以选择该边后，按G键，就会自动重复上次的操作。   Duplicate复制（Ctrl + D） 复制一个物体，快捷键Ctrl + D，相当于Ctrl + C再Ctrl + V的效果。   Duplicate with Transform 变换复制（Shift + D）   比如我们先按下Ctrl + D，复制出一个模型出来，然后再拖动一段距离：   然后再按shift + D，那么就会自动复制一个模型且复制上一次执行的Transform操作   注意，Duplicate With Transform不止对Move操作有效，对Rotate、Scale操作也有效。
 G键虽然也是重复上一次操作，但是它只会复制，不会进行执行移动。

Duplicated Special 特殊复制（Ctrl + Shift + D）   打开其参数面板后，可以设置复制时旋转的角度和个数等信息，然后一次性生成。相当于Shift+D的批量执行。   Duplicated Special之Instance 假设我们有这个细分级别为20的圆柱   现在只保留一个细分段，其他都删掉   然后设置参数：
 Geometry type修改为Instance； 修改旋转角度，因为我们细分级别是20,360度除以20等于18； 复制一圈需要20个，所以还需要再复制19个。     这样复制出来的的每个小块，就可以同时编辑了   比如选中任意某个顶点，就会自动选中一圈的所有顶点   移动一个顶点，其他顶点也会做轴对称移动   操作面或线时也会有轴对称变化的效果   注意：复制出来的对象都是一个个独立的Object，如果要最终合并下，需要执行Combine。</description>
    </item>
    
    <item>
      <title>[Maya]Windows-Preference首选项设置</title>
      <link>http://www.dawnarc.com/2017/08/mayawindows-preference%E9%A6%96%E9%80%89%E9%A1%B9%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Tue, 29 Aug 2017 18:10:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/mayawindows-preference%E9%A6%96%E9%80%89%E9%A1%B9%E8%AE%BE%E7%BD%AE/</guid>
      <description>Undo 设置历史记录的最大条数 Windows -》 Settings/Preferences -》 Preferences     Plug-in Manager 插件管理器 Windows -》 Settings/Preferences -》 Plug-in Manager，打开之后就可以看到各种插件，比如Unfold3D。   东风似旧，向前度桃花，刘郎能记，花复认郎否？---刘辰翁《摸鱼儿》</description>
    </item>
    
    <item>
      <title>[Maya]基础操作之：选择、移动、旋转、伸缩</title>
      <link>http://www.dawnarc.com/2017/08/maya%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E4%B9%8B%E9%80%89%E6%8B%A9%E7%A7%BB%E5%8A%A8%E6%97%8B%E8%BD%AC%E4%BC%B8%E7%BC%A9/</link>
      <pubDate>Mon, 28 Aug 2017 16:44:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/maya%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E4%B9%8B%E9%80%89%E6%8B%A9%E7%A7%BB%E5%8A%A8%E6%97%8B%E8%BD%AC%E4%BC%B8%E7%BC%A9/</guid>
      <description>Keywords：Maya、选择、移动、旋转、伸缩、Select、Move、Rotate、Scale、Lasso
如下图所示，图标从上到下依次是： Select Tool（快捷键Q） Lasso Tool（套索工具） Paint Selection Tool（选择笔刷工具） Move Tool（快捷键W） Rotate Tool（快捷键E） Scale Tool（快捷键R）   Move Tool 点线面的移动 点移动   线移动   面移动   操作的历史记录 Shift+鼠标右键的命令，每次执行后，都会在Channel Box的Input下面生成一条历史记录。   比如执行一次Extrude Face后，就会多出一条历史记录   可以点击这条记录，展开相关参数，进行编辑   Select Tool 选择 以点选择为例，假设有个模型如下：   选择Select Tool（Q键），然后鼠标右键选择Vertex：   然后鼠标左键框选需要选中的顶点：   被选中的点为红色，未选中的为紫色：   如果需要加选，按住Ctrl + Shift键：     按住Shift键，表示反向选择。比如框选区域内，选中的取消选中，未被选中的变为选中：   Lasso Tool 套索 Lasso套索工具提供了任意选择方式，比如需要选中的点不在一个规则范围内，则可以使用lasso勾画出需要选中的点。     Move Tool 整个物体的移动   将鼠标放在某个箭头上，该箭头会变为金色，此时再拖动鼠标就可以在该坐标轴上移动。</description>
    </item>
    
    <item>
      <title>[Maya]常用快捷键和基础操作</title>
      <link>http://www.dawnarc.com/2017/08/maya%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 27 Aug 2017 16:27:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/maya%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>注意，这里使用的maya版本是2017。
菜单分类切换 Maya提供了很多功能，不同功能对应的菜单也不同，当切换到某一种功能时，则菜单也会随之改变。maya提供的功能有：
Modeling（建模）
Rigging（骨骼绑定）
Animation（动画）
FX（特效）
Rendering（渲染）
  编辑区视图的切换 将鼠标放在编辑区视图内（红框部分），然后点击下空格键，就会切换成4个小的视图，左上角是顶视角，左下是前视角，右下是右视角。     视图排版 启动Maya后默认显示的视图是一个透视图，如果希望显示两个视图或者4个视图，可以点击屏幕右侧的Panel Layout按钮     如果想选择更多的显示方案，可以右键点击Panel Layout按钮，比如选择3个视图     切换背景色 Alt + B，每按一次，背景色切换一次。   UI工具条的显示与隐藏 点击：Windows -》 UI Elements -》 勾选需要隐藏或者显示的菜单栏   编辑视图的旋转、缩放、平移 旋转：Alt + 鼠标左键。
缩放：Alt + 鼠标右键；或者鼠标中间滚动。
平移：Alt + 鼠标中键。
摄像机视角的Undo和Redo 比如当你编辑视图中对摄像机进行旋转、缩放、平移后，你想回到上次的摄像机视角来查看物体，可以按Alt+Z，然后若想再回到最后一次摄像机视角，按Alt+Y。
Alt + Z：回到上一次的视图。可多次执行
Alt + Y： Alt+Z的倒序执行。可多次执行
创建初始对象时的Interactive Creation 如果勾选了这个选项，那么在创建一个物体时，需要鼠标再编辑场景中手动拖拽出一个模型，并且大小会根据拖拽的距离自动拉伸；如果不勾选，就会在点击创建的时候自动的创建一个模型。   创建基础模型的3种方式 1，Create菜单栏   2，Shelf菜单栏   3，按住Shift + 鼠标右键   技巧：shift+右键时不用将鼠标放在菜单按钮内，只要灰色的连线朝向按钮或者划过按钮，都可以选中，这样你就可以快速拖拽，甚至可以不用等菜单弹出，只需要一个甩动手势，比如右键向上拖拽是选中Edge，那么按住右键朝上方甩一下就可以切换到Edge模式。</description>
    </item>
    
    <item>
      <title>[UE4]VS2017编译构建引擎代码：Could not load file or assembly &#39;System.Threading.Tasks.Dataflow</title>
      <link>http://www.dawnarc.com/2017/08/ue4vs2017%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA%E5%BC%95%E6%93%8E%E4%BB%A3%E7%A0%81could-not-load-file-or-assembly-system.threading.tasks.dataflow/</link>
      <pubDate>Fri, 25 Aug 2017 14:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/ue4vs2017%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA%E5%BC%95%E6%93%8E%E4%BB%A3%E7%A0%81could-not-load-file-or-assembly-system.threading.tasks.dataflow/</guid>
      <description>如果用VS2017编译构建引擎代码，在双击GenerateProjectFiles.bat时出现以下错误：
Setting up Unreal Engine 4 project files... MSBUILD : error MSB1025: An internal failure occurred while running MSBuild. Microsoft.Build.Shared.InternalErrorException: MSB0001: Internal MSBuild Error: Throwing from logger shutdown ============= System.IO.FileNotFoundException: Could not load file or assembly &#39;System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&#39; or one of its dependencies. The system cannot find the file specified. File name: &#39;System.Threading.Tasks.Dataflow, Version=4.5.24.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&#39; at Microsoft.Build.BackEnd.Logging.LoggingService.ShutdownComponent() at Microsoft.Build.Evaluation.ProjectCollection.ShutDownLoggingService() WRN: Assembly binding logging is turned OFF. To enable assembly bind failure logging, set the registry value [HKLM\Software\Microsoft\Fusion!</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]基础备忘：显式调用构造</title>
      <link>http://www.dawnarc.com/2017/08/c--%E5%9F%BA%E7%A1%80%E5%A4%87%E5%BF%98%E6%98%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E6%9E%84%E9%80%A0/</link>
      <pubDate>Thu, 24 Aug 2017 16:51:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/c--%E5%9F%BA%E7%A1%80%E5%A4%87%E5%BF%98%E6%98%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E6%9E%84%E9%80%A0/</guid>
      <description>最近两年一直是在UE4的编译器下使用C++，标准C++的一些基础都快忘了。。。
示例代码：
#include &amp;lt;iostream&amp;gt; class CA { public: //两种初始化成员变量的方法 CA() : ia_(11) { fa_ = 0.f; } CA(int val) : ia_(val) { fa_ = 0.f; } //要想让子类能够访问，修饰符不可为private protected: int ia_; private: float fa_; }; class CB : public CA { public: //显示调用父类的有参构造函数 CB() : CA(33), ib_(22) { } int ib() { return ib_; } int ia() { return ia_; } private: int ib_; }; int main(int argc, char* argv[]) { CB b; std::cout &amp;lt;&amp;lt; b.</description>
    </item>
    
    <item>
      <title>[ZBrush]Select时没关闭Perspective的问题</title>
      <link>http://www.dawnarc.com/2017/08/zbrushselect%E6%97%B6%E6%B2%A1%E5%85%B3%E9%97%ADperspective%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 16 Aug 2017 21:04:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/zbrushselect%E6%97%B6%E6%B2%A1%E5%85%B3%E9%97%ADperspective%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>Keywords：ZBrush、SelectRect、Perspective
拿一个正方体为例，如果开启了透视（Draw -》 Presp）     那么在框选某个面时，只会将面的一部分保留下来，不是完整的正方形（即使在旋转正方体时按住shift键）。     关掉透视，再框选，就能正常。   将感情埋藏得太深有时是件坏事。如果一个女人掩饰了对自己所爱的男子的感情，她也许就失去了得到他的机会。---《傲慢与偏见》</description>
    </item>
    
    <item>
      <title>[Map-Baking]完美法线烘培的SP插件-Normal Fix</title>
      <link>http://www.dawnarc.com/2017/08/map-baking%E5%AE%8C%E7%BE%8E%E6%B3%95%E7%BA%BF%E7%83%98%E5%9F%B9%E7%9A%84sp%E6%8F%92%E4%BB%B6-normal-fix/</link>
      <pubDate>Wed, 16 Aug 2017 14:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/map-baking%E5%AE%8C%E7%BE%8E%E6%B3%95%E7%BA%BF%E7%83%98%E5%9F%B9%E7%9A%84sp%E6%8F%92%E4%BB%B6-normal-fix/</guid>
      <description>keywords：Fix normal baking errors、Substance Painter、SP、Distortion、扭曲、法线
一般的烘焙软件（包括SP），法线都必须要烘培两张，一张是带Cage的，一张是不带Cage的，然后再到Photoshop中合成，这样比较麻烦，这个插件可以让SP只烘焙一次，就能同时处理掉接缝和扭曲。
当然这插件不是万能的，看评论说这插件也不是100%没问题，最完美的解决办法还是在PS中合成。仅供参考。
插件下载地址：
https://share.allegorithmic.com/libraries/2310
使用教程：Perfect Normal Map Baking in Substance Painter
https://www.youtube.com/watch?v=cVPJwMivw5I
虽有智慧，不如乘势。虽有镃基，不如待时。----《孟子》</description>
    </item>
    
    <item>
      <title>[ZBrush]ArrayMesh和WeldPoints</title>
      <link>http://www.dawnarc.com/2017/08/zbrusharraymesh%E5%92%8Cweldpoints/</link>
      <pubDate>Wed, 16 Aug 2017 10:40:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/zbrusharraymesh%E5%92%8Cweldpoints/</guid>
      <description>Keyword：zbrush、ArrahMesh、WeldPoint、阵列、顶点缝合、接缝
假设有这样一个扇形，我们希望以扇形圆心为中心，旋转360度复制出N个，形成一个完整的圆：   步骤如下：
1，先点击Tool -》 ArrayMesh -》同时启用 Array Mesh 和Transpose：   2，在点击Pivot，模型中间就会出现一个黄色的圆圈，表示的是当前模型的坐标轴原点：     3，这个原点默认在模型的正中间。但是我们希望原点在扇形下边顶角处，则我们可以修改X、Y或Z的值。   这里将Y修改为-0.5，表示将原点向下移动整个模型长度的一半，如果是0.5，则表示向上移动一半。如果不确定到底是X还是Y或者Z，随便改下数值试一下就明白了。   4，然后点击Rotat，表示旋转，然后把需要选择方向的轴向修改为360度。这里示例中是Z轴，如果不清楚，3个轴改下数值试一下就清楚了。   5，修改为360度后的默认效果。   6，此时只有两个模型的实例。这是因为Repeat的默认数值为2，我们希望复制多个，那么就修改Repeat的值，比如值为8时，效果如下：     7，Repeat为16时，效果如下：     8，此时并得到了预期的效果，此时再点击Make Mesh，表示将之前的复制出来的镜像转换为模型对象。     9，到此还没完，我们发现当执行Dynamic时（快捷键D，Shift+D表示去掉Dynamic），每个扇形之间是有缝隙的。原因是我们Make Mesh之后没有做接缝处理。   10，我们再修改WeldDist数值，表示顶点缝合的最大距离，在这个距离之内的两个点合并成一个点。然后再点击WeldPoints，执行顶点风格。   此时再执行Dynamic，可以看到每个扇形的边沿没有裂开了，已经合并成了一个整体。   一向年光有限身，等闲离别易消魂，酒筵歌席莫辞频。—晏殊《浣溪沙》</description>
    </item>
    
    <item>
      <title>[ZBrush]ZModeler Bridge-桥接处理</title>
      <link>http://www.dawnarc.com/2017/08/zbrushzmodeler-bridge-%E6%A1%A5%E6%8E%A5%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 15 Aug 2017 17:28:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/08/zbrushzmodeler-bridge-%E6%A1%A5%E6%8E%A5%E5%A4%84%E7%90%86/</guid>
      <description>Keyword：zbrush、zmodeler
Bridge（桥接） 两个边连接
假设有这样一个平面：   先把鼠标悬停在点上，然后按住空格键不放，选择如下：   然后鼠标在Point上按住不放拖拽，就可以拉出一个圆：   然后在另外一个Point单击以下，即可自动生成上次画的圆：   然后鼠标悬停在Polygon上，按住空格键不放，选择如下：   然后挨个挨个单击需要删除Polygon：   然后鼠标悬停在Edge上，按住空格键不放，选择如下：   然后鼠标在需要桥接的两个Edge上分别单击一下：     单击后就会自动生成一个新的Polygon：   用同样的方式，再对另一边形成以上操作，就可以创建出一个类似机械插槽的效果：   注意：再Bridge之前，确保当前模型是一个独立的instance，如果有隐藏的部位与当前模型相连，请先确保执行过Del Hidden，否则无法Bridge成功。
两个洞连接
假设存在这样的模型：   然后鼠标悬停在Edge上，按住空格键不放，选择如下：   然后分别单击以下左右两个洞的边：     当单击第二个洞的边时，同时鼠标按住不放，就会生成如下效果：   此时再拖拽鼠标：上下拖改变密度，左右拖改边高度。     我从没有爱过这世界，它对我也一样。---《拜伦诗选》</description>
    </item>
    
    <item>
      <title>[ZBrush]ZModeler常用操作示例-01</title>
      <link>http://www.dawnarc.com/2017/07/zbrushzmodeler%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B-01/</link>
      <pubDate>Sun, 30 Jul 2017 15:31:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/07/zbrushzmodeler%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B-01/</guid>
      <description>Keyword：zbrush、zmodeler
Initialize用法 新建一个圆柱体   其默认Initialize参数如下（Tool -》 Initialize）   如果想减掉模型纵向的polygon数量，则可以将VDivide修改4（对于圆柱体，可修改的最小值也只能是4，表示纵向方向上用4根横向的线分段），默认为17。比如纵向的网格数量修改为3，则修改VDivide为4：     如果想减掉模型横向的polygon数量，则可以修改HDivide。     Move（将所在面压低或抬高） 注意，使用ZModeler之前，需要将模型转换为PolyMesh3D。
先将鼠标悬停在需要压扁面上，注意，是面上，不是边也不是点，鼠标悬停的位置不同，相应的弹出菜单也不同。
然后按住空格键不放，弹出菜单中，Action选择Move，Target选择Flat Island。   然后可以鼠标悬停在面上，按住鼠标不放，上下移动来压扁或者拉长模型   Inset（Island内插入） 比如我们想在上面示例的圆柱截面上，插入一根线，效果如下：   方式：先将鼠标悬停在面上，按住空格键不放，弹出菜单中，Action选择Inset、Target选择Flat Island、Modifiers选择Inset Region   注意：鼠标要悬停在面上且出现一根黄线后再拖动，否则就是另外一种效果。
未出现黄线：     出现黄线：     Inset（Polygroup内插入） 如果想在一个某个Polygroup内部插入，则将Target选择为Polygroup Island，否则每次只能从圆柱体截面的最外面插入。   效果：   Move（Polygroup压扁或拉伸） 如果想把某块Polygroup抬高或者压低，同样使用Move，只是把Target选择为Polygroup Island。   效果：   QMesh（以所在面为基础，挤压出新的部位出来） 接着上面案例，actions选择QMesh、Target选择Polygroup Island   向上挤压效果效果：   向下挤压效果：   Scale（伸缩） 比如，想把下面模型的顶部圆形扩大或缩小   方式1：面级别的Scale   方式2：线级别的Scale   效果：     Bevel（倒角） 一个模型的棱角如果不卡边，比如这样：   那么执行Dynamic（Tool -》 Geometry -》 Dynamic Subdiv -》 Dynamic）后的效果就成了这样：     ZModeler的卡边方式：鼠标悬停在线上，Edge Actions选择Bevel，Target选择EdgeLoop Complete。   然后在需要卡边的线上按住鼠标左键拖拽：   以此案例为例，如果圆柱底部的边也需要做同样的卡边，直接单击底部的边线即可：   之后再执行Dynamic，棱角就不会被过度平滑：   Bevel另外一种常用方式是，将Modifiers选择为Two Rows，如果觉得两条不够，还可以选择Four Rows、Eight Rows。   比如这种案例   执行卡边的时候就会自动生成两条edge：   Insert（插入） 再介绍一种和Bevel效果类似的方法，鼠标悬停在线上，Edge Actions选择Insert，Target选择Single EdgeLoop。     然后再执行Dynamic：   Inset和QMesh综合使用：制作套环 比如想制作如下效果：   方式如下：鼠标先悬停在面上，按住空格键，Polygon选择Inset，Target选择Polyloop，Modifiers选择Inset Region   然后鼠标悬停在polygon上，左右晃动，会出现两种黄线，一种纵向，一种横线：     这里我们需要的是横向上的polyloop，所以等显示横向黄线时，按住鼠标拖拽，即可形成一段polyloop：   然后再选择QMesh，在这个polyloop上按住鼠标左键拖拽，即可创建出套环效果：   Delete（删除） 以下图模型为例   鼠标悬停在线条上，空格键按住不放，然后选Action选择Delete、Target选择EdgeLoop Complete：   然后点击需要删除的边：   效果：   其他技巧： 1，QMesh复制与隔离 前面说到，使用QMesh可以从一个Polygroup挤出一块，如果不想挤出，只是希望将选中的Polygroup复制一份出来并抬高，且与之前的模型隔离开，比如这种效果：   方式：按住鼠标不放之后，拖拽鼠标之前，按住Ctrl键。</description>
    </item>
    
    <item>
      <title>[ZBrush]SliceCurve、Mask、Group综合使用实例：制作层叠效果</title>
      <link>http://www.dawnarc.com/2017/07/zbrushslicecurvemaskgroup%E7%BB%BC%E5%90%88%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B%E5%88%B6%E4%BD%9C%E5%B1%82%E5%8F%A0%E6%95%88%E6%9E%9C/</link>
      <pubDate>Fri, 21 Jul 2017 00:30:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/07/zbrushslicecurvemaskgroup%E7%BB%BC%E5%90%88%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B%E5%88%B6%E4%BD%9C%E5%B1%82%E5%8F%A0%E6%95%88%E6%9E%9C/</guid>
      <description>Keyword：ZBrush、SliceCurve、Mask、Group
1，新建一个Sphere3D，并转换为PolyMesh3D   2，使用SliceCurve笔刷（选中一次后再按住Ctrl + Shift），并将Stroke选择为Curve   3，按住Ctrl+Shift键，然后画出一条曲线。默认是直线，划线过程中按一下Alt键表示曲线，连续按两下Alt表示折线   4，然后按下Shift + F，显示网格线，将可以看到Curve已经将球体分成了两个Group。   5，然后按住Ctrl+Shift，鼠标单击一下头盔部分，然后就将脸部隐藏了   6，此时是单面显示，我们想双面显示，点击Tool -》 Display Properties -》 Double，就可以双面显示。     7，然后按住Ctrl键不放，并按住用鼠标左键不放，框选住整个模型，表示当前部分被mask，不可编辑。   8，然后再按住Ctrl+Shift键不放，再鼠标单击下空白区域，表示显示被隐藏的部分。   9，然后再缩小脸部尺寸，点击Tool -》 Deformation -》 Size     10，最后在空白区域按住鼠标左键拖拽一下，来取消mask。   11，最后按下shift+F，隐藏网格。结束   一个人并不是生来要被打败的，你尽可以把他消灭掉，可就是打不败他。---《老人与海》</description>
    </item>
    
    <item>
      <title>[ZBrush]学习笔记与技巧</title>
      <link>http://www.dawnarc.com/2017/07/zbrush%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%8E%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 15 Jul 2017 20:35:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/07/zbrush%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%8E%E6%8A%80%E5%B7%A7/</guid>
      <description>【2017-07-15】
TrimLasso无法对称剪切的解决办法
Clip能实现对称剪切，但是TrimLasso不行，不过有其他办法，那就是TrimLasso剪切完之后，对模型镜像复制以下。
我明白了，我已经找到了存在的答案，我恶心的答案，我整个生命的答案。其实，我所理解的一切事物都可以归结为荒诞这个根本的东西。---《恶心》</description>
    </item>
    
    <item>
      <title>[ZBrush]主视图全屏显示以及自定义视图尺寸(Document Resize)</title>
      <link>http://www.dawnarc.com/2017/07/zbrush%E4%B8%BB%E8%A7%86%E5%9B%BE%E5%85%A8%E5%B1%8F%E6%98%BE%E7%A4%BA%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%86%E5%9B%BE%E5%B0%BA%E5%AF%B8document-resize/</link>
      <pubDate>Sun, 02 Jul 2017 22:35:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/07/zbrush%E4%B8%BB%E8%A7%86%E5%9B%BE%E5%85%A8%E5%B1%8F%E6%98%BE%E7%A4%BA%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%86%E5%9B%BE%E5%B0%BA%E5%AF%B8document-resize/</guid>
      <description>keywor：ZBrush、Viewport、Fullscreen、Resize、Document Size、Crop
方式1：使用默认的全局视图 启动zb后，打开LightBox中的DefaultSphere.ZPR   然后按下tab键，即可全屏显示   方式2：修改Document size Document -》 修改Width和Height   其中Pro按钮表示调整大小时是否保持纵横比例；调整好尺寸后，点击Resize，就可以生效。Crop表示只对当前Layer的视图窗口大小设置（将模型转换为PolyMesh3D后，即可在Tool下看到Layers选项）
修改Document Size为全屏大小后的效果：   方式3：使用New Document 打开模型前，点击Document -》 New Document，这样就可以全屏化当前视图   建议：
如果要修改Document Size，建议在开始工作前就就将Document Size修改好，否则在高模情况下修改size，容易导致zb崩溃
自己的行为最惹人耻笑的人，却永远是最先去说别人坏话的人。---《伪君子》</description>
    </item>
    
    <item>
      <title>[ZBrush]自定义菜单布局(Custom Interface Layout)</title>
      <link>http://www.dawnarc.com/2017/07/zbrush%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95%E5%B8%83%E5%B1%80custom-interface-layout/</link>
      <pubDate>Sun, 02 Jul 2017 17:20:42 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/07/zbrush%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95%E5%B8%83%E5%B1%80custom-interface-layout/</guid>
      <description>keyword：zbrush、Customize UI、Interface Layout、Menu Button
设置button大小 安装zb后，默认的按钮宽度是44，效果如图：   如果想让菜单布局更紧凑，缩短button的宽度，可以作如下修改：
Perferences -》 Interface -》 UI -》 修改Buttons Size，或者取消Wide Buttons   取消Wide Buttons之后的效果   移动菜单按钮的位置 先启用自定义UI选项：Preferences -》 Config -》 Enable Customize   这里以移动常用笔刷到底部菜单栏为例。
点击Brush，找到需要的笔刷，然后按住Ctrl + Alt键不放，鼠标左键点击笔刷菜单并按住不放，拖拽到底部的Shelf上   最后效果：   按钮删除 如果要删除界面上的菜单按钮，同样按住Ctrl + Alt键不放，鼠标左键点击笔刷菜单并按住不放，将菜单拖拽到视图界面中（就是编辑模型的主视图）或者该按钮不可放置的区域中。
还原UI布局 如果不小心删除了某个菜单按钮，或者想还原为默认设置，可以点击：
Preferences -》 Config -》 Restore Custom UI或者Restore Standard UI，前者是自己上次保存的UI布局，后者是系统的初始UI布局。   如何将新笔刷加入Quick Pick面板 以TrimSmoothBorder为例，这是zb自带的笔刷，但是不在Quick Pick面板钟，而是在Pixologic\ZBrush 4R7\ZBrushes\Trim\目录下   先将TrimSmoothBorder.zbp拷贝到Pixologic\ZBrush 4R7\ZStartup\BrushPresets\目录下     然后重启zb，再次打开quick pich，就可以在末尾看到新加入的笔刷   这个使用就可以选择一次该笔刷后，在Brush菜单下看到最近使用的历史笔刷，然后就可以按住Ctrl+Alt键来拖抓到快捷栏中     如何保存UI布局 点击Preferences -》 Config -》Store Config，表示将当前UI设置保存zb的默认设置，也就是说以后每次启动就使用这个设置。Save UI表示导出当前UI布局的配置文件。   其他参考文档：</description>
    </item>
    
    <item>
      <title>[ZBrush]教程视频收集</title>
      <link>http://www.dawnarc.com/2017/06/zbrush%E6%95%99%E7%A8%8B%E8%A7%86%E9%A2%91%E6%94%B6%E9%9B%86/</link>
      <pubDate>Sun, 25 Jun 2017 17:02:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/zbrush%E6%95%99%E7%A8%8B%E8%A7%86%E9%A2%91%E6%94%B6%E9%9B%86/</guid>
      <description>如何使用Clip笔刷的案例教程
zbrush clipping brush Tutorial
https://www.youtube.com/watch?v=hfJ6HWx5qy0
如何自定义界面菜单布局
Zbrush Customize UI
https://www.youtube.com/watch?v=Jr3XNnctUfI
当格里高·萨姆莎从烦躁不安的梦中醒来时，发现他在床上变成了一个巨大的甲虫。---《变形记》</description>
    </item>
    
    <item>
      <title>[ZBrush]Curve Stroke画直线、曲线、折线的方法</title>
      <link>http://www.dawnarc.com/2017/06/zbrushcurve-stroke%E7%94%BB%E7%9B%B4%E7%BA%BF%E6%9B%B2%E7%BA%BF%E6%8A%98%E7%BA%BF%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 25 Jun 2017 00:35:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/zbrushcurve-stroke%E7%94%BB%E7%9B%B4%E7%BA%BF%E6%9B%B2%E7%BA%BF%E6%8A%98%E7%BA%BF%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>原文：http://www.zbrushcentral.com/showthread.php?94635-Quick-Question-about-masking
         十里杨州，三生杜牧，前事休说。—姜夔《琵琶仙》</description>
    </item>
    
    <item>
      <title>[UE4]动画蓝图的编辑全流程(Animation Blueprint)</title>
      <link>http://www.dawnarc.com/2017/06/ue4%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E7%9A%84%E7%BC%96%E8%BE%91%E5%85%A8%E6%B5%81%E7%A8%8Banimation-blueprint/</link>
      <pubDate>Sat, 17 Jun 2017 21:45:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E7%9A%84%E7%BC%96%E8%BE%91%E5%85%A8%E6%B5%81%E7%A8%8Banimation-blueprint/</guid>
      <description>Keyword: UE4、Animation Blueprin、Montage Slot、Character Blueprint
不知从从哪个版本开始，动画蓝图的制作和老版本之间的差距有点大了，这里做下笔记，以备不时之需。。
UE4版本：4.16
假设已经将模型和动作导入工程了，这里使用官方模板项目的动作作为例子讲解，只演示待机、跑步的控制逻辑，跳跃的可以看项目模板的动画蓝图。
1，准备好动作和模型   2，新建一个Blend Space 1D   然后在跳出的菜单中选择骨骼   3，打开Blend Space 1D蓝图，分别将待机、行走、跑步三个动作拖拽到下方面板钟   修改驱动属性名为Speed，默认为None，这个属性名为是后面编辑动画蓝图使用的属性名。   最终效果：   4，将TargetWeightInterpolationSpeedPerSec修改为5.0，修改这个值的原因是为了让角色移动时的静止和移动的过度更加自然   5，新建一个动画蓝图（Animation Blueprin）:   在弹出的菜单钟选择父类和骨骼，父类为：AnimInstance；骨骼就是当前模型的骨骼   6，打开动画蓝图的EventGraph面板   然后再添加一个float属性，名字为Speed，表示角色的即时速度     然后再编辑事件：Event Blueprint Update Animation   7，打开AnimGraph面板   新建一个State Machine     双击State Machine，进入里面编辑。从Entry节点钟拖拽并新建一个State：   将该State命名为Idel/Run   然后双击该State，进入里面编辑：其中Speed，就是之前新建float属性     最后再返回到最外层的AnimGraph面板，将StateMachine链接到Final Animation Pose上   8，新建角色蓝图Character Blueprint：   父类选择工程中的C++ Character class：   然后打开角色蓝图，选中mesh   将Anim Class指定为之前创建的动画蓝图：   将Skeletal Mesh指定为模型的骨骼：   如果默认的骨骼基准坐标、转向和刚体大小、MovementComponent的默认方向不匹配，则需要编辑下Mesh的Transform     9，到此，动画蓝图和角色蓝图编辑完成，可以在C++中使用刚刚新建的角色蓝图。</description>
    </item>
    
    <item>
      <title>[Python]Python3连接mysql（PyMysql）的环境安装配置</title>
      <link>http://www.dawnarc.com/2017/06/pythonpython3%E8%BF%9E%E6%8E%A5mysqlpymysql%E7%9A%84%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 12 Jun 2017 20:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/pythonpython3%E8%BF%9E%E6%8E%A5mysqlpymysql%E7%9A%84%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>安装Python3之后，下载PyMysql：
https://github.com/PyMySQL/PyMySQL/
解压进入根目录，执行命令：
python setup.py install  然后运行PyMysql安装目录下的example.py测试MySQL数据库链接是否成功（记得修改example.py里面的mysql密码）
python example.py  笑相遇，似觉琼枝玉树相倚，暖日明霞光烂。---周邦彦《拜星月慢》</description>
    </item>
    
    <item>
      <title>[UE4]Performance Guidelines for Mobile Devices(移动端性能优化的官方文档)</title>
      <link>http://www.dawnarc.com/2017/06/ue4performance-guidelines-for-mobile-devices%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</link>
      <pubDate>Sun, 11 Jun 2017 23:36:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4performance-guidelines-for-mobile-devices%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</guid>
      <description>Performance Guidelines for Mobile Devices
https://docs.unrealengine.com/latest/INT/Platforms/Mobile/Performance/index.html
如何改善虚幻引擎中的游戏线程CPU性能表现
https://www.unrealengine.com/zh-CN/blog/how-to-improve-game-thread-cpu-performance
UE4 性能优化方法(工具篇)
https://www.cnblogs.com/ghl_carmack/p/5481763.html
人生中有些事是不得不做的，于不得不做中勉强去做，是毁灭；于不得不做中做的好，是勇敢。——叶弥《成长如蜕》</description>
    </item>
    
    <item>
      <title>[UE4]Unable to load module &#39;HTTPChunkInstaller&#39;</title>
      <link>http://www.dawnarc.com/2017/06/ue4unable-to-load-module-httpchunkinstaller/</link>
      <pubDate>Sat, 03 Jun 2017 17:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4unable-to-load-module-httpchunkinstaller/</guid>
      <description>打包正常，但是启用游戏时弹框提示：Unable to load module &amp;lsquo;HTTPChunkInstaller&amp;rsquo;。
问题原因： HTTPChunkInstaller是4.16才加入的plugin，如果在4.16之前的版本中build，且build输出目录是4.16版本使用过的输出目录，则会出现这个错误。
解决办法： 新建一个空白的build输出目录，以免版本不同导致的build输出文件干扰。
梧桐更兼细雨，到黄昏、点点滴滴。者次第，怎一个、愁字了得。—李清照《声声慢》</description>
    </item>
    
    <item>
      <title>[UE4]4.15和4.16的Build.cs比较</title>
      <link>http://www.dawnarc.com/2017/06/ue44.15%E5%92%8C4.16%E7%9A%84build.cs%E6%AF%94%E8%BE%83/</link>
      <pubDate>Sat, 03 Jun 2017 14:59:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue44.15%E5%92%8C4.16%E7%9A%84build.cs%E6%AF%94%E8%BE%83/</guid>
      <description>4.14、4.15和4.16三个版本的build.cs文件都发生了变化，引擎升级后，在打包构建时，需要修改cs代码。
4.14的就不贴了，贴4.15和4.16的build配置代码，4.16的代码更简洁了。
以官方的ShooterGame为例。
4.16 ShooterGame.Build.cs
// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved. using UnrealBuildTool; public class ShooterGame : ModuleRules { public ShooterGame(ReadOnlyTargetRules Target) : base(Target) { PrivateIncludePaths.AddRange( new string[] { &amp;quot;ShooterGame/Classes/Player&amp;quot;, &amp;quot;ShooterGame/Private&amp;quot;, &amp;quot;ShooterGame/Private/UI&amp;quot;, &amp;quot;ShooterGame/Private/UI/Menu&amp;quot;, &amp;quot;ShooterGame/Private/UI/Style&amp;quot;, &amp;quot;ShooterGame/Private/UI/Widgets&amp;quot;, } ); PublicDependencyModuleNames.AddRange( new string[] { &amp;quot;Core&amp;quot;, &amp;quot;CoreUObject&amp;quot;, &amp;quot;Engine&amp;quot;, &amp;quot;OnlineSubsystem&amp;quot;, &amp;quot;OnlineSubsystemUtils&amp;quot;, &amp;quot;AssetRegistry&amp;quot;, &amp;quot;AIModule&amp;quot;, &amp;quot;GameplayTasks&amp;quot;, } ); PrivateDependencyModuleNames.AddRange( new string[] { &amp;quot;InputCore&amp;quot;, &amp;quot;Slate&amp;quot;, &amp;quot;SlateCore&amp;quot;, &amp;quot;ShooterGameLoadingScreen&amp;quot;, &amp;quot;Json&amp;quot; } ); DynamicallyLoadedModuleNames.AddRange( new string[] { &amp;quot;OnlineSubsystemNull&amp;quot;, &amp;quot;NetworkReplayStreaming&amp;quot;, &amp;quot;NullNetworkReplayStreaming&amp;quot;, &amp;quot;HttpNetworkReplayStreaming&amp;quot; } ); PrivateIncludePathModuleNames.</description>
    </item>
    
    <item>
      <title>[UE4]转载：UEngine Browse()执行流程</title>
      <link>http://www.dawnarc.com/2017/06/ue4%E8%BD%AC%E8%BD%BDuengine-browse%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 01 Jun 2017 13:00:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4%E8%BD%AC%E8%BD%BDuengine-browse%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/</guid>
      <description>原文：http://blog.csdn.net/xiaozhi0999/article/details/51393704
ue4中，客户端登陆流程如下，调用UEngine::Browse方法，在这个方法中，判断如果是客户端，则创建UPendingNetGame实例，代码如下：
WorldContext.PendingNetGame = NewObject&amp;lt;UPendingNetGame&amp;gt;(); WorldContext.PendingNetGame-&amp;gt;Initialize(URL); WorldContext.PendingNetGame-&amp;gt;InitNetDriver();  而在InitNetDriver函数中，会向服务器发送 NMT_Hello 协议，我们转到NMT_Hello 的定义，如下：
DEFINE_CONTROL_CHANNEL_MESSAGE_TWOPARAM(Hello, 0, uint8, uint32); // initial client connection message  参数1：大端还是小端
参数2：客户端版本号
客户端处理协议的地方是如下两个函数：
void UPendingNetGame::NotifyControlMessage(UNetConnection* Connection, uint8 MessageType, class FInBunch&amp;amp; Bunch) void UWorld::NotifyControlMessage(UNetConnection* Connection, uint8 MessageType, class FInBunch&amp;amp; Bunch)  服务器处理协议的地方是下面这个函数：
void UWorld::NotifyControlMessage(UNetConnection* Connection, uint8 MessageType, class FInBunch&amp;amp; Bunch)  在服务器的协议处理函数，我们可以看到NMT_Hello协议的处理过程，先调用Receive接收消息，然后判断版本号是否一致，不一致发送NMT_Upgrade消息，一致则发送NMT_Challenge消息
DEFINE_CONTROL_CHANNEL_MESSAGE_ONEPARAM(Challenge, 3, FString); // server sends client challenge string to verify integrity  客户端收到NMT_Challenge消息后，向服务器发送NMT_Login消息，NMT_Login消息携带三个参数，如下：
DEFINE_CONTROL_CHANNEL_MESSAGE_THREEPARAM(Login, 5, FString, FString, FUniqueNetIdRepl); // client requests to be admitted to the game  参数1：客户端响应</description>
    </item>
    
    <item>
      <title>[UE4]ServerTravel和ClientTravel区别</title>
      <link>http://www.dawnarc.com/2017/06/ue4servertravel%E5%92%8Cclienttravel%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 01 Jun 2017 11:05:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4servertravel%E5%92%8Cclienttravel%E5%8C%BA%E5%88%AB/</guid>
      <description>Browse, LoadMap, ServerTravel and ClientTravel?
https://answers.unrealengine.com/questions/122565/browse-servertravel-and-clienttravel.html
What&amp;rsquo;s the different between absolute travel and relative travel?
https://answers.unrealengine.com/questions/101284/what-the-different-between-absolute-travel-and-rel.html
What is the difference between ServerTravel and OpenLevel?
https://answers.unrealengine.com/questions/55477/the-difference-of-the-two-functions.html
PlayerController-&amp;gt;ClientTravel()连接远程服务器
https://answers.unrealengine.com/questions/29017/gamemode-multiplayer-c.html
Seamless and non-seamless travel
https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Travelling
另外，可以参加官方ShooterGame的APlayerController-&amp;gt;ClientTravel()用法。
山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红装素裹，分外妖娆。----毛泽东《沁园春·雪》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;获取游戏当前登录的服务器IP和端口</title>
      <link>http://www.dawnarc.com/2017/06/ue4c--%E8%8E%B7%E5%8F%96%E6%B8%B8%E6%88%8F%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8ip%E5%92%8C%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Thu, 01 Jun 2017 10:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/06/ue4c--%E8%8E%B7%E5%8F%96%E6%B8%B8%E6%88%8F%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8ip%E5%92%8C%E7%AB%AF%E5%8F%A3/</guid>
      <description>接口：
FString URL = GetWorld()-&amp;gt;GetAddressURL();  碧云天，黄叶地，秋色连波，波上寒烟翠。---范仲淹《苏幕遮》</description>
    </item>
    
    <item>
      <title>[UE4]UserWidget的C&#43;&#43;常用父类函数</title>
      <link>http://www.dawnarc.com/2017/05/ue4userwidget%E7%9A%84c--%E5%B8%B8%E7%94%A8%E7%88%B6%E7%B1%BB%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 31 May 2017 14:13:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4userwidget%E7%9A%84c--%E5%B8%B8%E7%94%A8%E7%88%B6%E7%B1%BB%E5%87%BD%E6%95%B0/</guid>
      <description>如果要在widget的C++代码中处理初始化逻辑（比如获取获取某个button对象），建议在NativeConstruct中操作，因为Initialize()需要判定Super::Initialize()的返回值是否为true，如果为false，无法获取内部组件。
virtual bool Initialize(); virtual void NativePreConstruct(); virtual void NativeConstruct(); virtual void NativeDestruct(); virtual void NativeTick(const FGeometry&amp;amp; MyGeometry, float InDeltaTime); virtual void NativePaint( FPaintContext&amp;amp; InContext ) const; virtual bool NativeIsInteractable() const; virtual bool NativeSupportsKeyboardFocus() const;  渐写到别来，此情深处，红笺为无色。—晏几道《思远人》</description>
    </item>
    
    <item>
      <title>[MySQL]Windows上安装MySQL5.7绿色版</title>
      <link>http://www.dawnarc.com/2017/05/mysqlwindows%E4%B8%8A%E5%AE%89%E8%A3%85mysql5.7%E7%BB%BF%E8%89%B2%E7%89%88/</link>
      <pubDate>Sat, 27 May 2017 13:59:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/mysqlwindows%E4%B8%8A%E5%AE%89%E8%A3%85mysql5.7%E7%BB%BF%E8%89%B2%E7%89%88/</guid>
      <description>下载：
https://dev.mysql.com/downloads/mysql/
解压后执行（管理员命令行）：
mysqld --initialize-insecure --user=mysql  然后安装windows服务：
mysqld install  启动：
net start mysql  修改root密码（首次安装后root还未修改的情况下，即密码为空）
mysqladmin -u root -p password 123456  my.ini找不到 Windows 10下，安装MySQL后的my.ini文件位置不再是安装目录的根目录，而是：C:\ProgramData\MySQL\MySQL Server 5.7
山映斜阳天接水，芳草无情，更在斜阳外。---范仲淹《苏幕遮》</description>
    </item>
    
    <item>
      <title>[UE4]Generate Visual Studio工程时如何指定VS版本</title>
      <link>http://www.dawnarc.com/2017/05/ue4generate-visual-studio%E5%B7%A5%E7%A8%8B%E6%97%B6%E5%A6%82%E4%BD%95%E6%8C%87%E5%AE%9Avs%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 26 May 2017 17:17:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4generate-visual-studio%E5%B7%A5%E7%A8%8B%E6%97%B6%E5%A6%82%E4%BD%95%E6%8C%87%E5%AE%9Avs%E7%89%88%E6%9C%AC/</guid>
      <description>keywords：UE4 generate visual studio project file、VS2017
UE4 generate visual studio project file cmd
&amp;quot;%UE4PATH%\Engine\Build\BatchFiles\GenerateProjectFiles.bat&amp;quot; %~dp0\MyProject.uproject -2017  注意：GenerateProjectFiles.bat在源码编译的UE4中，Launcher安装版本的UE4没有GenerateProjectFiles.bat。
【2017-08-31记】
今天发现4.17版本用上述方法貌似有问题，会打印一个警告，且最终没有生成任何文件：
 warning MSB3884: Could not find rule set file &amp;quot;ManagedMinimumRules.ruleset&amp;quot;  解决办法：
执行以下命令，末尾参数2017即表示指定VS2017：
D:/UnrealEngine-4.17.1-release/Engine/Binaries/DotNET/UnrealBuildTool.exe -projectfiles -project=&amp;quot;D:/MyProject/MyProject.uproject&amp;quot; -game -engine -progress -2017  另外UnrealBuildTool.exe在Launcher安装版本也存在，不需要源码编译的版本。
参考：
https://answers.unrealengine.com/questions/579186/what-about-visual-studio-2017-in-ue4.html
官方文档：
https://docs.unrealengine.com/latest/INT/Programming/UnrealBuildSystem/ProjectFileGenerator/index.html
琵琶弦上说相思，当时明月在，曾照彩云归。---晏几道《临江仙》</description>
    </item>
    
    <item>
      <title>VS2017的iso下载方式</title>
      <link>http://www.dawnarc.com/2017/05/vs2017%E7%9A%84iso%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 26 May 2017 15:01:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/vs2017%E7%9A%84iso%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F/</guid>
      <description>VS2017的iso下载方式：
先下载exe文件：https://www.visualstudio.com/downloads/
然后执行命令：
vs_enterprise.exe --layout D:\VS2017 --lang en-US  VS2017的所有安装文件就会下载到D:\VS2017目录下
参考：
https://forums.asp.net/t/2117067.aspx?Where+to+download+visual+studio+2017+community+edition+iso+file
亲爱的艾妮斯，我出国，为了爱你；我留在国外，为了爱你；我回国，也是为了爱你！《大卫·科波菲尔》</description>
    </item>
    
    <item>
      <title>[UE4]地形编辑和植被编辑</title>
      <link>http://www.dawnarc.com/2017/05/ue4%E5%9C%B0%E5%BD%A2%E7%BC%96%E8%BE%91%E5%92%8C%E6%A4%8D%E8%A2%AB%E7%BC%96%E8%BE%91/</link>
      <pubDate>Thu, 25 May 2017 22:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4%E5%9C%B0%E5%BD%A2%E7%BC%96%E8%BE%91%E5%92%8C%E6%A4%8D%E8%A2%AB%E7%BC%96%E8%BE%91/</guid>
      <description>keywords: Landscape、Sculpting、Painting、Material、Foliage、Instance、Mesh
地形编辑
https://docs.unrealengine.com/latest/INT/Engine/Landscape/index.html
植被编辑
https://docs.unrealengine.com/latest/INT/Engine/Foliage/index.html
Procedural Foliage Tool Quick Start
https://docs.unrealengine.com/latest/INT/Engine/OpenWorldTools/ProceduralFoliage/QuickStart/index.html
念去去、千里烟波，暮霭沉沉楚天阔。—柳永《雨霖铃》</description>
    </item>
    
    <item>
      <title>[ZBrush]Light灯光</title>
      <link>http://www.dawnarc.com/2017/05/zbrushlight%E7%81%AF%E5%85%89/</link>
      <pubDate>Sat, 20 May 2017 21:34:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushlight%E7%81%AF%E5%85%89/</guid>
      <description>你越没有心肝，就越高升得快，你毫不留情地打击人家，人家就怕你。只能把男男女女当作驿马，把它们骑得筋疲力尽，到了站上丢下来，这样你就能达到欲望的最高峰。---《高老头》</description>
    </item>
    
    <item>
      <title>[ZBrush]Shading和Rending（RGB颜色和Material材质绘制）</title>
      <link>http://www.dawnarc.com/2017/05/zbrushshading%E5%92%8Crendingrgb%E9%A2%9C%E8%89%B2%E5%92%8Cmaterial%E6%9D%90%E8%B4%A8%E7%BB%98%E5%88%B6/</link>
      <pubDate>Sat, 20 May 2017 21:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushshading%E5%92%8Crendingrgb%E9%A2%9C%E8%89%B2%E5%92%8Cmaterial%E6%9D%90%E8%B4%A8%E7%BB%98%E5%88%B6/</guid>
      <description>Keywords：RGB、MRGB、Vertex Shading、Rending、顶点着色、UV、Material、材质
ZBrush提供了直接在模型表面绘制颜色和材质的功能。
优点：这样可以快速出渲染效果。如果用标准的次时代流程，涉及到分UV、贴图烘培，周期较长。
缺点：zb上直接制作出来的材质，无法导入第三方图形引擎中，只能用zb查看效果。
绘制准备工作 1，将模型的材质换成：SkinShade4，这个材质方便观察绘制的颜色效果     2，打开模型的画笔功能，在Tool -》 SubTool下：   3，关掉Alpha：   4，固化所有Layer。因为着色时不能有Layer：   5，关掉Zadd，打开Rgb ：   参数说明
 MRGB：材质和颜色同时绘制。 RGB：绘制颜色。 M：绘制材质。 RGB Intensity：是用来控制颜色的透明度。  6，在颜色面板中选择颜色，然后就可以绘画了     7，绘制过程中，可以选择Render的模式，来观察不同状态的效果：    Best：效果最贴近真实渲染效果，但是相应速度较慢。 Preview：渲染效果比Best差一点，但是速度快一点。 Fast：去掉了灯光，速度更快，但是效果就差很多。 Flat：隐藏掉了了模型的纹理，以纯平表面来显示绘制的效果，适合来观察颜色涂抹的均匀程度。  四中模式的效果依次是：         颜色填充 点击Color，在取色器中选择要填充的颜色，然后点击 FillObject，就可以填充颜色   填充颜色的强度，取决与RGB笔刷的强度Intensity   填充效果示例：   材质绘制 1，材质填充 先切换M模式，然后点击Color -》 FillObject，   填充材质之后，再改变材质球，材质效果不会有任何变化。</description>
    </item>
    
    <item>
      <title>[ZBrush]Layers用法</title>
      <link>http://www.dawnarc.com/2017/05/zbrushlayers%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 18 May 2017 00:07:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushlayers%E7%94%A8%E6%B3%95/</guid>
      <description>需要转换为PolyMesh3D，才能看到Layers选项：   用法示例： 1，先创建一个模型，转换为PolyMesh3D：   2，新建一个Layer：     3，在模型上做想要的效果：   4，雕刻玩以后，点击之前新建Layer中的REC按钮，表示将刚刚操作记录下来：   5，点击REC之后，就会出现一个眼睛按钮，表示刚刚的记录显示或隐藏：   如果点击安静按钮，则刚刚的笔刷效果会消失掉，再点击眼睛，效果会有马上显现：   动态渐变显示Layer效果 如果拖动Layer的滑动条，可以动态渐变显示刚刚的笔刷效果，0就是效果全部消失，1就是效果全部显示，0.5就表示显示一般效果：     合并Layer 点击Bake All，就表示Layer的效果固定下来，不可再隐藏，同时Layer全部消失。   善良人在追求中纵然迷惘，却终将意识到有一条正途。---《浮士德》</description>
    </item>
    
    <item>
      <title>[ZBrush]Deformation常用选项</title>
      <link>http://www.dawnarc.com/2017/05/zbrushdeformation%E5%B8%B8%E7%94%A8%E9%80%89%E9%A1%B9/</link>
      <pubDate>Tue, 16 May 2017 23:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushdeformation%E5%B8%B8%E7%94%A8%E9%80%89%E9%A1%B9/</guid>
      <description>Tool -》 Deformation    Unify：统一模型的尺寸大小 Mirror：从左到右镜像轴对称 Polish By Features：光滑（按细节平滑） Polish By Groups：光滑（按Group平滑） Polish By Crisp Edges：光滑（按边界平滑） Size：体积扩大与缩小（忽略对称选项） Inflate：膨胀、充气。比如圆环，想把环增粗，但又不想改变圆环的直径 则可以用Inflate。  来时旧路，尚岩花、娇黄半吐。到而今，惟有溪边流水，见人如故。—袁去华《瑞鹤仙》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;创建BoxCollision(BoxComponent)并注册Overlap和Hit事件回调函数</title>
      <link>http://www.dawnarc.com/2017/05/ue4c--%E5%88%9B%E5%BB%BAboxcollisionboxcomponent%E5%B9%B6%E6%B3%A8%E5%86%8Coverlap%E5%92%8Chit%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 15 May 2017 23:31:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4c--%E5%88%9B%E5%BB%BAboxcollisionboxcomponent%E5%B9%B6%E6%B3%A8%E5%86%8Coverlap%E5%92%8Chit%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</guid>
      <description>keywords: UE4、Overlap、Hit、Event、Callback、C++、Blueprint、Box Collision、BoxComponent、SphereComponent、Trace Channel、碰撞
BoxComponent的Overlap事件 1，C++中的代码编写 这里我们演示的例子，是在角色身上创建一个BoxComponent，假设角色的C++ class叫AMyCharacter。 MyCharacter.h头文件中定义：
//Box对象 UBoxComponent* CollisionMesh; //OverlapBegin事件的回调函数，注意函数签名！ UFUNCTION() void OnTestOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult &amp;amp; SweepResult); //OverlapEnd事件的回调函数，注意函数签名！ UFUNCTION() void OnTestOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);  回调函数一定要加UFUNCTION()，否则无法注册成功，因为注册函数时使用了UE4编译器的反射。
 MyCharacter.cpp的构造函数中：
//创建BoxComponent CollisionMesh = CreateDefaultSubobject&amp;lt;UBoxComponent&amp;gt;(TEXT(&amp;quot;TestCollision&amp;quot;)); CollisionMesh-&amp;gt;SetBoxExtent(FVector(200.f, 200.f, 96.f)); CollisionMesh-&amp;gt;bDynamicObstacle = true; CollisionMesh-&amp;gt;SetupAttachment(GetRootComponent()); //如果需要Overlap事件，将bGenerateOverlapEvents设置为true。如果不设置，默认也为true。 CollisionMesh-&amp;gt;bGenerateOverlapEvents = true; //注意：要触发Overlap事件，SetCollisionResponseToAllChannels要么不设置，要么设置为ECR_Overlap。 CollisionMesh-&amp;gt;SetCollisionResponseToAllChannels(ECR_Overlap); /*CollisionMesh-&amp;gt;SetCollisionResponseToChannel(ECC_WorldStatic, ECR_Block); CollisionMesh-&amp;gt;SetCollisionResponseToChannel(ECC_WorldDynamic, ECR_Block); CollisionMesh-&amp;gt;SetCollisionResponseToChannel(ECC_Pawn, ECR_Block); CollisionMesh-&amp;gt;SetNotifyRigidBodyCollision(true); CollisionMesh-&amp;gt;SetSimulatePhysics(true);*/ //要触发Overlap事件，碰对对象需要勾选属性：Generate Overlap Events FScriptDelegate DelegateBegin; DelegateBegin.</description>
    </item>
    
    <item>
      <title>[UE4]如何显示BoxComponent的边框线</title>
      <link>http://www.dawnarc.com/2017/05/ue4%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BAboxcomponent%E7%9A%84%E8%BE%B9%E6%A1%86%E7%BA%BF/</link>
      <pubDate>Mon, 15 May 2017 22:21:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BAboxcomponent%E7%9A%84%E8%BE%B9%E6%A1%86%E7%BA%BF/</guid>
      <description>比如，在角色蓝图中创建个BoxCollision：   在游戏运行过程中，box的边框是看不见的，如果想让边框可见，则不勾选Hidden in Game属性。对应的C++属性也是同名属性。   游戏运行中的效果：   青山遮不住，毕竟东流去。—辛弃疾《菩萨蛮》</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;开发FSP游戏的官方wiki教程</title>
      <link>http://www.dawnarc.com/2017/05/ue4c--%E5%BC%80%E5%8F%91fsp%E6%B8%B8%E6%88%8F%E7%9A%84%E5%AE%98%E6%96%B9wiki%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 15 May 2017 00:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/ue4c--%E5%BC%80%E5%8F%91fsp%E6%B8%B8%E6%88%8F%E7%9A%84%E5%AE%98%E6%96%B9wiki%E6%95%99%E7%A8%8B/</guid>
      <description>First Person Shooter C++ Tutorial https://wiki.unrealengine.com/First_Person_Shooter_C%2B%2B_Tutorial
教程很久没有更新，有的api在新版本中已经变动了。比如对于CollisionComponent的Hit(碰撞)事件，其回调函数的写法已经变动： https://answers.unrealengine.com/questions/556543/oncomponenthitadddynamic.html
渐行渐远渐无书，水阔鱼沉何处问？---欧阳修《木兰花》</description>
    </item>
    
    <item>
      <title>[ZBrush]Surface Noise(噪波)</title>
      <link>http://www.dawnarc.com/2017/05/zbrushsurface-noise%E5%99%AA%E6%B3%A2/</link>
      <pubDate>Sun, 14 May 2017 15:31:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushsurface-noise%E5%99%AA%E6%B3%A2/</guid>
      <description>keywords: surface noise、噪波
噪波应用： 一般用来生成石头或者皮肤的表面细节纹理
注意事项： Noise使用之前需要将模型转换为PolyMesh3D。
点击Tool -》 Surface -》 Noise。   然后会弹出一个噪波阅览界面，修改Magnify By Mask和Strength来生成噪波。   生成的噪波效果：   还可以点击Lightbox》NoiseMaskers打开ZB提供的现成的噪波贴图：       可以点击Edit，打开编辑面板，调成噪波曲线来调整效果：     面包！面包！我们要面包！---《萌芽》</description>
    </item>
    
    <item>
      <title>[ZBrush]Mirror镜像操作</title>
      <link>http://www.dawnarc.com/2017/05/zbrushmirror%E9%95%9C%E5%83%8F%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 07 May 2017 23:18:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushmirror%E9%95%9C%E5%83%8F%E6%93%8D%E4%BD%9C/</guid>
      <description>反向镜像 点击：Tool -》 Deformation -》 Mirror，就可以将模型反向。   Mirror按钮的右上角可以选择镜像基准轴向，可选的有X、Y、Z轴，默认是X轴。
执行前：   执行后：   轴对称镜像 点击：Tool -》 Geometry -》 Modifier Topology -》 Mirror And Weld，可以将模型左边的部分复制模型右边。   按钮的右上角可以选择镜像基准轴向，可选的有X、Y、Z轴，默认是X轴。
执行前：   执行后：   如何判定模型的X、Y、Z方向 比如要镜像模型时，如何判断当前模型的朝向。可以按下W键或E键，并保证当前模型是PolyMesh3D，就可以看到Transform线条，红、绿、蓝三种颜色，分别代表X、Y、Z轴。   你瞧，桑丘·潘沙朋友，那边出现了三十多个大得出奇的巨人。---《堂·吉诃德》</description>
    </item>
    
    <item>
      <title>[ZBrush]ZRemesher使用</title>
      <link>http://www.dawnarc.com/2017/05/zbrushzremesher%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 07 May 2017 21:50:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrushzremesher%E4%BD%BF%E7%94%A8/</guid>
      <description>Keywords：ZBrush、ZRemesher、Project All
假如我们的模型的布线被拉的很乱了：   此时点击下：Tool -》 Geometry -》 ZRemesher -》 ZRemesher。   稍微等待一下后（取决于DynaMesh的分辨率），就可以重新生成非常简洁的布线：   ZRemesher控制模型精度的两个参数为：Target Polygons Count、AdaptiveSize。   实际用途： ZRemesher可以用于模型的自动拓扑：先在SubTool复制一个模型，然后使用ZRemesher生成一个低分辨率的模型，然后再使用Project All功能，就可以进行自动拓扑了，可以参见之前的文章： [ZBrush]Project All实例(example) http://www.dawnarc.com/2017/04/zbrushproject-all%E5%AE%9E%E4%BE%8Bexample/
金鳞昂首凌霄烁，少年得意浅水游。 ---光叔</description>
    </item>
    
    <item>
      <title>[ZBrush]剪切删除的几种方式</title>
      <link>http://www.dawnarc.com/2017/05/zbrush%E5%89%AA%E5%88%87%E5%88%A0%E9%99%A4%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 07 May 2017 20:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/05/zbrush%E5%89%AA%E5%88%87%E5%88%A0%E9%99%A4%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>Keywords：ZBrush、Delete、Clip、Hide、Close Hole
使用SelectRect笔刷 1，先点击一下SelectRect笔刷：   然后就会提示你按住Ctrl + Shift来使用，点击OK。   2，然后按住Ctrl + Shift，就可以直接启用刚刚点击的SelectRect笔刷。另外笔刷的Stroke类型建议选择Lasso，它可以选择不规则形状的模型部位。   如果使用过一次后，那么再次按住Ctrl + Shift键，然后点击下Brush，就可以看到历史记录了，然后点击一下就可以选中SelectRect笔刷。   3，按住Ctrl + Shift，然后按住鼠标不放，用套索选择要剪切的部位：   剪切之后，就只能看到用套索选中的部位，其他部分被隐藏了。   如果想反向显示没有被选中的部位，则按住Ctrl + Shift，然后在空白区域拖拽一下鼠标即可：     如果在空白区域不拖拽，只是点击一下，那么模型将还原到剪切前的状态。
4，圈好需要保留的部分后，再点击Tool-》 Geometry -》 Modify Topology -》 Del Hidden：   5，然后在执行Re-DynaMesh（假设你提前已启用DynaMesh了）：在空白区域拖延一下鼠标：   最后，之前隐藏的部分就被剪切删除了。被剪切掉的空白区域，就会自动被填充一层。   这里除了可以通过执行Re-DynaMesh来填充空洞的区域，还可以通过点击：Tool-》 Geometry -》 Modify Topology -》 Close Holes。两种方式都需要执行Del Hidden，即第4步都要执行，只是第5步有区别。 注意事项：如果使用Close Holes，则可以不启用DynaMesh。   最后补充：按住Ctrl + Shift是选中显示的部位，其余部分隐藏掉；按住Ctrl + Shift + Alt正好相反。   使用ClipRect笔刷 这里我们使用zb自带的一个齿轮模型来演示：   1，用相同方式选中ClipRect笔刷：先点击ClipRect，然后再按住Ctrl + Shift：     2，然后再按住鼠标不放，选中我们要保留的区域：   3，这样就可以一步到位实现剪切删除：   但这样剪切的出来的模型的布线有问题：剪切后的截面，布线很乱，因为ClipRect笔刷做的操作是将待删除的部分压扁，所以被删除部分的布线还遗留在模型上。   针对这种非常不规则的模型，剪切删除时最好使用TrimLasso，用其剪切删除的截面，不会遗留不干净的布线。</description>
    </item>
    
    <item>
      <title>[UE4]对象的垃圾回收与内存常驻</title>
      <link>http://www.dawnarc.com/2017/04/ue4%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E4%B8%8E%E5%86%85%E5%AD%98%E5%B8%B8%E9%A9%BB/</link>
      <pubDate>Wed, 26 Apr 2017 14:11:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/ue4%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E4%B8%8E%E5%86%85%E5%AD%98%E5%B8%B8%E9%A9%BB/</guid>
      <description>keywords：UE4, Memory Persist, GC, 垃圾回收, 内存管理
防止GC的办法 一个UObject类型的变量，即使是static，默认也会被GC掉。
 要防止该对象被GC，有5种方式：
 作为成员变量并标记为UPROPERTY()； 创建对象后 AddToRoot() ；（退出游戏时需要RemoveFromRoot()） UObject对象创建出来后用TSharedPtr保存，作用等价于UPROPERTY()； FStreamableManager Load资源时，bManageActiveHandle 设置为true； FGCObjectScopeGuard 在指定代码区域内保持对象；  TSharedPtr 用法 TSharedPtr&amp;lt;MyUObject&amp;gt; ObjPtr = MakeShareable(NewObject&amp;lt;MyUObject&amp;gt;());  TSharedPtr 每赋值一次，引用计数器就会加一。但如果 TSharedPtr 成员变量所属的对象被销毁，则计数失效；如果想让某对象在游戏运行过程中一直不销毁，则可以在 GameInstance 中定义一个 TSharedPtr 对象并对其赋值。
FGCObjectScopeGuard 用法 { FGCObjectScopeGuard(UObject* GladOS = NewObject&amp;lt;...&amp;gt;(...)); GladOS-&amp;gt;SpawnCell(); RunGC(); GladOS-&amp;gt;IsStillAlive(); // Object will not be removed by GC }  FStreamableManager 用法 FSoftObjectPath AssetPath(TEXT(&amp;quot;/Game/Mannequin/Animations/ThirdPersonWalk.ThirdPersonWalk&amp;quot;)); FStreamableManager&amp;amp; AssetLoader = UAssetManager::GetStreamableManager(); //hold object in memory. TSharedPtr&amp;lt;FStreamableHandle&amp;gt; Handle = AssetLoader.</description>
    </item>
    
    <item>
      <title>[ZBrush]Crease使用</title>
      <link>http://www.dawnarc.com/2017/04/zbrushcrease%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 23 Apr 2017 11:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/zbrushcrease%E4%BD%BF%E7%94%A8/</guid>
      <description>Tool -》 Geometry -》 Crease -》 Crease   作用： 当执行平滑或者细分时，希望模型局部位置的细节不被平滑掉，则可以使用Crease。
用法： 1，先用套索(SelectLasso笔刷)选出需要被保护的细节部分：     然后点击CreaseAll，表示对选中部分的所有Mesh网格保护，如果点击Crease，那么只对边沿做保护。     然后执行细分：   最终效果：   CreaseCurve 另外有个专门做Crease曲线的笔刷。选中后，再按住Ctrl + Shift不放，即可使用该笔刷   按住鼠标不放，即可开始编辑曲线，默认是直线，如果需要转弯，按一下Alt键并松开，即可让曲线转弯：   如果转弯角度不需要圆滑，而是两个直线夹角，则在编辑过程中（Ctrl + Shift）连续按两次Alt键，即可让线条以直线线段来编辑：   当松开鼠标时，即可完成编辑：   然后再执行细分：   细分后，之前编辑的CreaseCurve位置，就不会被平滑掉。   其他资料：
http://www.zbrushcn.com/jinjie/ruhe-kabian.html
十里杨州，三生杜牧，前事休说。—姜夔《琵琶仙》</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]可变参数_VA_ARGS__ </title>
      <link>http://www.dawnarc.com/2017/04/c--%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0_va_args__/</link>
      <pubDate>Wed, 19 Apr 2017 16:17:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/c--%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0_va_args__/</guid>
      <description>参考自：https://stackoverflow.com/questions/2124339/c-preprocessor-va-args-number-of-arguments
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;stdarg.h&amp;gt; #define NUMARGS(...) (sizeof((int[]){__VA_ARGS__})/sizeof(int)) #define SUM(...) (sum(NUMARGS(__VA_ARGS__), __VA_ARGS__)) void sum(int numargs, ...); int main(int argc, char *argv[]) { SUM(1); SUM(1, 2); SUM(1, 2, 3); SUM(1, 2, 3, 4); return 1; } void sum(int numargs, ...) { int total = 0; va_list ap; printf(&amp;quot;sum() called with %d params:&amp;quot;, numargs); va_start(ap, numargs); while (numargs--) total += va_arg(ap, int); va_end(ap); printf(&amp;quot; %d\n&amp;quot;, total); return; }  晚食以当肉，安步以当车，无罪以当贵，清静贞正以当虞。---《战国策》</description>
    </item>
    
    <item>
      <title>[C]printf函数源码实现</title>
      <link>http://www.dawnarc.com/2017/04/cprintf%E5%87%BD%E6%95%B0%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 17 Apr 2017 15:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/cprintf%E5%87%BD%E6%95%B0%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>printf函数源码实现
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdarg.h&amp;gt; //va_start(arg,format),初始化参数指针arg，将函数参数format右边第一个参数地址赋值给arg //format必须是一个参数的指针，所以，此种类型函数至少要有一个普通的参数, //从而提供给va_start ,这样va_start才能找到可变参数在栈上的位置。 //va_arg(arg,char),获得arg指向参数的值，同时使arg指向下一个参数,char用来指名当前参数型 //va_end 在有些实现中可能会把arg改成无效值，这里，是把arg指针指向了 NULL,避免出现野指针 void print(const char *format, ...) { va_list arg; va_start(arg, format); while (*format) { char ret = *format; if (ret == &#39;%&#39;) { switch (*++format) { case &#39;c&#39;: { char ch = va_arg(arg, char); putchar(ch); break; } case &#39;s&#39;: { char *pc = va_arg(arg, char *); while (*pc) { putchar(*pc); pc++; } break; } default: break; } } else { putchar(*format); } format++; } va_end(arg); } int main() { print(&amp;quot;%s %s %c%c%c%c%c!</description>
    </item>
    
    <item>
      <title>[ZBrush]CurveTube笔刷</title>
      <link>http://www.dawnarc.com/2017/04/zbrushcurvetube%E7%AC%94%E5%88%B7/</link>
      <pubDate>Sun, 16 Apr 2017 23:34:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/zbrushcurvetube%E7%AC%94%E5%88%B7/</guid>
      <description>曲线大小 控制曲线大小的是笔刷的Draw Size     如果要修改曲线的粗细，调整Draw Size之后，点击下斑马线即可：     曲线斑马线使用 CurveTube笔刷可以拉出一条管道装的模型。   拉出来以后，管道中间会有一条斑马线。可以按住斑马线的中间或者两端拖拽：     如果确定管道的形状后不需要继续编辑了，那么可以点击下管道以外的其他模型的位置，此时斑马线就会消失：   删除斑马线另外一种方式：Stroke -》 Curve Functions -》 Delete   Smooth（曲线平滑） 编辑曲线过程中，如果曲线不够圆滑了：   可以点击 Stroke -》 Curve Functions -》 Smooth。可以点击多次，越点击越圆滑：     等达到预期效果后，再点击一下斑马线，就可以让曲线变圆滑：   曲线吸附模型表面 编辑曲线管道时，曲线的默认走向是不会贴着模型表面的，如果想让曲线在拉伸的过程中贴着模型表面，点击：菜单栏 -》 Picker -》 Cont Z。   这样拉出的曲线就会吸附在模型的表面上（粉色的曲线为打开Cont Z后的效果，绿色的曲线为Once Z的效果）：   Curve Modifiers使用 菜单栏-》Stroke，即可打开CurveTube笔刷的编辑面板：   点击Stroke -》 Curve Modifiers -》 Size，可以让曲线有粗细渐变。   比如假设启用Size之前，曲线的形状是这样的：   启用Size之后，再点击下斑马线：   曲线渐变的节奏可以在曲线编辑器中控制 单击Stroke -》 Curve Modifiers -》 Curve Falloff，即可打开曲线编辑面板：     如果想让曲线中间粗，两端细，那么可以在曲线编辑器中调整为：   这样画出来的曲线效果为：   设置曲线横截面的边的条数 Brush -》 Modifiers -》 Brush Modifier，比如修改为4，那么曲线的横截面的边的条数只有4条，画出来的曲线相当于一个立方体。这个数值越大，则曲线的横截面越接近圆形。     设置Brush Modifier之后的效果，和CurveTubeSnap笔刷的效果类似，该笔刷的Brush Modifier值默认为8：   设置曲线的纵向密度 值越小，表示纵向的密度越大：   例如，上边曲线的密度为0.</description>
    </item>
    
    <item>
      <title>[ZBrush]Project All实例(example)</title>
      <link>http://www.dawnarc.com/2017/04/zbrushproject-all%E5%AE%9E%E4%BE%8Bexample/</link>
      <pubDate>Sun, 16 Apr 2017 22:26:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/zbrushproject-all%E5%AE%9E%E4%BE%8Bexample/</guid>
      <description>Keywords：ZBrush, Project All, Mask, 布线, 投射
Project All实际应用： 我们假设有一个布线过的高分模型，但是局部的布线有问题，我们想只对这些局部的重新拓扑，这时就可以使用Project All功能。
步骤：
1，假设存在一个高分模型，Resolution为128，此时在SubTool中复制一个： Tool -》 SubTool -》Duplicate   2，复制之后，在对复制出的模型执行Re-DynaMesh（Tool -》 Geometry -》 DynaMesh -》 DynaMesh），并将Resolution设低一点，比如16；然后再对该模型进行多次Divide（Tool -》 Geometry -》 Divide）；Divide之后，再讲该模型的细分级别设置为低细分级别（修改Tool -》 Geometry -》 SDiv），这里假设SDiv为2：   3，假设此时上面模型的Resolution别为128，下面模型的Resolution为16（SDiv为2）：   则此时高分模型和低分模型的形体会产生差异：   然后执行：Tool -》 SubTool -》Project -》 Project All：   注意：执行前将Project参数Dist设为1。
执行Project All之后，ZB就会自动帮你将高分模型和低分模型之间的差异中和掉：   此时再隐藏掉高分模型，就可以只对低分模型重新布线：     唉，奴隶般的意大利，你哀痛之逆旅，你这暴风雨中没有舵手的孤舟，你不再是各省的主妇，而是妓院！---《神曲》</description>
    </item>
    
    <item>
      <title>[UE4]How to spawn a simple cube in C&#43;&#43;</title>
      <link>http://www.dawnarc.com/2017/04/ue4how-to-spawn-a-simple-cube-in-c--/</link>
      <pubDate>Sat, 15 Apr 2017 15:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/ue4how-to-spawn-a-simple-cube-in-c--/</guid>
      <description>How to spawn a simple cube in C++?
https://answers.unrealengine.com/questions/142180/how-to-spawn-a-simple-cube-in-c.html
长安，故人问我，道愁肠，?酒只依然。目断秋霄落雁，醉来时响空弦。—辛弃疾《木兰花慢》</description>
    </item>
    
    <item>
      <title>[ZBrush]使用蒙板掏空挖洞</title>
      <link>http://www.dawnarc.com/2017/04/zbrush%E4%BD%BF%E7%94%A8%E8%92%99%E6%9D%BF%E6%8E%8F%E7%A9%BA%E6%8C%96%E6%B4%9E/</link>
      <pubDate>Thu, 13 Apr 2017 23:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/zbrush%E4%BD%BF%E7%94%A8%E8%92%99%E6%9D%BF%E6%8E%8F%E7%A9%BA%E6%8C%96%E6%B4%9E/</guid>
      <description>Keywords： Mask、MaskPen、DynaMesh、掏空、挖洞
注意，开始之前记得将模型转换为DynaMesh：   这里演示掏空一个圆柱，所以我们可以使用InsertCylinder笔刷：   按住Alt键（相当于反向操作），在一个面板上拉出一个圆柱。默认圆柱只有单面：   再点击Tool -》 Display Properties -》 Double，就可以看到双面：     在空白区域拖拽一下鼠标左键，取消蒙板：   然后在空白区域点击鼠标左键，全体覆盖蒙板   然后再拖拽一下鼠标左键，取消所有蒙板：   最后再拖拽一下鼠标左键，执行Re-DynaMesh，让圆柱消失：   这时一种精神上的感慨油然而生，认为人生是由啜泣、抽噎和微笑组成的，而抽噎占了其中绝大部分。---《欧·亨利短篇小说选》</description>
    </item>
    
    <item>
      <title>[ZBrush]SubTool使用(类似PS的Layer)</title>
      <link>http://www.dawnarc.com/2017/04/zbrushsubtool%E4%BD%BF%E7%94%A8%E7%B1%BB%E4%BC%BCps%E7%9A%84layer/</link>
      <pubDate>Thu, 13 Apr 2017 00:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/zbrushsubtool%E4%BD%BF%E7%94%A8%E7%B1%BB%E4%BC%BCps%E7%9A%84layer/</guid>
      <description>Keywords：挤出、Extract、合并、Merge、掏空、挖洞
Extract（挤出） 现在模型上画一个mask（按住Ctrl+鼠标左键）   然后点击Tool -》 SubTool -》 Extract -》 Extract，点击后只是预览效果，如果确认，再点击Accept     Merge（合并） 假设场景中已经有一个球体。 1，点击Tool -》 SubTool -》Append -》选择一个正方体   将新建出来的正方体移动到一个合适的位置   2，选中第一个SubTool，然后点击下方的Merge -》 MergeDown   最终效果：   然后再执行DynaMesh，就可以将两个SubTool的交界处进行融合：   合并之后，两个subtool仍然可以独立编辑。比如将Brush -》 Auto Masking -》 Mask By PolyGroups改为100，然后就可以只编辑其中一个。因为Merge之后还是两个单独的group，所以两个group可以独立编辑   使用SubTool挖洞（掏空） 1，新建一个圆柱体的SubTool，插入正方体里面。   2，在SubTool继续选中这个圆柱体，再点击：Tool -》 PolyGroups -》 Group As DynaMesh Sub -》   点击后的效果：   3，选中SubTool中圆柱体的“相减”的bool运算符   4，选中正方体，并执行MergeDown   执行后的效果：   5，最后再Re-DynaMesh一下。由于之前没有转换为DynaMesh，所以这里转换为DynaMesh。   转换为DynaMesh后，圆柱体会自动消失，并掏空正方体，最终效果：   当然，行是行的，这固然很好，可是千万别闹出什么乱子来啊。---《套中人》</description>
    </item>
    
    <item>
      <title>[Markdown]如何修改字体颜色</title>
      <link>http://www.dawnarc.com/2017/04/markdown%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2/</link>
      <pubDate>Mon, 10 Apr 2017 00:53:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/04/markdown%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2/</guid>
      <description>markdown没有专门支持颜色的语法，但是可以内嵌HTML：
&amp;lt;font color=red&amp;gt;内容&amp;lt;/font&amp;gt; &amp;lt;font color=#0099ff size=7 face=&amp;quot;黑体&amp;quot;&amp;gt;内容&amp;lt;/font&amp;gt;  出淤泥而不染，濯清涟而不妖，中通外直，不蔓不枝，香远益清，亭亭净植，可远观，而不可亵玩焉。---周敦颐《爱莲说》</description>
    </item>
    
    <item>
      <title>[UE4]How can I use UFUNCTION(Exec)</title>
      <link>http://www.dawnarc.com/2017/03/ue4how-can-i-use-ufunctionexec/</link>
      <pubDate>Sat, 25 Mar 2017 14:47:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/03/ue4how-can-i-use-ufunctionexec/</guid>
      <description>UE4提供了自定义命令的操作，类似GM，方便测试。
用法  创建一个继承CheatManager的自定义类，然在GM函数上加上标识：
UFUNCTION(Exec)  在PlayerController的构造函数中设置CheatClass：
AMyPlayerController::AMyPlayerController(const FObjectInitializer&amp;amp; ObjectInitializer) : Super::APlayerController(ObjectInitializer) { CheatClass = UMyCheatManager::StaticClass(); }  在命令行（按波浪键，shipping模式下无效）中直接调用该函数了。
假设函数为：
UFUNCTION(Exec) void TestFun(FString Str);  按下波浪键后，则输入：
TestFun HelloWorld   注意事项 只有以下类的方法可以支持Exec标签：
 APawn APlayerController UPlayerInput UCheatManager AGameMode UGameInstance AHUD  参考资料 Using Cheat Manager in Unreal Engine 4
http://zompi.pl/using-cheat-manager-in-unreal-engine-4/
泪水背着光，安静而悲伤
肩上剩下的能量，
还能撑到什么地方。
----《三国恋》</description>
    </item>
    
    <item>
      <title>[ZBrush]自定义菜单的显示颜色</title>
      <link>http://www.dawnarc.com/2017/03/zbrush%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95%E7%9A%84%E6%98%BE%E7%A4%BA%E9%A2%9C%E8%89%B2/</link>
      <pubDate>Sun, 19 Mar 2017 21:18:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/03/zbrush%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8F%9C%E5%8D%95%E7%9A%84%E6%98%BE%E7%A4%BA%E9%A2%9C%E8%89%B2/</guid>
      <description>1，现在左下角的取色板中选一个颜色   2，然后在点击：Preferences -》 Icolors，然后点击你想修改的菜单类型，不同类型的菜单用名字不同名字标识，比如：Sw1、Sw2等等。   编辑之后，如果不保存，下次重启zb会自动重置为默认颜色，所以编辑后再保存一下： Preferences -》 Config -》 Store Config   现在我说的您要特别注意听：在别人心中存在的人，就是这个人的灵魂。这才是您本身，才是您的意识在一生当中赖以呼吸、营养以至陶醉的东西，这也就是您的灵魂、您的不朽和存在于别人身上的您的生命。---《日瓦戈医生》</description>
    </item>
    
    <item>
      <title>[Windows]Epic Games Launcher Error Codes 2503, 2502</title>
      <link>http://www.dawnarc.com/2017/03/windowsepic-games-launcher-error-codes-2503-2502/</link>
      <pubDate>Wed, 08 Mar 2017 23:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/03/windowsepic-games-launcher-error-codes-2503-2502/</guid>
      <description>问题： 安装launcher时报错，error 2503 2502
解决办法： 管理员模式下的CMD中执行命令：
msiexec /package EpicGamesLauncherInstaller-2.12.24-3321064.msi  参考： https://answers.unrealengine.com/questions/368475/epic-games-launcher-error-codes-2503-2502.html
东风渐绿西湖岸，雁已还、人来南归。—周密《高阳台》</description>
    </item>
    
    <item>
      <title>[ZBrush]DynaMesh使用</title>
      <link>http://www.dawnarc.com/2017/03/zbrushdynamesh%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 05 Mar 2017 21:34:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/03/zbrushdynamesh%E4%BD%BF%E7%94%A8/</guid>
      <description>启用DynaMesh的步骤 1，先删除模型的低细分级别：Tool -》 Geometry -》Del Lower     2，然后点击Tool -》 Geometry -》 DynaMesh -》 DynaMesh   DynaMesh之前，Resolution的值为多少，则分辨率就是多少。比如上图中，Resolution为128。
Re-DynaMesh的步骤 注意：执行Re-DynaMesh的前提是已经启用了DynaMesh，即”DynaMesh”按钮是选中状态。 1，假设下图是原始mesh的分辨率为128，我们准备将其Re-DynaMesh为分辨率为32的mesh。   2，现在Resolution调整为32，并增加一次Divide。   3，然后在空白区域，按住鼠标左键拖拽一下，就可以执行Re-DynaMesh。   另外一种Re-DynaMesh方式： 在上面的第2步之后，点击Del Lower   然后再点击DynaMesh两次：相当于重新关闭和打开DynaMesh   DynaMesh的4个参数作用    Groups：如果mesh有多个分组，点击此按钮可以让分组之前的界限更明显； Polish：让物体表面更平滑； Blur：Project按钮启用时生效，值越多，模糊掉的细节越多，值越小，模糊掉的细节越少； Project：重新绘制Mesh网格，比如当你的mesh网格拉伸扭曲了，可以通过此按钮将表面重新恢复均匀；如果想让两个Group合并编辑（两个不同Group在没有合并的情况下，同时编辑），也需要打开Project并执行Re-DynaMesh。  Freeze SubDivision Levels的意义   意义1：MeshInsert Dot Brush 启用Freeze SubDivision Levels的用途之一：当使用MeshInsert Dot Brush笔刷时，可以锁住之前模型的细分级别，这样可以让新建的模型和老的模型分别已不同的细分级别同时共存。 例如下图中，启用Freeze SubDivision Levels后，在圆球上见两个突起物；红球的分辨率为32，两个突起部位的分辨率为128，此时两种分辨率同时共存。   MeshInsert Dot Brush使用完毕以后，然后关闭Freeze SubDivision Levels，此时会将所有mesh的分辨率调整为最高的分辨率。当前所有mesh中，分辨率最高的32，所以关闭Freeze SubDivision Levels后，所有mesh的分辨率编程了128。   启用和关闭Freeze SubDivision Levels，可以来实现高分和低分mesh的来回切换：     意义2：DynaMesh编辑 在Freeze SubDivision Levels启用后，DynaMesh模式下编辑模型：   编辑完毕后再关闭Freeze SubDivision Levels，就可以将Freeze SubDivision Levels启用时编的部分以不同的细分级别显示出来。   Resolution的意义    1，Resolution的值为多少，那么mesh首次转换为DynaMesh后的默认分辨率就是多少。 2，Re-DynaMesh（重新拓扑）的时候，mesh新的分辨率就是当前Resolution的值。</description>
    </item>
    
    <item>
      <title>[ZBurhs]ZB自带的动作造型模版工程：Mannequin</title>
      <link>http://www.dawnarc.com/2017/03/zburhszb%E8%87%AA%E5%B8%A6%E7%9A%84%E5%8A%A8%E4%BD%9C%E9%80%A0%E5%9E%8B%E6%A8%A1%E7%89%88%E5%B7%A5%E7%A8%8Bmannequin/</link>
      <pubDate>Fri, 03 Mar 2017 22:35:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/03/zburhszb%E8%87%AA%E5%B8%A6%E7%9A%84%E5%8A%A8%E4%BD%9C%E9%80%A0%E5%9E%8B%E6%A8%A1%E7%89%88%E5%B7%A5%E7%A8%8Bmannequin/</guid>
      <description>LightBox -&amp;gt; Project -&amp;gt; Mannequin
  美德犹如名香，经燃烧或压榨而其香愈烈，盖幸运最能显露恶德而厄运最能显露美德。---《培根论说文集》</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]带参的回调函数编写技巧(模板函数)</title>
      <link>http://www.dawnarc.com/2017/02/c--%E5%B8%A6%E5%8F%82%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%BC%96%E5%86%99%E6%8A%80%E5%B7%A7%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 28 Feb 2017 16:17:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/c--%E5%B8%A6%E5%8F%82%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%BC%96%E5%86%99%E6%8A%80%E5%B7%A7%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0/</guid>
      <description>比如要设置一连串的回调函数来响应键盘的0到9数字键，注册回调函数时无法把数字0到9作为函数参数一起注册，那么有没其他办法？答案肯定是有！具体方式如下：
1，先定义好需要回调的函数，假如：
void TestCallback(int index);  2，再定义一个模板函数将上面的函数封装：
template&amp;lt;int index&amp;gt; void TestCallback() { TestCallback(index); }  3，最后在注册回调时，将数字作为模板类型来注册：
CallbackMaster-&amp;gt;Bind(&amp;amp;MyClass::TestCallback&amp;lt;9&amp;gt;);  不积跬步，无以至千里；不积小流，无以成江海。骐骥一跃，不能十步；驽马十驾，功在不舍。锲而舍之，朽木不折；锲而不舍，金石可镂。——《荀子》</description>
    </item>
    
    <item>
      <title>[UE4]FMath常用API</title>
      <link>http://www.dawnarc.com/2017/02/ue4fmath%E5%B8%B8%E7%94%A8api/</link>
      <pubDate>Tue, 28 Feb 2017 15:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4fmath%E5%B8%B8%E7%94%A8api/</guid>
      <description>FMath常用函数
RadiansToDegrees() 弧度转角度
DegreesToRadians () 角度转弧度
SinCos() 根据弧度计算出对应的sin和cos值
湛湛长空黑，更那堪，斜风细雨，乱愁如织。---刘克庄《贺新郎》</description>
    </item>
    
    <item>
      <title>[UE4]打开URL链接</title>
      <link>http://www.dawnarc.com/2017/02/ue4%E6%89%93%E5%BC%80url%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Mon, 27 Feb 2017 20:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4%E6%89%93%E5%BC%80url%E9%93%BE%E6%8E%A5/</guid>
      <description>蓝图中打开URL
使用节点：Launch URL
C++打开URL
FPlatformProcess::LaunchURL(TEXT(&amp;quot;http://www.abc.com&amp;quot;), NULL, NULL);  杜郎老矣，想旧事、花须能说。记少年、一梦扬州，二十四桥明月。—周密《瑶华》</description>
    </item>
    
    <item>
      <title>[UE4]RTS游戏的位移同步示例全流程(登录、Replication和RPC)</title>
      <link>http://www.dawnarc.com/2017/02/ue4rts%E6%B8%B8%E6%88%8F%E7%9A%84%E4%BD%8D%E7%A7%BB%E5%90%8C%E6%AD%A5%E7%A4%BA%E4%BE%8B%E5%85%A8%E6%B5%81%E7%A8%8B%E7%99%BB%E5%BD%95replication%E5%92%8Crpc/</link>
      <pubDate>Sat, 25 Feb 2017 20:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4rts%E6%B8%B8%E6%88%8F%E7%9A%84%E4%BD%8D%E7%A7%BB%E5%90%8C%E6%AD%A5%E7%A4%BA%E4%BE%8B%E5%85%A8%E6%B5%81%E7%A8%8B%E7%99%BB%E5%BD%95replication%E5%92%8Crpc/</guid>
      <description>转载请注明原文出处：http://www.dawnarc.com
keywords：UE4、Replication、Relicate、reliable、RPC、RTS Movement、Dedicated Server、属性同步、demo、example
实例的完整工程下载地址见文章底部
属性同步 步骤：
1，对属性添加UPROPERTY(Replicated)宏：
//Player display name UPROPERTY(Replicated) FString Alias_;  2，属性所在的class中重写函数GetLifetimeReplicatedProps：
需要头文件：
#include &amp;quot;Net/UnrealNetwork.h&amp;quot;  重写函数：
void AReplTestCharacter::GetLifetimeReplicatedProps(TArray&amp;lt; FLifetimeProperty &amp;gt; &amp;amp; OutLifetimeProps) const { Super::GetLifetimeReplicatedProps(OutLifetimeProps); DOREPLIFETIME(AReplTestCharacter, Alias_); }  RPC（远程执行调用） 步骤：
1，对需要远程执行的函数添加宏UFUNCTION(Server, Reliable, WithValidation)或者UFUNCTION(Client, Reliable)。其中Server表示在客户端调用，在服务端执行，Client则反之；WithValidation表示是否需要验证函数，加上的画需要添加函数：bool MyFun_Validate()，函数提内容写在MyFun_Implementation函数内。cpp中不需要与函数名同名的函数体，只需要实现_Validate和_Implementation两个函数即可。 头文件：
//移动角色(只在服务端执行的函数) UFUNCTION(Server, Reliable, WithValidation) void ServerMoveToDest(APawn* Panw, const FVector DestLocation); bool ServerMoveToDest_Validate(APawn* Panw, const FVector DestLocation); void ServerMoveToDest_Implementation(APawn* Panw, const FVector DestLocation);  CPP：
bool AReplTestPlayerController::ServerMoveToDest_Validate(APawn* Panw, const FVector DestLocation) { return true; } void AReplTestPlayerController::ServerMoveToDest_Implementation(APawn* Pawn, const FVector DestLocation) { //logic.</description>
    </item>
    
    <item>
      <title>[UE4]如何编译部署独立专用服务端(Standalone Dedicated Server)</title>
      <link>http://www.dawnarc.com/2017/02/ue4%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2%E7%8B%AC%E7%AB%8B%E4%B8%93%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%AB%AFstandalone-dedicated-server/</link>
      <pubDate>Sat, 25 Feb 2017 20:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2%E7%8B%AC%E7%AB%8B%E4%B8%93%E7%94%A8%E6%9C%8D%E5%8A%A1%E7%AB%AFstandalone-dedicated-server/</guid>
      <description>下面步骤假设是以development模式来构建，步骤和shipping模式没差异。
下面步骤中假设我们自己的UE4工程名叫：MyProject
1，下载源码及编译 需要现在unrealengine官网上注册并加入github开发组才有权限进入下面地址。
https://github.com/EpicGames/UnrealEngine/tags
注意：编译专用服务器，只能用源码编译版本的引擎，安装版本的引擎无法编译Server。
 打开页面后下载一个最新的release版本，解压出来后先运行Setup.bat，会自动下载资源文件，大概有几个G，下载完以后，然后再运行GenerateProjectFiles.bat，会生成VS工程文件，这里假设你已经安装好了VS，我用的vs2015旗舰版，生成完以后打开VS，build类型选择debuggame editor或者development editor，并编译。
2，切换工程的UE4版本 右键点击你的UE4工程文件MyProject.uproject -》 Switch Unreal Engine version，选择刚刚编译出来的UE4，切换版本以后，再右击*.uproject并选择：Generate Visual Studio project files，最后启动VS，启动VS之后再选择一种build类型来编译工程并启动，这里测试用的是development editor类型。
3，cook client content 上面第二步编译并启动运行工程后，这一步来打包客户端（官方文档上叫cook client content），方法和正常客户端版本打包的步骤一样：
Package Project -》 Windows -》 Windows x64。   有人可能会问，安装版本的UE4为什么有没PS4、Xbox等打包选项？是的，只有源码编译的UE4才有这些选项。
这里我们假设打包时选择的输出目录为：D:/PackageTest/，那么输出的客户端exe文件就在D:/PackageTest/WindowsNoEditor/MyProject/Binariesk/Win64/MyProject.exe
这个目录位置会在后面步骤中用到。
如果不cook client content，则后面启动服务端时会报错： Error: The global shader cache file &amp;lsquo;F:/EpicGames/UnrealEngine/Engine/GlobalShaderCache-PCD3D_SM5.bin&amp;rsquo; is missing.

还有一个纯蓝图UE4工程的构建bug问题：
这个问题v4.7版本时还存在，当前最新版本不知道解决没有。
问题现象是：如果用VS构建之前不添加一个自定义的C++代码，那么构建出来的版本会有问题。
解决办法：在VS构建server版本之前，在UE4 Editor中添加一个C++代码，这个代码随意，只要是C++代码就行（比如添加一个自定义HUD的class），内容默认，不需要编辑。
添加C++方法是：File -》 Add Code to Project。
由于我这里演示的是C++工程，所以不需要添加再添加C++ class。
打包之前记得GameMode和Map是否设置正确了，如果不使用默认的话。   如果这里不设置，默认为空，则客户端进入服务端后会黑屏。</description>
    </item>
    
    <item>
      <title>[UE4]Overlap检测的常用工具函数</title>
      <link>http://www.dawnarc.com/2017/02/ue4overlap%E6%A3%80%E6%B5%8B%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 22 Feb 2017 17:27:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4overlap%E6%A3%80%E6%B5%8B%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</guid>
      <description>keyword: Overlap、Test、Blocking
World.h
/** * Test the collision of a shape at the supplied location using a specific channel, and return if any blocking overlap is found * @param Pos Location of center of box to test against the world * @param TraceChannel The &#39;channel&#39; that this query is in, used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule, Convex * @param Params Additional parameters used for the trace * @param ResponseParam ResponseContainer to be used for this trace * @return TRUE if any blocking results are found */ bool OverlapBlockingTestByChannel(const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, ECollisionChannel TraceChannel, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams&amp;amp; ResponseParam = FCollisionResponseParams::DefaultResponseParam) const; /** * Test the collision of a shape at the supplied location using a specific channel, and return if any blocking or overlapping shape is found * @param Pos Location of center of box to test against the world * @param TraceChannel The &#39;channel&#39; that this query is in, used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule, Convex * @param Params Additional parameters used for the trace * @param ResponseParam ResponseContainer to be used for this trace * @return TRUE if any blocking or overlapping results are found */ bool OverlapAnyTestByChannel(const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, ECollisionChannel TraceChannel, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams&amp;amp; ResponseParam = FCollisionResponseParams::DefaultResponseParam) const; /** * Test the collision of a shape at the supplied location using object types, and return if any overlap is found * @param Pos Location of center of box to test against the world * @param ObjectQueryParams List of object types it&#39;s looking for * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule, Convex * @param Params Additional parameters used for the trace * @return TRUE if any blocking results are found */ bool OverlapAnyTestByObjectType(const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, const FCollisionObjectQueryParams&amp;amp; ObjectQueryParams, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam) const; /** * Test the collision of a shape at the supplied location using a specific profile, and return if any blocking overlap is found * @param Pos Location of center of box to test against the world * @param ProfileName The &#39;profile&#39; used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule * @param Params Additional parameters used for the trace * @return TRUE if any blocking results are found */ bool OverlapBlockingTestByProfile(const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, FName ProfileName, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam) const; /** * Test the collision of a shape at the supplied location using a specific profile, and return if any blocking or overlap is found * @param Pos Location of center of box to test against the world * @param ProfileName The &#39;profile&#39; used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule * @param Params Additional parameters used for the trace * @return TRUE if any blocking or overlapping results are found */ bool OverlapAnyTestByProfile(const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, FName ProfileName, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam) const; /** * Test the collision of a shape at the supplied location using a specific channel, and determine the set of components that it overlaps * @param OutOverlaps Array of components found to overlap supplied box * @param Pos Location of center of shape to test against the world * @param TraceChannel The &#39;channel&#39; that this query is in, used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule * @param Params Additional parameters used for the trace * @param ResponseParam ResponseContainer to be used for this trace * @return TRUE if OutOverlaps contains any blocking results */ bool OverlapMultiByChannel(TArray&amp;lt;struct FOverlapResult&amp;gt;&amp;amp; OutOverlaps, const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, ECollisionChannel TraceChannel, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam, const FCollisionResponseParams&amp;amp; ResponseParam = FCollisionResponseParams::DefaultResponseParam) const; /** * Test the collision of a shape at the supplied location using object types, and determine the set of components that it overlaps * @param OutOverlaps Array of components found to overlap supplied box * @param Pos Location of center of shape to test against the world * @param ObjectQueryParams List of object types it&#39;s looking for * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule * @param Params Additional parameters used for the trace * @return TRUE if any overlap is found */ bool OverlapMultiByObjectType(TArray&amp;lt;struct FOverlapResult&amp;gt;&amp;amp; OutOverlaps, const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, const FCollisionObjectQueryParams&amp;amp; ObjectQueryParams, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam) const; /** * Test the collision of a shape at the supplied location using a specific profile, and determine the set of components that it overlaps * @param OutOverlaps Array of components found to overlap supplied box * @param Pos Location of center of shape to test against the world * @param ProfileName The &#39;profile&#39; used to determine which components to hit * @param CollisionShape CollisionShape - supports Box, Sphere, Capsule * @param Params Additional parameters used for the trace * @return TRUE if OutOverlaps contains any blocking results */ bool OverlapMultiByProfile(TArray&amp;lt;struct FOverlapResult&amp;gt;&amp;amp; OutOverlaps, const FVector&amp;amp; Pos, const FQuat&amp;amp; Rot, FName ProfileName, const FCollisionShape&amp;amp; CollisionShape, const FCollisionQueryParams&amp;amp; Params = FCollisionQueryParams::DefaultQueryParam) const;  今年花胜去年红。可惜明年花更好，知与谁同？—欧阳修《浪淘沙》</description>
    </item>
    
    <item>
      <title>[Math]共轭矩阵、逆矩阵、复矩阵</title>
      <link>http://www.dawnarc.com/2017/02/math%E5%85%B1%E8%BD%AD%E7%9F%A9%E9%98%B5%E9%80%86%E7%9F%A9%E9%98%B5%E5%A4%8D%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Wed, 22 Feb 2017 14:32:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/math%E5%85%B1%E8%BD%AD%E7%9F%A9%E9%98%B5%E9%80%86%E7%9F%A9%E9%98%B5%E5%A4%8D%E7%9F%A9%E9%98%B5/</guid>
      <description>共轭矩阵
http://baike.baidu.com/item/%E5%85%B1%E8%BD%AD%E7%9F%A9%E9%98%B5
逆矩阵
http://baike.baidu.com/item/%E9%80%86%E7%9F%A9%E9%98%B5
复矩阵
http://baike.baidu.com/item/%E5%A4%8D%E7%9F%A9%E9%98%B5
目察秋毫之末，耳不闻雷霆之声；耳调玉石之声，目不见太山之高。---《淮南子》</description>
    </item>
    
    <item>
      <title>[Math]矩阵乘法</title>
      <link>http://www.dawnarc.com/2017/02/math%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/</link>
      <pubDate>Wed, 22 Feb 2017 14:32:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/math%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/</guid>
      <description>矩阵乘法
http://baike.baidu.com/view/2455255.htm
矩阵乘法
http://www.cnblogs.com/DreamUp/archive/2010/07/27/1786225.html
目察秋毫之末，耳不闻雷霆之声；耳调玉石之声，目不见太山之高。——《淮南子》</description>
    </item>
    
    <item>
      <title>[VisualStudio]如何设置VS的类似的sublime滚动条效果</title>
      <link>http://www.dawnarc.com/2017/02/visualstudio%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEvs%E7%9A%84%E7%B1%BB%E4%BC%BC%E7%9A%84sublime%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%95%88%E6%9E%9C/</link>
      <pubDate>Sun, 12 Feb 2017 00:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/visualstudio%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEvs%E7%9A%84%E7%B1%BB%E4%BC%BC%E7%9A%84sublime%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%95%88%E6%9E%9C/</guid>
      <description>keywords：滚动条 插件 sublime
Tools -&amp;gt; Options -&amp;gt; Text Editor -&amp;gt; C++ -&amp;gt; Scroll Bars，选中：Use map mode for vertical scroll bar   但梦想、一枝潇洒，黄昏斜照水。—周邦彦《花犯》</description>
    </item>
    
    <item>
      <title>[ZBrush]PolyFrame关闭和显示网格线条</title>
      <link>http://www.dawnarc.com/2017/02/zbrushpolyframe%E5%85%B3%E9%97%AD%E5%92%8C%E6%98%BE%E7%A4%BA%E7%BD%91%E6%A0%BC%E7%BA%BF%E6%9D%A1/</link>
      <pubDate>Fri, 10 Feb 2017 00:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/zbrushpolyframe%E5%85%B3%E9%97%AD%E5%92%8C%E6%98%BE%E7%A4%BA%E7%BD%91%E6%A0%BC%E7%BA%BF%E6%9D%A1/</guid>
      <description>先打开PolyFrame右上角的Fill角标，然后再关闭PolyFrame左上角的Line角标。单击来打开或关闭角标，快捷键：Shift + F。
  关闭Line前：   关闭Line后：   修改 PolyMesh3D 颜色 当打开 PolyFrame 的 Fill 角标后，并点击 Make PolyMesh3D，则可以改变模型的显示颜色，每点击一次，颜色变化一次（在绿、蓝、红等颜色之间切换）。
打开 Fill 后，Material 不要选择默认的红蜡材质，最好选择 BasicMaterial ，这样可以更好的显示 PolyFrame 的颜色和网格。
我并不愿意你受的苦比我受的还大，希斯克利夫。我只愿我们永远不分离：如果我有一句话使你今后难过，想想我在地下也感到一样的难过，看在我自己的份上，饶恕我吧！---《呼啸山庄》</description>
    </item>
    
    <item>
      <title>[Math]两个旋转矩阵（Rotation Matrix）相乘（Multiply）的几何意义</title>
      <link>http://www.dawnarc.com/2017/02/math%E4%B8%A4%E4%B8%AA%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5rotation-matrix%E7%9B%B8%E4%B9%98multiply%E7%9A%84%E5%87%A0%E4%BD%95%E6%84%8F%E4%B9%89/</link>
      <pubDate>Thu, 09 Feb 2017 16:48:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/math%E4%B8%A4%E4%B8%AA%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5rotation-matrix%E7%9B%B8%E4%B9%98multiply%E7%9A%84%E5%87%A0%E4%BD%95%E6%84%8F%E4%B9%89/</guid>
      <description>讲之前，先说下如果两个Rotation相加的意义，比如：
FRotator Rot1(0.f, 90.f, 0.f); FRotator Rot2(90.f,0.f, 0.f); FRotator Result = Rot1 + Rot2;  得到的结果FRotator Result(90.f, 90.f, 0.f)，其意义是： 物体相对空间坐标原点的Rotation为(90.f, 90.f, 0.f)，很好理解。
如果两个Rotation转换为Martix并相乘，比如：
FRotator Rot1(0.f, 90.f, 0.f); FRotator Rot2(90.f,0.f, 0.f); FRotator Result =( FRotationMatrix(Rot1) * FRotationMatrix(Rot2)).Rotator;  得到的结果FRotator Result(0.f, 90.f, 90.f)，其意义是： 先将物体作Rot1旋转，即：Yaw方向（水平平面）旋转90度，然后再假设该物体相对坐标轴原点的旋转量为(0, 0, 0)，即没有作任何旋转，但实际Rotation相对坐标轴原点为(0, 90, 0)；然后再将物体进行Rot2旋转，即Pitch方向（垂直于(90, 0, 0)方向的平面）侧翻90度，因为侧翻90度前假设物体的Rotation是(0, 0, 0)，所以侧翻时所在的平面不再是Yaw=90的平面（垂直于(0, 90, 0)方向），而是Yaw=0的平面（垂直于(90, 0, 0)方向）。没做相关配图，这段话理解起来有点绕，最好用空间思维想象下，可以用手掌比划。
实际应用： 比如空间中有两个物体：A和B，现在要将A旋转至与B相同的朝向，目前只知道A的相对世界坐标的Rotation Ra(90.f,0.f, 0.f)、B相对A（将A的Rotation当做(0, 0, 0)）的Rotation Rb(0.f, 90.f, 0.f)，求A旋转后的世界坐标Rotation。 此时的计算公式就是： ( FRotationMatrix(Rb) * FRotationMatrix(Ra)).Rotator
注意：矩阵相乘时，两个乘数的前后位置不同则计算的结果也不同，比如上面例子，如果是( FRotationMatrix(Rot2) * FRotationMatrix(Rot1)).</description>
    </item>
    
    <item>
      <title>[Math]什么是“齐次”，“非齐次”，“线性”，“非线性”？</title>
      <link>http://www.dawnarc.com/2017/02/math%E4%BB%80%E4%B9%88%E6%98%AF%E9%BD%90%E6%AC%A1%E9%9D%9E%E9%BD%90%E6%AC%A1%E7%BA%BF%E6%80%A7%E9%9D%9E%E7%BA%BF%E6%80%A7/</link>
      <pubDate>Thu, 09 Feb 2017 16:48:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/math%E4%BB%80%E4%B9%88%E6%98%AF%E9%BD%90%E6%AC%A1%E9%9D%9E%E9%BD%90%E6%AC%A1%E7%BA%BF%E6%80%A7%E9%9D%9E%E7%BA%BF%E6%80%A7/</guid>
      <description>什么是“齐次”，“非齐次”，“线性”，“非线性”？
https://www.zhihu.com/question/19816504
齐次坐标和矩阵变换
http://www.cnblogs.com/lizhengjin/archive/2010/11/07/1871055.html
计算机图形学：求齐次坐标变换矩阵
https://zhidao.baidu.com/question/132223547.html
HOMOGENEOUS TRANSFORMATION MATRICES
http://www.silcom.com/~barnowl/HTransf.htm
天道何亲，惟德之亲；鬼神何灵，因人而灵。---刘基《司马季主论卜》</description>
    </item>
    
    <item>
      <title>[Math]The Mathematics of the 3D Rotation Matrix</title>
      <link>http://www.dawnarc.com/2017/02/maththe-mathematics-of-the-3d-rotation-matrix/</link>
      <pubDate>Thu, 09 Feb 2017 12:10:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/maththe-mathematics-of-the-3d-rotation-matrix/</guid>
      <description>The Mathematics of the 3D Rotation Matrix
https://www.fastgraph.com/makegames/3drotation/
How to combine rotation in 2 axis into one matrix
http://computergraphics.stackexchange.com/questions/1608/how-to-combine-rotation-in-2-axis-into-one-matrix
Rotation matrix
https://en.wikipedia.org/wiki/Rotation_matrix
云山苍苍，江水泱泱，先生之风，山高水长。---范仲淹《严先生祠堂记》</description>
    </item>
    
    <item>
      <title>[UE4]Component相关常用API</title>
      <link>http://www.dawnarc.com/2017/02/ue4component%E7%9B%B8%E5%85%B3%E5%B8%B8%E7%94%A8api/</link>
      <pubDate>Tue, 07 Feb 2017 14:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4component%E7%9B%B8%E5%85%B3%E5%B8%B8%E7%94%A8api/</guid>
      <description>Actor.h
//获取第一个与指定类型相同的Component UActorComponent* AActor::FindComponentByClass(const TSubclassOf&amp;lt;UActorComponent&amp;gt; ComponentClass) const //获取当前actor的所有component template&amp;lt;class T, class AllocatorType&amp;gt; void GetComponents(TArray&amp;lt;T*, AllocatorType&amp;gt;&amp;amp; OutComponents, bool bIncludeFromChildActors = false) const //与FindComponentByClass作用相同，暴露给蓝图使用的C++函数 UActorComponent* AActor::GetComponentByClass(TSubclassOf&amp;lt;UActorComponent&amp;gt; ComponentClass) const //获取指定类型的所有Component TArray&amp;lt;UActorComponent*&amp;gt; AActor::GetComponentsByClass(TSubclassOf&amp;lt;UActorComponent&amp;gt; ComponentClass) const  PrimitiveComponent.h
//获取当前component中材质的个数 int32 UPrimitiveComponent::GetNumMaterials() const //创建一个材质对象，并替换到Parent对象上的指定index的材质 UMaterialInstanceDynamic* UPrimitiveComponent::CreateAndSetMaterialInstanceDynamicFromMaterial(int32 ElementIndex, class UMaterialInterface* Parent)  燕子不知何世，向寻常、巷陌人家，相对如说兴亡，斜阳里。—周邦彦《金陵怀古》</description>
    </item>
    
    <item>
      <title>[UE4]Collision Filtering</title>
      <link>http://www.dawnarc.com/2017/02/ue4collision-filtering/</link>
      <pubDate>Mon, 06 Feb 2017 20:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/ue4collision-filtering/</guid>
      <description>COLLISION FILTERING
https://www.unrealengine.com/blog/collision-filtering
Collision
https://docs.unrealengine.com/latest/INT/Engine/Physics/Collision/index.html
Place able items like Rust
https://answers.unrealengine.com/questions/235455/place-able-items-like-rust.html
Unreal Engine 4 - Building System [ Tutorial / HD ]
https://www.youtube.com/watch?v=oSpl_qKToM8
舞榭歌台，风流总被、雨打风吹去。---辛弃疾《永遇乐》</description>
    </item>
    
    <item>
      <title>[OpenGL]OpenGL4.3获取debug信息的方式</title>
      <link>http://www.dawnarc.com/2017/02/openglopengl4.3%E8%8E%B7%E5%8F%96debug%E4%BF%A1%E6%81%AF%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 04 Feb 2017 15:54:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/02/openglopengl4.3%E8%8E%B7%E5%8F%96debug%E4%BF%A1%E6%81%AF%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>Keywords：debug、opengl、调试、message
4.3之前的版本，如果要打印debug信息，通常是调用glGetError()函数，从4.3开始，提供了注册回调函数来获取debug message。
示例： 1.Create a callback function to receive the debug messages. The function must conform to a specific prototype described in the OpenGL documentation. For this example, we&amp;rsquo;ll use the following one:
void debugCallback(GLenum source, GLenum type, GLuint id,GLenum severity, GLsizei length,const GLchar * message, void * param) { // Convert GLenum parameters to strings printf(&amp;quot;%s:%s[%s](%d): %s\n&amp;quot;, sourceStr, typeStr, severityStr, id, message); }  2.Register our callback with OpenGL using glDebugMessageCallback:</description>
    </item>
    
    <item>
      <title>[ZBrush]PolyGroups使用</title>
      <link>http://www.dawnarc.com/2017/01/zbrushpolygroups%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 18 Jan 2017 22:38:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrushpolygroups%E4%BD%BF%E7%94%A8/</guid>
      <description>Keywords: ZBrush、PolyGroups
PolyGroup的笔刷类型 常用的笔刷有三种：SelectLasso、SelectRect、SliceCric   SelectLasso 套索范围选择     SelectRect 矩形范围选择     SliceCric 可以将作用区域，沿着当前的视角方向一直投射下去，投射下去的区域都会被选中，不管有没在可视范围内。例如：     Auto Groups用法 自动将单个模型分成多个组，用法：Tool -》 Polygroups -》 Auto Groups   效果：   隐藏Group 如果想要暂时隐藏某些Group，只让某个Group单独显示，以方便编辑，那么可以这样： 按住Ctrl+Shift键，然后单击需要单独现实的Group，那么该Group之外的所有Group都会隐藏，然后接着再单击一次，则是反向效果：当前Group隐藏掉，其他Group都显示。如果要全部显示，再空白区域按住Ctrl+Shift单击一次。
幸福的家庭是相同的，不幸的家庭各有各的不同。---《安娜·卡列尼娜》</description>
    </item>
    
    <item>
      <title>[ZBrush]更新补丁安装错误：zbrush was not found and the installer will exit</title>
      <link>http://www.dawnarc.com/2017/01/zbrush%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AFzbrush-was-not-found-and-the-installer-will-exit/</link>
      <pubDate>Wed, 18 Jan 2017 22:38:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrush%E6%9B%B4%E6%96%B0%E8%A1%A5%E4%B8%81%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AFzbrush-was-not-found-and-the-installer-will-exit/</guid>
      <description>安装4r8 update1补丁时，弹出错误：
zbrush 4r8 was not found and the installer will exit.  解决办法：将安装补丁放到zbrush的安装目录下（比如：C:\Program Files\Pixologic\ZBrush 4R8），然后再执行安装。
当现实折过来严丝合缝地贴在我们长期的梦想上时，它盖住了梦想，与它混为一体，如同两个同样的图形重叠起来合而为一一样。---《追忆似水年华》</description>
    </item>
    
    <item>
      <title>[ZBrush]Masking使用</title>
      <link>http://www.dawnarc.com/2017/01/zbrushmasking%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 18 Jan 2017 21:28:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrushmasking%E4%BD%BF%E7%94%A8/</guid>
      <description>Keyword：Masking，MaskPen，蒙板
mask笔刷有六种：   按住Crtl键，默认打开MashPen。 此时既可以在模型上直接画，也可以在空白区域拉出一个矩形，被框选的范围就成了蒙板。     画出蒙板后，再按Ctrl + W，可以将模版区域变成PolyGroups。
Mask反选 Tool -》 Masking -》 Inverse。快捷键Ctrl + I。       取消mask 在模型之外的空白区域，点击：Ctrl + 鼠标左键
抹掉Mask 如果想把Mask区域擦除一部分，可以按住Ctrl + Alt + 鼠标左键。     Mask区域精度 如果想让Mask的笔刷刷的时候，精度更精确，也就是说渐变效果不明显，笔刷size多大，mask范围就多大，则可以降低Focal Shift的值。   Mask的羽化与锐化 原始mask：   羽化：按住Ctrl键，在模型上点击一下鼠标左键。可以多次点击，点击的次数越多，羽化效果越微弱   锐化：按住Ctrl + Alt，再在模型上点击一下鼠标左键。 可以多次点击，点击次数越多，锐化越强烈。   Auto Masking 当模型有PolyGroup后，再点击Brush -》 Auto Making -》 Mask By Polygroups的值改大一些，之后在使用普通brush时，就可以过滤Polygroups的范围区域。     当笔刷从哪个蒙板开始画时，那么该笔刷的所有区域只能限定在改蒙板内。   结合Polygroups中的用法 假如有4个分组过的模型，在Move模式下移动时，默认是4个模型一起移动的。   如果将Mask By Polygroups改成100，那么move时，move线是从哪个模型中拉出来的，那么该move线只对该模型进行移动。</description>
    </item>
    
    <item>
      <title>[ZBrush]ZSphere使用</title>
      <link>http://www.dawnarc.com/2017/01/zbrushzsphere%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 17 Jan 2017 23:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrushzsphere%E4%BD%BF%E7%94%A8/</guid>
      <description>Z球使用步骤 新建Z球： Tool -》 Tool -》 ZSphere   新建后默认是Draw模式（快捷键Q），这个模式下只能新建z球的节点：   如果想拉伸两个节点之间的距离，需要切换到Move模式下（快捷键W）   打开Tool -》 Unified Skin -》 Preview（快捷键A）可以打开和关闭预览，如果觉得预览的分辨率太低，可以增大Resolution参数来预览高分级别的效果。     如果打开Tool -》 Sketch -》 EditSketch（快捷键Shift + A），则会切换到另外一种状态，且此时的笔刷变成了Sketch   如果用Sketch笔刷画，则会产生像泥条一样的形状。     这个功能的作用是：先给模型建立骨骼，然后在骨骼上途泥条建立肌肉，之后就可以移动骨骼的同时来移动肌肉。如果想还原到Z球状态，在按下Shift + A。
EditSketch 打开Tool -》 Sketch，取消EditSketch之后，就可以以X光显示出之前的Z球骨架     此时再切换到Z球的Move模式下，并选中Sketch下的Bind，就可以调整再次调整骨架，此时Z球上的泥条，也会跟着一起移动。     这个功能可以很方便的来调整造型，因为只需要移动骨架就可以让表面形状一起移动。
在EditSketch模式下，再点击预览Adaptive Skin（快捷键也是A），则会显示模型的低分级别（Lower Subdiv Resolution）效果     注意事项： 1，在途泥条的时候，可以经常点击Optimize来优化泥条的覆盖问题：可以自动删除掉泥条堆叠时的被覆盖掉的部分。   2，途泥条时，如果想抹掉一部分，可以按住Alt键+鼠标左键。注意，涂抹泥条或擦掉泥条时，笔刷模式一定要是Draw模式，Z球移动时的Move模式无法修改泥条。   3，Z球转换PolyMesh3D 在Preview模式下（Unified Skin或Adaptive Skin下的Preview），点击Make PolyMesh3D，就可以创建一个PolyMesh对象   然后再点击Tool -》 Geometry -》 Higher Res（快捷键D），就可以获得高分级别的模型   如果觉得细分还不够高，可以再点击Divide（快捷键Ctrl + D）   暴风雨将要在那一天，甚至把一些槲树吹倒，一些教堂的高塔要倒塌，一些宫殿也将要动摇！---《海涅诗选》</description>
    </item>
    
    <item>
      <title>[ZBrush]如何旋转、拉伸、移动模型</title>
      <link>http://www.dawnarc.com/2017/01/zbrush%E5%A6%82%E4%BD%95%E6%97%8B%E8%BD%AC%E6%8B%89%E4%BC%B8%E7%A7%BB%E5%8A%A8%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 14 Jan 2017 04:08:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrush%E5%A6%82%E4%BD%95%E6%97%8B%E8%BD%AC%E6%8B%89%E4%BC%B8%E7%A7%BB%E5%8A%A8%E6%A8%A1%E5%9E%8B/</guid>
      <description>Keywords: ZBrush、Rotate、Scale、Move
Transpose控制线 注意：要使用Transpose，必须将模型转换为PolyMesh3D。   大多数3D软件，包括游戏引擎，都有提供物体的Transform操作：旋转(path，yaw，roll)，大小伸缩（scale）、位置移动（x、y、z）。这个功能4R8才提供，4R8之前的版本，要实现transform操作，使用的是Transpose，它是笔刷的个种类。具体用法是： 按下w键（或者点击菜单面板上Move图标），然后点击鼠标左键拖动，就可以拉出一根行动线，如果想让拉出的行动线与坐标轴保持平行或垂直，再按住shift键。     将鼠标悬停在黄色圆框内时，其内部会显示一个小圆框   3个圆框均可以按住来拖拽，拖拽的作用分别是：
 左边圆框是伸缩物体； 中间红框是移动物体； 左边红框是切削物体（比如把一个球切掉一半）；  复制 在Transpose笔刷下，除了拖拽中间的圆圈来实现移动外，也可以使用按住Alt键、通过拖拽鼠标来移动物体。
如果要复制一个物体，可以按住Ctrl键，然后鼠标按住中间的圆圈进行拖拽，来复制一个物体。
注意：复制的操作，必须是在删掉Lower Subdiv Level请的情况下，否则无法通过上面两种方式来移动和复制。   移动 点击Transform –》 Move， 或者按W键   然后拉出一条Transpose，再按住3个圆圈之一，进行拖拽，来实现不同方向上的移动。   伸缩 点击Transform –》 Scale，或者按E键
旋转 点击Transform –》 Rotate，或者按R键
Transform的另外一种方式是，去掉Edit模式   然后按住其中一个圆圈不放（一共三个，分别代表Pitch、Roll、Yaw），然后拖动鼠标或压感笔，就可以实现移动、伸缩或旋转。注意，当圆圈被选中时会变宽。   注意： 移动、旋转、伸缩时一定要关闭Transform下面的对称，否则旋转就会出现变形。   Transpose控制线拉伸/伸缩 模型伸缩的规则，有两种方式：
 Scale模式下的伸缩（快捷键E）
  假如在一个立方体模型的某一个面上，拉出一条从左到右（绿色圆圈和蓝色圆圈的那一头表示线条起点）的水平Transpose控制线。   然后按住中间的黄色圆圈，沿着控制线终点方向（红色箭头方向，此例子中的从左往右）拖动，那么当前面的上下两侧就会往外拉伸。   如果逆着控制线的方向，按住中间的黄色圆圈拖动，那么当前面的上下两侧就会往内压缩。   以正方体为例，这种模式下，控制线所在的一面的高度可以增加或减小，但是左右的两个面的长和宽会保持比例缩放    Move模式下的伸缩（快捷键W）</description>
    </item>
    
    <item>
      <title>[ZBrush]关于缩放的三种方式</title>
      <link>http://www.dawnarc.com/2017/01/zbrush%E5%85%B3%E4%BA%8E%E7%BC%A9%E6%94%BE%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 14 Jan 2017 01:50:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrush%E5%85%B3%E4%BA%8E%E7%BC%A9%E6%94%BE%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>原文：http://www.zbrushcn.com/jichu/Zb-suofang.html
ZBrush因为自己独特的界面和操方式经常会有朋友感到困惑，缩放就是其中一个，在ZBrush®中缩放有三种方式，文本将逐一介绍。还让朋友们纠结的是，在ZBrush中怎样用快捷键放大缩小画面，因为缩放的快捷键和移动画面的快捷键有些相像，所以有不少朋友迷糊了一下，本文小编也为大家详细比较一下。
缩放的三种方式
一、画布缩放 画布的缩放快捷键是-/+,作用是缩放整个画布，表现是模型画布同时在缩小或放大。
二、视角缩放 视角缩放实际上是把模型拉远或放近，这个操作相当于使用放大镜，模型其实没有真的放大，可以使用右侧常用工具栏中的“Scale”按钮进行缩放。方法：将鼠标放在“Scale”按钮上上下左右拖动鼠标。
这里还需要说明一下怎么用快捷键放大缩小画面。
因为这个快捷键和移动画面有些相似，所以有不少朋友迷糊了一下。呵呵，这里给大家详细比较一下。
平移视角：alt建＋左键在空白处单击并拖动 。
缩放视角：alt键＋左键然后放开alt键在空白处拖动并平移鼠标。
三、缩放模型 模型缩放就是真的将模型本身放大或缩小了，快捷键是E，然后拖动行动线的两端。
  历史喜爱英勇豪迈的事迹，同时也谴责这种事迹所造成的后果。---《神秘岛》</description>
    </item>
    
    <item>
      <title>[Shading]OpenGL常用基础知识(个人学习笔记)</title>
      <link>http://www.dawnarc.com/2017/01/shadingopengl%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 13 Jan 2017 14:28:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/shadingopengl%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>文章内容大部分参考自《OpenGL 4 Shading Language Cookbook, Second Edition》书中的代码：
https://github.com/daw42/glslcookbook
术语解释：  GLEW (OpenGL Extension Wrangler). GLM (OpenGL Mathematics) GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan development on the desktop. It provides a simple API for creating windows, contexts and surfaces, receiving input and events.  Shader类型  vertex shader fragment shader geometry shader tess_control shader tess_evaluation shader compute shader  OpenGL版本查询与设置 查询版本（使用glad的API）：
GLint major, minor; glGetIntegerv(GL_MAJOR_VERSION, &amp;amp;major); glGetIntegerv(GL_MINOR_VERSION, &amp;amp;minor);  选择版本（使用glfw的API）：</description>
    </item>
    
    <item>
      <title>[ZBrush]常用笔刷(brush)</title>
      <link>http://www.dawnarc.com/2017/01/zbrush%E5%B8%B8%E7%94%A8%E7%AC%94%E5%88%B7brush/</link>
      <pubDate>Mon, 02 Jan 2017 21:46:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrush%E5%B8%B8%E7%94%A8%E7%AC%94%E5%88%B7brush/</guid>
      <description>Stand。默认笔刷，表面突起，按住Alt则是凹陷，反向操作。   Dam_Standard。Standard的加强版，且与Standard方向相反，默认是凹陷操作，如果想突起按住Alt键。同样参数下，Dam_Standard突起或者开挖的强度更大。   Move。讲表面隆起或下压，或者拖动某个局部位置。   Smooth。适用场景：进行局部的光滑。默认快捷键是按住shift键不放。   Clay。适用场景：填充和堆叠表面。   ClayBuildup。适用场景：方块状的填充和堆叠表面   ClayTubes。和ClayBuildup类似，但是不会累计堆叠起来，连续在一个位置刷多次，只会堆叠一层，而ClayBuildup没刷一次就会叠加一层。   TrimDynamic。适用场景：对大块的凹凸表面进行抹平   Polish。适用场景：希望抹平的同时，把凹下去的地方填充起来   hPolish。适用场景：大面积的抹平   Pinch。适用场景：将表面聚拢起来   SnakeHook。使用场景：比如想拉出尖刺或鱼鳍状的形状时，用此笔刷。   Inflat 膨胀笔刷   Clip 剪切删除选定的部位。一个使用曲线框选，一个是用矩形框框选，如果两者的Stroke如果选一样的，那么两者就没有区别，提供两种Clip笔刷主要是为了方便快速切换（比如用一个快捷键快速切换在另外一种Clip笔刷，而不需要在同一个Clip笔刷下切换Stroke）   Move Topological ：Move笔刷的变种，如果有两根须状物，且彼此相隔非常近，那么用Move笔刷对某个须状物移动时，会影响到相邻的须状物，使其一起移动，而Move Topological可以只移动一个须状物，可以通过参数设置影响的范围，只对影响范围内的部位进行移动。当然也可以用Mask蒙板来实现这种效果，根据需求看那种更方便。   Slash笔刷。不在默认的笔刷面板中，打开位置：LightBox -》 Brush -》 Slash，里面有3个ZB自带的Slash笔刷。Slash2笔刷可以用来做层叠效果，比如衣服褶皱、石头层级等。   每种笔刷，还有一个选项：Brush -》 Depth，可以设置笔刷的深度、重力影响等等。     Brush -》 Modifiers也有一些调整笔刷效果的选项   官方提供的自定义UI模版中，列出了一组常用的笔刷   我设置的常用笔刷快捷键（Alt+字母键）：</description>
    </item>
    
    <item>
      <title>[ZBrush]Alpha纹理使用</title>
      <link>http://www.dawnarc.com/2017/01/zbrushalpha%E7%BA%B9%E7%90%86%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 02 Jan 2017 20:50:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrushalpha%E7%BA%B9%E7%90%86%E4%BD%BF%E7%94%A8/</guid>
      <description>Brush选择Standard，Stroke选择DragDot，然后在选择需要的Alpha，就可以在物体表面放置纹理了：   效果：   Stroke通常是配合Alpha使用的，常用的有Dots、DragRect、Spray、DragDot。   乍暖还寒时候，最难将息。—李清照《声声慢》</description>
    </item>
    
    <item>
      <title>[Zbrush]Edit模式的作用</title>
      <link>http://www.dawnarc.com/2017/01/zbrushedit%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
      <pubDate>Mon, 02 Jan 2017 20:02:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2017/01/zbrushedit%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
      <description>顶部菜单有个Edit按钮：   默认是被选中的，如果取消，则模型不可再编辑，此时在场景中点击或拖拽，就会在鼠标所在的位置，复制一个当前的模型。但这些模型是2D的且不可编辑的。   如果在非Edit模式下执行Ctrl+N，则会清除所有的2D模型； 如果在Edit模式下执行Ctrl+N，则会保留最后一个复制出的模型，并清除其他所有的模型。</description>
    </item>
    
    <item>
      <title>[UE4]exec error  one or more of the modules specified using the &#39;-module&#39; argument could not be found</title>
      <link>http://www.dawnarc.com/2016/12/ue4exec-error--one-or-more-of-the-modules-specified-using-the--module-argument-could-not-be-found/</link>
      <pubDate>Tue, 27 Dec 2016 15:16:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/ue4exec-error--one-or-more-of-the-modules-specified-using-the--module-argument-could-not-be-found/</guid>
      <description>编译代码时提示错误：
exec: error : one or more of the modules specified using the &#39;-module&#39; argument could not be found  原因：
没有关闭UE4Editor就在编译代码。不是必现，感觉是UE4的HotLoad bug。</description>
    </item>
    
    <item>
      <title>[git]错误：fatal Not a git repository (or any of the parent directories)</title>
      <link>http://www.dawnarc.com/2016/12/git%E9%94%99%E8%AF%AFfatal-not-a-git-repository-or-any-of-the-parent-directories/</link>
      <pubDate>Sun, 25 Dec 2016 21:00:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/git%E9%94%99%E8%AF%AFfatal-not-a-git-repository-or-any-of-the-parent-directories/</guid>
      <description>我用git add file添加文件时出现这样错误：
fatal: Not a git repository (or any of the parent directories): .git  提示说没有.git这样一个目录，执行命令：
git init  就可以了！</description>
    </item>
    
    <item>
      <title>[ZBrush]删除QuickSave的临时文件</title>
      <link>http://www.dawnarc.com/2016/12/zbrush%E5%88%A0%E9%99%A4quicksave%E7%9A%84%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 25 Dec 2016 20:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/zbrush%E5%88%A0%E9%99%A4quicksave%E7%9A%84%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6/</guid>
      <description>Keywords：zbrush、QuickSave
Zb默认的存放历史文件的位置在C:\Users\Public\Documents\ZBrushData\QuickSave。 这个位置貌似没有可用的设置项修改。修改的方式只能通过cmd设置目录软连接的方式，但是这种方式我怕引起其他问题，就没有这么做。
如果要手动删除，方式为： Preferences -》 QuickSave -》 Delete Quick Files   删除历史撤销步骤：   </description>
    </item>
    
    <item>
      <title>Github Pages搭建个人博客</title>
      <link>http://www.dawnarc.com/2016/12/github-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 16 Dec 2016 18:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/github-pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>1，创建GitHub Pages的步骤： https://pages.github.com/ 创建好以后就可以将静态博客的文件提交到这个仓库的根目录下，比如hugo的public目录下的文件。   2，打开刚刚创建的仓库，点击settings   修改Custom domain，改成自己的域名即可：   点击save之后，仓库根目录下就会多出一个CNAMe文件。里面内容就是刚刚设置的域名。
3，在自己购买的域名服务平台上设置后DNS。DNS的IP可以通过ping pages.github.com获得。     </description>
    </item>
    
    <item>
      <title>[ZBrush]4R7的新特性ZModeler：Polygon建模</title>
      <link>http://www.dawnarc.com/2016/12/zbrush4r7%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7zmodelerpolygon%E5%BB%BA%E6%A8%A1/</link>
      <pubDate>Sun, 11 Dec 2016 22:49:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/zbrush4r7%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7zmodelerpolygon%E5%BB%BA%E6%A8%A1/</guid>
      <description>Keywords：zbrush、polygon、网格，低模
在笔刷列表中选择ZModeler：   先创建一个低分的模型：   鼠标放在某个面上，然后点击或者拖动，就可以挤出一个方块：     如果要同时挤出多个面，按住alt键再选择要挤出的面，然后拖拽鼠标来实现同时挤出多个面：     如果选择某个点拖拽，则可以拉伸网格：   </description>
    </item>
    
    <item>
      <title>[ZBrush]Wax蜡质半透明效果材质的设置方法</title>
      <link>http://www.dawnarc.com/2016/12/zbrushwax%E8%9C%A1%E8%B4%A8%E5%8D%8A%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C%E6%9D%90%E8%B4%A8%E7%9A%84%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 11 Dec 2016 18:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/zbrushwax%E8%9C%A1%E8%B4%A8%E5%8D%8A%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C%E6%9D%90%E8%B4%A8%E7%9A%84%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</guid>
      <description>Keywords：zbrush、wax、皮肤、半透明、蜡质
1，点击顶部菜单的Render，然后左键单击下方的圆圈，将render整个菜单添加的屏幕右边的列表中。
  2，在右边菜单中找到Render Properties，点击WaxPreview。   3，调整Wax Modifiers的强度（Strength），数值越大就越有半通明皮肤的效果。   最终效果：   </description>
    </item>
    
    <item>
      <title>[Maya][Material]3S贴图制作皮肤</title>
      <link>http://www.dawnarc.com/2016/12/mayamaterial3s%E8%B4%B4%E5%9B%BE%E5%88%B6%E4%BD%9C%E7%9A%AE%E8%82%A4/</link>
      <pubDate>Sun, 11 Dec 2016 17:26:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/mayamaterial3s%E8%B4%B4%E5%9B%BE%E5%88%B6%E4%BD%9C%E7%9A%AE%E8%82%A4/</guid>
      <description>转载：http://jingyan.baidu.com/article/0320e2c1ec5a631b87507bb1.html
3s材质球贴图，可以让对应目标物体显示出更加真实的效果，一般应用于人物模型制作中。3s贴图一般包括有人物的表皮层，真皮层，和中间层。另外，为了模型的真实度，还有涉及到法线贴图，高光贴图等。 1、首先，要让材质库存在3s贴图，必须要打开maya mental ray的选项。所以，依次打开window&amp;ndash;setting/preferences&amp;ndash;plug-in manager，找到mayatomr.mll这个选项，2014版本以前的在上面显示，2014版本的maya在下面中间显示（不要看掉了哦）。勾选后面的loaded,Maya就会自动加载Mental ray 渲染器了。如果要每次启动Maya，都自动加载Mental ray ，只要把后面的auto load构选上即可。   2、然后再在window&amp;mdash;rendering editors&amp;mdash;hypershade（打开材质球）中找到mental ray里面的misss_fast_skin_maya这个选项，即是真人皮肤的3s贴图材质球。   下面介绍下3s材质球的一些属性。             </description>
    </item>
    
    <item>
      <title>[UE4]优化建议与经验</title>
      <link>http://www.dawnarc.com/2016/12/ue4%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE%E4%B8%8E%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Fri, 09 Dec 2016 19:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/12/ue4%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE%E4%B8%8E%E7%BB%8F%E9%AA%8C/</guid>
      <description>keywords：UE4性能优化、Performance Optimization
1，材质尽量用mask，这样可以节省资源。如果用透明和半透明，会非常耗资源。
2，GPUProfile来统计性能消耗的时候，在editor模式下不是很准，因为编辑器的消耗也算进去了，如果要用，最好以Game模式来查看。
3，UE4不支持640X480的分辨率，如果在这个分辨率下运行程序，会导致程序崩溃。
4，如果角色身上有很多Component需要Attach，尽量在使用时Attach，不要一加载就全部attach，否则当场景中角色很多时，会有严重性能问题。
5，面数对UE4来说不敏感，即使在移动端。ipad 4上，50万的三角面，也能够以30fps帧率稳定运行，移动端主要对贴图大小、材质复杂度较为敏感。
6，地形编辑时，使用Instanced Static Meshes。Intancing会增加GPU的开销，但是可以显著降低CPU的开销。注意：Instancing不会减少CPU draw call次数，要减少draw call次数，需要减少材质种类，提供材质复用率。
7，3种光源的性能消耗从低到高：定向光/平行光(Directional Light) &amp;lt; 点光源(Point Light) &amp;lt; 聚光灯(Spot Light)。这个标准不局限于UE4，其他引擎也是这样。当光源数量在场景中达到一定量级时，3种灯光的性能差距也是数量级上差距。
Epic Games工程师分享：如何在移动平台上做UE4的UI优化？
http://youxiputao.com/articles/11743
Dedicated Server优化 1，服务端不用播放角色动画
2，禁用角色刚体
3，Detach角色身上所有的装饰性组件</description>
    </item>
    
    <item>
      <title>[Zbursh]快捷键与数位板(压感笔)的基础操作</title>
      <link>http://www.dawnarc.com/2016/11/zbursh%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%8E%E6%95%B0%E4%BD%8D%E6%9D%BF%E5%8E%8B%E6%84%9F%E7%AC%94%E7%9A%84%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 30 Nov 2016 22:41:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/zbursh%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%8E%E6%95%B0%E4%BD%8D%E6%9D%BF%E5%8E%8B%E6%84%9F%E7%AC%94%E7%9A%84%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>菜单相关 Table键：显示/隐藏左右的小菜单面板。
点击右边的空白区域，可以隐藏右边的大菜单。   基础快捷键 使用笔刷时安装Alt键：相当于当前笔刷的负操作，比如当前笔刷为Zadd，按住alt键就是Zsub操作。 使用笔刷时按住shift键：会对表面进行平滑。按住shift也是smooth的快捷键。 鼠标悬停在按钮上时，按住Ctrl键，那么就会显示该按钮的详细说明。
视角控制  旋转物体： 点击场景空白的空间，然后按住鼠标左键或者右键不放，拖拽鼠标。如果要立即让物体与某个坐标轴垂直或平行，按住shift键不放，再拖拽鼠标。 视角伸缩： 鼠标方式，按住Ctrl键不放，然后按住鼠标右键拖拽。 数位板方式，先按住Alt键不放，然后将压感笔按在数位板上不放，然后松开Alt键，然后在滑动压感笔来缩放模型。另外压感笔上的默认有个鼠标右键的按钮，按住不放再按住键盘的Ctrl键，滑动压感笔来实现缩放。 视角平移： 按住Alt键不放，然后在空白区域，按住鼠标右键或者左键拖拽。  设置笔刷的粗细（Draw Size） 如果用鼠标，用鼠标右键就可以调出设置笔画大小的菜单，也可以用空格键来打开：   按空格键打开的菜单项目很多，如果只想修改笔刷大小，可以按S键：   如果用数位板，用压感笔按键来代替鼠标右键貌似不太方便，可以使用数位板的空格键来代替键盘的空格键，以此方式来打开鼠标右键菜单。我的汉王数位板有ctrl、shift、alt和空格4个快捷按键。
设置笔刷切换的快捷键 1，鼠标左键单击Brush：   2，按住Ctrl+Alt键不放，然后鼠标左键单击某个笔刷，此时左上角会出现文本提示，提示当前你可以自定义快捷键，然后松开Ctrl和Alt键，再按下想要设置的快捷键（我习惯设置为Alt+字母键，因为Alt按起来顺手），之后左上角会出现文本提示快捷键设置成功：     模型居中显示(2017-05-16) F键：比如当模型被缩放到很小或者很大后，想快速让模型居中并以适当大小显示，则可以按F键。
常用快捷键 Shift + F：显示或隐藏网格（PolyFrame） D：Dynamic（Tool -》 Geometry -》 Dynamic Subdiv -》 Dynamic）。shift + D取消Dynamic</description>
    </item>
    
    <item>
      <title>[hugo]快速搭建步骤</title>
      <link>http://www.dawnarc.com/2016/11/hugo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Sun, 27 Nov 2016 22:50:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/hugo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/</guid>
      <description>1，新建文章：
hugo new 章节名称/文章名称.md  2，生成HTML、js等静态web文件：
hugo -v  这里-v是&amp;ndash;verbose的缩写，只是打印信息。
注意，文章有个属性draft=true，表示当前文章为草稿，默认构建是不会为草稿生成html文件发的。如果生成时希望把草稿也生成出来，需要使用参数：&amp;ndash;buildDrafts，例如：
hugo --buildDrafts  3，启动http服务器（测试用），3中方式：
hugo server hugo server --buildDrafts hugo server --theme=hugo_theme_robust --buildDrafts  或者执行完第2步之后，将publish目录下的所有文件拷贝到web服务器的相应目录下，比如nginx/html/</description>
    </item>
    
    <item>
      <title>[UE4][Material]使用蓝图和C&#43;&#43;动态创建材质并设置材质参数属性(Parameter)</title>
      <link>http://www.dawnarc.com/2016/11/ue4material%E4%BD%BF%E7%94%A8%E8%93%9D%E5%9B%BE%E5%92%8Cc--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E6%9D%90%E8%B4%A8%E5%B9%B6%E8%AE%BE%E7%BD%AE%E6%9D%90%E8%B4%A8%E5%8F%82%E6%95%B0%E5%B1%9E%E6%80%A7parameter/</link>
      <pubDate>Sun, 27 Nov 2016 22:20:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4material%E4%BD%BF%E7%94%A8%E8%93%9D%E5%9B%BE%E5%92%8Cc--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E6%9D%90%E8%B4%A8%E5%B9%B6%E8%AE%BE%E7%BD%AE%E6%9D%90%E8%B4%A8%E5%8F%82%E6%95%B0%E5%B1%9E%E6%80%A7parameter/</guid>
      <description> 蓝图方式： 使用StarterContent中的椅子作为演示示例的模型：
1， 创建一个空的Actor蓝图，命名为RandomChair：   2，打开蓝图   并将椅子的StaticMesh拖放的到根节点内：     3，在该蓝图内创建一个box，命名为Box1，用于检测碰撞时使用：   4，将这个蓝图拖放到场景中：   5，添加蓝图脚本
现在构造函数中创建一个材质示例，并命名为DynamicMetarial     然后再添加Box1的碰撞事件函数
    全部逻辑为：   每当靠近这个椅子时，椅子的颜色就会随机变化一次。
其中的参数名：ColorSeats，是在Chair的材质中定义的可编辑参数：   C++方式： MaterialInstance.h
/** * Internal interface for setting / updating values for material instances. */ void SetVectorParameterValueInternal(FName ParameterName, FLinearColor Value); bool SetVectorParameterByIndexInternal(int32 ParameterIndex, FLinearColor Value); bool SetScalarParameterByIndexInternal(int32 ParameterIndex, float Value); void SetScalarParameterValueInternal(FName ParameterName, float Value); void SetTextureParameterValueInternal(FName ParameterName, class UTexture* Value); void SetFontParameterValueInternal(FName ParameterName, class UFont* FontValue, int32 FontPage); void ClearParameterValuesInternal(const bool bAllParameters = true);  </description>
    </item>
    
    <item>
      <title>[UE4][Material]基础材质练习01</title>
      <link>http://www.dawnarc.com/2016/11/ue4material%E5%9F%BA%E7%A1%80%E6%9D%90%E8%B4%A8%E7%BB%83%E4%B9%A001/</link>
      <pubDate>Sun, 27 Nov 2016 16:22:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4material%E5%9F%BA%E7%A1%80%E6%9D%90%E8%B4%A8%E7%BB%83%E4%B9%A001/</guid>
      <description> 目的： 使用木纹、带alpha通道的方块样式、方格样式的法线、绿色自发光贴图4种贴图，构建一个红、蓝、颜色相间的格子样式的材质。
用到的贴图： Texture2D&amp;rsquo;/Game/StarterContent/Textures/T_Wood_Pine_D.T_Wood_Pine_D&amp;rsquo; Texture2D&amp;rsquo;/Game/StarterContent/Textures/T_Ceramic_Tile_M.T_Ceramic_Tile_M&amp;rsquo; Texture2D&amp;rsquo;/Game/StarterContent/Textures/T_Wood_Pine_N.T_Wood_Pine_N&amp;rsquo; Texture2D&amp;rsquo;/Game/StarterContent/Textures/T_Ceramic_Tile_N.T_Ceramic_Tile_N&amp;rsquo;
这4个贴图均为引擎自带的StarterContent材质。
材质蓝图（总览）：   材质蓝图（局部1）：   材质蓝图（局部2）：   材质蓝图（局部3）：   材质蓝图（局部4）：   实际效果：   </description>
    </item>
    
    <item>
      <title>[ZBrush]常用基础操作</title>
      <link>http://www.dawnarc.com/2016/11/zbrush%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 26 Nov 2016 21:28:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/zbrush%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>打开默认的空白界面： 点击左上角的“LightBox”，再选择一个默认模型。
替换掉当前的物体，新建一个默认模型 Tool -》 Tool。类似Max的参数化物体，可以快速新建一个基础形状的物体。     笔刷的3个基础属性：  Z Intensity：Z强度，这个用鼠标不是很敏感，如果用数位板，笔刷的力度会根据压感笔的力度变化。以Zadd笔刷为例，Z强度越大，则笔刷隆起的高度越高； Focal shift：笔触大小/焦点衰减，值越大，则笔刷的焦点越集中，值越小，则笔刷的焦点越分散，但集中和最大分散范围不会超过DrawSize笔刷大小的尺寸。 例子，上、中、下笔刷效果分别对应笔触为-70、0、70的效果：    Draw Size：笔刷大小；这个很好理解，就是笔刷的尺寸，类似毛笔的小楷和大楷的尺寸区别  设置模型分辨率 点击Tools -》 Geometry，默认的模型分辨率级别为3，如果要调整，拖动SDiv滑动条来扩大和缩小分辨率级别。 可以点击和Lower Res和Higher Res来切换高高低分辨率；点击Divide（分裂）扩大模型的网格数量，每点击一次，网格数量则增加4倍。   注意：要修改分辨率，必须将模型转换为PolyMesh3D，否则找不到Resolution的相关按钮。   绘制直线时如何让线条更笔直（减少抖动）： 将Mouse Avg设置大点，提高鼠标的灵敏度   也可以使用Stroke下面的Lazy Mouse：   使用Layer： 展开Layers面板，点击右下角的加号按钮，这样就可以新建一个Layer。类似PS的图层。   笔刷的相对大小设置： 按住shift不放，然后在鼠标单击Dynamic。当启用Dynamic之后，笔刷大小会随着视角拉伸自动缩放，如果不启用，则无论怎么拉伸角度，笔刷大小都不会变化。   保存文件 保存文件有两种方式，一种时保存整个zbrush的工作环境文件，包括历史记录和zb当前的软件参数设置等；一种是保存当前zbrush的对象文件，没有历史和zb配置信息。 保存带工作环境的工程文件*.ZPR：   只保存模型对象文件*.ztl：   关闭对称 Transform –》Activate Symmetry，取消选中X轴。如果点选X轴，则是对称雕刻。   撤销工具栏 在zb上方，有个横向的滑动条，你的雕刻次数越多，这个滑动条越来越长，拖动或点击时，当前雕刻的物体可以回退到之前的状态。这样方便快速撤销到之前的某个时间段的状态。   法线双面显示 默认的法线只显示一面，如果要正反都显示：点击Tool -》 Display Properties -》Double   Flip表示法线反转：之前隐藏的面进行显示，之前显示的面隐藏掉。</description>
    </item>
    
    <item>
      <title>[UE4]Lerp函数的计算公式</title>
      <link>http://www.dawnarc.com/2016/11/ue4lerp%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/</link>
      <pubDate>Sat, 26 Nov 2016 18:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4lerp%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/</guid>
      <description>UnrealMathUnlity.h：
/** Performs a linear interpolation between two values, Alpha ranges from 0-1 */ template&amp;lt; class T, class U &amp;gt; static FORCEINLINE_DEBUGGABLE T Lerp( const T&amp;amp; A, const T&amp;amp; B, const U&amp;amp; Alpha ) { return (T)(A + Alpha * (B-A)); } /** Performs a linear interpolation between two values, Alpha ranges from 0-1. Handles full numeric range of T */ template&amp;lt; class T &amp;gt; static FORCEINLINE_DEBUGGABLE T LerpStable( const T&amp;amp; A, const T&amp;amp; B, double Alpha ) { return (T)((A * (1.</description>
    </item>
    
    <item>
      <title>[UE4][Material]入门教程01</title>
      <link>http://www.dawnarc.com/2016/11/ue4material%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B01/</link>
      <pubDate>Wed, 23 Nov 2016 23:24:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4material%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B01/</guid>
      <description>   UE3的材质由3个参数组成：Diffuse、Specular、SpecPower。 UE4的材质不在沿用UE3的特性，基本参数有：
BaseColor：基本颜色
Metallic：金属质感
Specular：高光强度
Roughness：粗糙度
EmissiveColor：自发光颜色
注意事项： 1， 只有材质为非金属时（Metallic为0.0），Specular才起作用
Start Content自带的典型材质文件： M_Wood_Floor_Walnut_Worn 这个材质演示了材质常用属性和函数。
Specular不同值下的渲染效果：
0：   0.3：   1.0：   </description>
    </item>
    
    <item>
      <title>[github]设置免密码push时的相关问题</title>
      <link>http://www.dawnarc.com/2016/11/github%E8%AE%BE%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81push%E6%97%B6%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 12 Nov 2016 18:44:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/github%E8%AE%BE%E7%BD%AE%E5%85%8D%E5%AF%86%E7%A0%81push%E6%97%B6%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>1，先在本地生成ssh的公钥，方法如下：
https://gist.github.com/yisibl/8019693
2，在github自己的账号后台中添加上面生成的key，将id_rsa.pub中的所有内容全部copy过来即可。
添加key的页面：https://github.com/settings/keys
3，将https替换为ssh：
git remote set-url origin git@github.com:USERNAME/REPOSITORY.git  4，将当前客户端的ssh链接添加到github信任列表
ssh -T git@github.com  如果不执行这个步骤，会push时会出现错误提示：
ssh: connect to host github.com port 22: Connection timed out fatal: Could not read from remote repository  另外，执行此步骤时必须关掉爬墙工具（你懂的），否则会提示链接超时。</description>
    </item>
    
    <item>
      <title>[UE4][C&#43;&#43;]如何获取鼠标点击时的物体对象</title>
      <link>http://www.dawnarc.com/2016/11/ue4c--%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%97%B6%E7%9A%84%E7%89%A9%E4%BD%93%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 10 Nov 2016 22:33:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4c--%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%97%B6%E7%9A%84%E7%89%A9%E4%BD%93%E5%AF%B9%E8%B1%A1/</guid>
      <description>注册回调函数：
MyObject-&amp;gt;OnClicked.AddDynamic(this, &amp;amp;AExampleActor::DoAthing);  </description>
    </item>
    
    <item>
      <title>[UE4][UE_LOG用法</title>
      <link>http://www.dawnarc.com/2016/11/ue4ue_log%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 10 Nov 2016 22:33:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4ue_log%E7%94%A8%E6%B3%95/</guid>
      <description> 三种方式：
方式1：GLog GLog-&amp;gt;Log(&amp;quot;Does something&amp;quot;);  方式2：UE_LOG(LogTemp) UE_LOG(LogTemp, Log, TEXT(&amp;quot;%d&amp;quot;), 1111); UE_LOG(LogTemp, Warning, TEXT(&amp;quot;%d&amp;quot;), 1111);  方式3：自定义log 转载自：http://www.cnblogs.com/pengyingh/articles/5472998.html
头文件中加入：
#pragma once #include &amp;quot;GameFramework/Actor.h&amp;quot; #include &amp;quot;FloatingActor.generated.h&amp;quot; DECLARE_LOG_CATEGORY_EXTERN(YourLog, Log, All);  cpp文件中加入：
#include &amp;quot;FirstProject.h&amp;quot; #include &amp;quot;FloatingActor.h&amp;quot; DEFINE_LOG_CATEGORY(YourLog);  使用
UE_LOG(YourLog, Warning, TEXT(&amp;quot;Test UE_LOG %d&amp;quot;), rand());  三种方式的输出结果 Does something LogTemp: 1111 LogTemp: Warning: 1111（黄色）  </description>
    </item>
    
    <item>
      <title>[UE4][C&#43;&#43;]不调用父类BeginDestroy()会导致的崩溃问题</title>
      <link>http://www.dawnarc.com/2016/11/ue4c--%E4%B8%8D%E8%B0%83%E7%94%A8%E7%88%B6%E7%B1%BBbegindestroy%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%9A%84%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 01 Nov 2016 23:23:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/11/ue4c--%E4%B8%8D%E8%B0%83%E7%94%A8%E7%88%B6%E7%B1%BBbegindestroy%E4%BC%9A%E5%AF%BC%E8%87%B4%E7%9A%84%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/</guid>
      <description>出现以下异常的原因是：重写了BeginDestroy()函数但没有在其内部执行Super::BeginDestroy()。
Fatal error: [File:D:\Build\++UE4+Release-4.13+Compile\Sync\Engine\Source\Runtime\CoreUObject\Private\UObject\Obj.cpp] [Line: 742] HPlayerController None.None:None.HPlayerController_0 failed to route BeginDestroy UE4Editor_Core!FDebug::AssertFailed() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\private\misc\outputdevice.cpp:421] UE4Editor_CoreUObject!UObject::ConditionalBeginDestroy() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\coreuobject\private\uobject\obj.cpp:742] UE4Editor_CoreUObject!CollectGarbageInternal() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\coreuobject\private\uobject\garbagecollection.cpp:1281] UE4Editor_CoreUObject!CollectGarbage() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\coreuobject\private\uobject\garbagecollection.cpp:1320] UE4Editor_UnrealEd!UEditorEngine::EndPlayMap() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\unrealed\private\playlevel.cpp:408] UE4Editor_LevelEditor!FLevelViewportLayout::~FLevelViewportLayout() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\leveleditor\private\levelviewportlayout.cpp:145] UE4Editor_LevelEditor!FLevelViewportLayout2x2::`scalar deleting destructor&#39;() UE4Editor_LevelEditor!FLevelViewportTabContent::~FLevelViewportTabContent() UE4Editor_LevelEditor!SharedPointerInternals::TReferenceControllerWithDeleter&amp;lt;FLevelViewportTabContent,SharedPointerInternals::DefaultDeleter&amp;lt;FLevelViewportTabContent&amp;gt; &amp;gt;::DestroyObject() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\public\templates\sharedpointerinternals.h:104] UE4Editor_LevelEditor!SViewportsOverlay::~SViewportsOverlay() UE4Editor_LevelEditor!SViewportsOverlay::`scalar deleting destructor&#39;() UE4Editor_SlateCore!FSimpleSlot::~FSimpleSlot() UE4Editor_SlateCore!SCompoundWidget::~SCompoundWidget() UE4Editor_Slate!SBorder::`vector deleting destructor&#39;() UE4Editor_SlateCore!TIndirectArray&amp;lt;SOverlay::FOverlaySlot,FDefaultAllocator&amp;gt;::DestructAndFreeItems() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\public\containers\array.h:3474] UE4Editor_SlateCore!SOverlay::~SOverlay() UE4Editor_Slate!SOverlay::`scalar deleting destructor&#39;() UE4Editor_SlateCore!TIndirectArray&amp;lt;SBoxPanel::FSlot,FDefaultAllocator&amp;gt;::DestructAndFreeItems() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\public\containers\array.h:3474] UE4Editor_SlateCore!SBoxPanel::~SBoxPanel() UE4Editor_Slate!SVerticalBox::`scalar deleting destructor&#39;() UE4Editor_SlateCore!FSimpleSlot::~FSimpleSlot() UE4Editor_SlateCore!SCompoundWidget::~SCompoundWidget() UE4Editor_Slate!SDockingTabStack::`vector deleting destructor&#39;() UE4Editor_SlateCore!FSlotBase::~FSlotBase() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\slatecore\private\slotbase.cpp:34] UE4Editor_Slate!TIndirectArray&amp;lt;SSplitter::FSlot,FDefaultAllocator&amp;gt;::DestructAndFreeItems() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\public\containers\array.h:3474] UE4Editor_Slate!SSplitter::~SSplitter() UE4Editor_Slate!SSplitter::`vector deleting destructor&#39;() UE4Editor_SlateCore!FSimpleSlot::~FSimpleSlot() UE4Editor_SlateCore!SCompoundWidget::~SCompoundWidget() UE4Editor_Slate!SDockingSplitter::`vector deleting destructor&#39;() UE4Editor_SlateCore!</description>
    </item>
    
    <item>
      <title>[UE4][C&#43;&#43;]隐藏物体的时候如何将其所有子对象也隐藏</title>
      <link>http://www.dawnarc.com/2016/10/ue4c--%E9%9A%90%E8%97%8F%E7%89%A9%E4%BD%93%E7%9A%84%E6%97%B6%E5%80%99%E5%A6%82%E4%BD%95%E5%B0%86%E5%85%B6%E6%89%80%E6%9C%89%E5%AD%90%E5%AF%B9%E8%B1%A1%E4%B9%9F%E9%9A%90%E8%97%8F/</link>
      <pubDate>Tue, 25 Oct 2016 23:25:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4c--%E9%9A%90%E8%97%8F%E7%89%A9%E4%BD%93%E7%9A%84%E6%97%B6%E5%80%99%E5%A6%82%E4%BD%95%E5%B0%86%E5%85%B6%E6%89%80%E6%9C%89%E5%AD%90%E5%AF%B9%E8%B1%A1%E4%B9%9F%E9%9A%90%E8%97%8F/</guid>
      <description>keywords: SetActorHiddenInGame、Children、Child、Batch
设置MeshComponent的ToggleVisibility为true，默认为false。这样每当设置当前Actor的visibility的时候，附加在其上的所有child也都会同时显示或隐藏。
Actor-&amp;gt;GetStaticMeshComponent()-&amp;gt;ToggleVisibility(true);  完整示例：
MeshActor-&amp;gt;SetActorHiddenInGame(true); MeshActor-&amp;gt;GetStaticMeshComponent()-&amp;gt;ToggleVisibility(true);  注意： 隐藏子对象只对附加在其上（执行过AttachTo）的子对象有效。另外在编辑器中对某对象右键-》AttachTo或者直接拖拽到某个对象下，这样的子对象也是受ToggleVisibility影响的。
MeshComponent中类似函数还有ToggleActive()</description>
    </item>
    
    <item>
      <title>[UE4]场景中Actor名字与详细信息面板中的Name不一致的问题</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E5%9C%BA%E6%99%AF%E4%B8%ADactor%E5%90%8D%E5%AD%97%E4%B8%8E%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF%E9%9D%A2%E6%9D%BF%E4%B8%AD%E7%9A%84name%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 25 Oct 2016 23:10:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E5%9C%BA%E6%99%AF%E4%B8%ADactor%E5%90%8D%E5%AD%97%E4%B8%8E%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF%E9%9D%A2%E6%9D%BF%E4%B8%AD%E7%9A%84name%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>比如这种情况，场景对象的Details面板中，显示name和ID Name不一致，在场景中多次copy和delete对象后，就容易出现这种情况。 解决办法： 在Details面板中重新修改一次Name。
  </description>
    </item>
    
    <item>
      <title>[UE4]HUD的Canvas变量为NULL的问题</title>
      <link>http://www.dawnarc.com/2016/10/ue4hud%E7%9A%84canvas%E5%8F%98%E9%87%8F%E4%B8%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 24 Oct 2016 23:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4hud%E7%9A%84canvas%E5%8F%98%E9%87%8F%E4%B8%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>AHUD中的成员变量Canvas只在PostRender()事件中有效，离开此函数后就会被引擎置空。 要想使用HUD的Canvas，必须重写HUD的两个函数之一：
/** PostRender is the main draw loop. */ virtual void PostRenderFor(); /** The Main Draw loop for the hud. Gets called before any messaging. Should be subclassed */ virtual void DrawHUD();  其中DrawHUD为HUD独有的函数，而PostRender是所有Actor都有函数。 另外注意：PostRenderFor()不是重写了就会触发，还需要执行AHUD::AddPostRenderedActor()，将需要触发的Actor加入PostRenderActors数组中。
Canvas的引擎源码注释：
protected: /** Canvas to Draw HUD on. Only valid during PostRender() event. */ UPROPERTY() UCanvas* Canvas;  </description>
    </item>
    
    <item>
      <title>[UE4]TMap使用Struct当作key时需要重载的操作符</title>
      <link>http://www.dawnarc.com/2016/10/ue4tmap%E4%BD%BF%E7%94%A8struct%E5%BD%93%E4%BD%9Ckey%E6%97%B6%E9%9C%80%E8%A6%81%E9%87%8D%E8%BD%BD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%AC%A6/</link>
      <pubDate>Sun, 23 Oct 2016 17:20:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4tmap%E4%BD%BF%E7%94%A8struct%E5%BD%93%E4%BD%9Ckey%E6%97%B6%E9%9C%80%E8%A6%81%E9%87%8D%E8%BD%BD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%AC%A6/</guid>
      <description>定义struct：
struct FMyStruct { // String which identifies our key FString UniqueID; // Some state which doesn&#39;t affect struct identity float SomeFloat; explicit FMyStruct(float InFloat) : UniqueID (FGuid::NewGuid().ToString()) , SomeFloat(InFloat) { } }; template &amp;lt;typename ValueType&amp;gt; struct TMyStructMapKeyFuncs : BaseKeyFuncs&amp;lt; TPair&amp;lt;FMyStruct, ValueType&amp;gt;, FString &amp;gt; { private: typedef BaseKeyFuncs&amp;lt; TPair&amp;lt;FMyStruct, ValueType&amp;gt;, FString &amp;gt; Super; public: typedef typename Super::ElementInitType ElementInitType; typedef typename Super::KeyInitType KeyInitType; static KeyInitType GetSetKey(ElementInitType Element) { return Element.Key.UniqueID; } static bool Matches(KeyInitType A, KeyInitType B) { return A.</description>
    </item>
    
    <item>
      <title>[Windows]最大化最小化窗口化的快捷键</title>
      <link>http://www.dawnarc.com/2016/10/windows%E6%9C%80%E5%A4%A7%E5%8C%96%E6%9C%80%E5%B0%8F%E5%8C%96%E7%AA%97%E5%8F%A3%E5%8C%96%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sun, 23 Oct 2016 16:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/windows%E6%9C%80%E5%A4%A7%E5%8C%96%E6%9C%80%E5%B0%8F%E5%8C%96%E7%AA%97%E5%8F%A3%E5%8C%96%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>最小化：Alt + 空格，再按N。
最小化：Alt + 空格，再按X。
还原窗口化：Alt + 空格，再按R。</description>
    </item>
    
    <item>
      <title>[UE4]GetWorldTimerManager().SetTimer()如何传递参数</title>
      <link>http://www.dawnarc.com/2016/10/ue4getworldtimermanager.settimer%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/</link>
      <pubDate>Sat, 22 Oct 2016 17:35:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4getworldtimermanager.settimer%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/</guid>
      <description>回调函数：
UFUNCTION() void MyUsefulFunction(int32 x, float y);  .h
FTimerDelegate TimerDel; FTimerHandle TimerHandle;  .cpp
int32 MyInt = 10; float MyFloat = 20.f; //Binding the function with specific values TimerDel.BindUFunction(this, FName(&amp;quot;MyUsefulFunction&amp;quot;), MyInt, MyFloat); //Calling MyUsefulFunction after 5 seconds without looping GetWorld()-&amp;gt;GetTimerManager().SetTimer(TimerHandle, TimerDel, 5.f, false);  参考自：https://answers.unrealengine.com/questions/165678/using-settimer-on-a-function-with-parameters.html</description>
    </item>
    
    <item>
      <title>[UE4]PointLight点光源的衰减参数</title>
      <link>http://www.dawnarc.com/2016/10/ue4pointlight%E7%82%B9%E5%85%89%E6%BA%90%E7%9A%84%E8%A1%B0%E5%87%8F%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 20 Oct 2016 13:46:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4pointlight%E7%82%B9%E5%85%89%E6%BA%90%E7%9A%84%E8%A1%B0%E5%87%8F%E5%8F%82%E6%95%B0/</guid>
      <description>要想以较小的Intensity（光照强度）来获得较大的光照面积（或者光照亮度），影响的参数有两个
 Attenuation Radius（衰减半径）：衰减半径越大，光照区域越大
 Use Inverse Squared Falloff（是否启用平方反差衰减）：如果启用，则会以真实世界的光照效果来模拟物体与光源距离的不同而光照效果衰减变化的效果。如果不启用，则能增大光照区域。如果场景中有高度雾，开启此属性后，灯光的半径设置的再大，光照范围也不会有明显增大。  参数示例：   效果：   官方文档： https://docs.unrealengine.com/latest/INT/Resources/ContentExamples/Lighting/4_2/index.html
  先知先觉者胜，后知后觉者平，不知不觉者败。</description>
    </item>
    
    <item>
      <title>[UE4]AddToRoot()要与RemoveFromRoot成对出现</title>
      <link>http://www.dawnarc.com/2016/10/ue4addtoroot%E8%A6%81%E4%B8%8Eremovefromroot%E6%88%90%E5%AF%B9%E5%87%BA%E7%8E%B0/</link>
      <pubDate>Wed, 19 Oct 2016 15:33:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4addtoroot%E8%A6%81%E4%B8%8Eremovefromroot%E6%88%90%E5%AF%B9%E5%87%BA%E7%8E%B0/</guid>
      <description>如果对某个UObject执行了AddToRoot()，那么需要在该UObject所属的上级UOject销毁前，执行RemoveFromRoot()，否则当程序退出时，会出现崩溃，崩溃堆栈：
Assertion failed: !IsRooted() [File:d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\coreuobject\public\uobject\UObjectBaseUtility.h] [Line: 135] UE4Editor_Core!FDebug::AssertFailed() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\core\private\misc\outputdevice.cpp:421] UE4Editor_UnrealEd!&amp;lt;lambda_26419e543909ee92ebfb672b1e9c08dc&amp;gt;::operator()() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\unrealed\private\playlevel.cpp:384] UE4Editor_CoreUObject!ForEachObjectWithOuter() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\coreuobject\private\uobject\uobjecthash.cpp:678] UE4Editor_UnrealEd!UEditorEngine::EndPlayMap() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\unrealed\private\playlevel.cpp:380] UE4Editor_UnrealEd!UEditorEngine::Tick() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\unrealed\private\editorengine.cpp:1653] UE4Editor_UnrealEd!UUnrealEdEngine::Tick() [d:\build\++ue4+release-4.13+compile\sync\engine\source\editor\unrealed\private\unrealedengine.cpp:371] UE4Editor!FEngineLoop::Tick() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\launch\private\launchengineloop.cpp:2834] UE4Editor!GuardedMain() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\launch\private\launch.cpp:156] UE4Editor!GuardedMainWrapper() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\launch\private\windows\launchwindows.cpp:126] UE4Editor!WinMain() [d:\build\++ue4+release-4.13+compile\sync\engine\source\runtime\launch\private\windows\launchwindows.cpp:202] UE4Editor!__scrt_common_main_seh() [f:\dd\vctools\crt\vcstartup\src\startup\exe_common.inl:264] kernel32 ntdll  </description>
    </item>
    
    <item>
      <title>[UE4]如何动态修改调整UMG组件的位置坐标(C&#43;&#43;和蓝图)</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E8%B0%83%E6%95%B4umg%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%9D%90%E6%A0%87c--%E5%92%8C%E8%93%9D%E5%9B%BE/</link>
      <pubDate>Tue, 18 Oct 2016 23:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E8%B0%83%E6%95%B4umg%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%9D%90%E6%A0%87c--%E5%92%8C%E8%93%9D%E5%9B%BE/</guid>
      <description>蓝图：   C++：
Cast&amp;lt;UCanvasPanelSlot&amp;gt;( MyBtn-&amp;gt;Slot)-&amp;gt;SetPosition(FVector2D(X, Y));  如果是全屏模式下，单单这一行代码没有问题，但是如果是窗口化模式，那么还需要处理DPI：
// Call this once per-frame, on tick. To avoid re-calculation, or call it when settings / screen res changes. FORCEINLINE void ComputePlacementParams() { // Cache some of the shared parameters GetWorld()-&amp;gt;GetGameViewport()-&amp;gt;GetViewportSize(ViewportSize); ViewportCenter = ViewportSize / 2.f; // Root Panel Data CanvasSize = RootPanel_Ptr-&amp;gt;GetDesiredSize(); Divisor = CanvasSize / ViewportSize; DPIScaling = GetDefault&amp;lt;UUserInterfaceSettings&amp;gt;(UUserInterfaceSettings::StaticClass())-&amp;gt;GetDPIScaleBasedOnSize(FIntPoint(ViewportSize.X, ViewportSize.Y)); } // Called on tick to set location. &#39;IssScreenLocation&#39; is the central position on-screen of where I want the widget.</description>
    </item>
    
    <item>
      <title>[Android NDK]错误log：ExtMediaPlayer-JNI(22104) env-IsInstanceOf fails</title>
      <link>http://www.dawnarc.com/2016/10/android-ndk%E9%94%99%E8%AF%AFlogextmediaplayer-jni22104-env-isinstanceof-fails/</link>
      <pubDate>Mon, 17 Oct 2016 15:35:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/android-ndk%E9%94%99%E8%AF%AFlogextmediaplayer-jni22104-env-isinstanceof-fails/</guid>
      <description>如果你的android app出现以下两种错误log提示，并不影响你的app运行，如果你的app崩溃，可以忽略下面两种log。
10-17 16:59:29.263: E/ExtMediaPlayer-JNI(22104): env-&amp;gt;IsInstanceOf fails 10-17 16:59:29.263: E/MediaPlayer-JNI(22104): JNIMediaPlayerFactory: bIsQCMediaPlayerPresent 0 10-17 16:59:29.263: E/ExtMediaPlayer-JNI(22104): env-&amp;gt;IsInstanceOf fails 10-17 16:59:29.263: E/MediaPlayer-JNI(22104): JNIMediaPlayerFactory: bIsQCMediaPlayerPresent 0 10-18 00:25:40.894: E/MediaPlayer(28634): stop called in state 1 10-18 00:25:40.894: E/MediaPlayer(28634): error (-38, 0) 10-18 00:25:40.903: E/MediaPlayer(28634): Error (-38,0)  这两个错误log的具体原因不清楚，第一个貌似和权限相关。</description>
    </item>
    
    <item>
      <title>[UE4]Shipping版本中开启UE_LOG的注意事项</title>
      <link>http://www.dawnarc.com/2016/10/ue4shipping%E7%89%88%E6%9C%AC%E4%B8%AD%E5%BC%80%E5%90%AFue_log%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Sun, 16 Oct 2016 01:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4shipping%E7%89%88%E6%9C%AC%E4%B8%AD%E5%BC%80%E5%90%AFue_log%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description> 比如UE4工程的C++代码中有如下log打印语句：
UE_LOG(LogTemp, Display, TEXT(&amp;quot;aaaaaaa&amp;quot;));  我们希望这句话在Android Device Monitor中能也能够打印出来，默认情况下，需要在将设备的Config设置为DebugGame或者Development，Shipping下则不会打印。
  如果想在Shipping版本中开启Log，则需要在Build.cs中添加：
Definitions.Add(&amp;quot;USE_LOGGING_IN_SHIPPING&amp;quot;);  或者
UEBuildConfiguration.bUseLoggingInShipping = true;  VisualStudio中查看UE4 log 如果要查看VS命令行的UE4相关log，需要Debug模式（VS的Debug，即F5，不是UE4的DebugGame） </description>
    </item>
    
    <item>
      <title>[Android NDK]Android.mk missing separator.Stop</title>
      <link>http://www.dawnarc.com/2016/10/android-ndkandroid.mk-missing-separator.stop/</link>
      <pubDate>Sat, 15 Oct 2016 15:30:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/android-ndkandroid.mk-missing-separator.stop/</guid>
      <description> android NDK编译代码时，命令行提示错误：
jni/Android.mk:21: *** missing separator. Stop.
原因有以下几点： 1，$符号之前必须有一个空格，不能跟前面的字符连在一起。如果$是该行的第一个字符，前面可以不用空格。 例子（正常）：
LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS)  错误写法：
LOCAL_PATH :=$(call my-dir) include$(CLEAR_VARS)  2，每行结尾处不能有空格。 例子（正常）：
COMPILER_SRC_FILES := \  错误写法：
COMPILER_SRC_FILES := \  </description>
    </item>
    
    <item>
      <title>[Android NDK]STL linking issues (bug)</title>
      <link>http://www.dawnarc.com/2016/10/android-ndkstl-linking-issues-bug/</link>
      <pubDate>Sat, 15 Oct 2016 02:24:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/android-ndkstl-linking-issues-bug/</guid>
      <description>NDK 1.2之后的版本已修复此bug，1.2及1.2之前的版本存在这个问题。但1.2之后的版本不再支持GCC。
原文： http://boguscoder.blogspot.jp/2013/08/android-ndk-stl-linking-issues-bug.html
ld.exe: libmoduleA.a(moduleA.o): in function std::priv::_String_base&amp;gt;::_M_allocate_block(unsigned int):/sources/cxx-stl/stlport/stlport/stl/_alloc.h:158: error: undefined reference to &amp;lsquo;std::_node_alloc::_M_allocate(unsigned int&amp;amp;)&amp;rsquo; ld.exe: libmoduleA.a(moduleA.o): in function std::priv::_String_base&amp;gt;::_M_allocate_block(unsigned int):/sources/cxx-stl/stlport/stlport/stl/_string.c:600: error: undefined reference to &amp;lsquo;std:stl_throw_length_error(char const*)&amp;rsquo; ld.exe: libmoduleA.a(moduleA.o): in function functionA():/sources/cxx-stl/stlport/stlport/stl/_alloc.h:161: error: undefined reference to &amp;lsquo;std::node_alloc::_M_deallocate(void*, unsigned int)&amp;lsquo;collect2: ld returned 1 exit status
Android.mk中添加库libstlport_static.a：
LOCAL_LDLIBS := -lmoduleA \ &amp;lt;NDK_PATH&amp;gt;/libstlport_static.a  如果是UE4工程编译Android，到android-ndk-r10e\sources\cxx-stl\stlport\libs\armeabi\下拷贝一个libstlport_static.a到你工程的库文件目录下即可。</description>
    </item>
    
    <item>
      <title>[Android NDK] Link static library to your JNI library</title>
      <link>http://www.dawnarc.com/2016/10/android-ndk-link-static-library-to-your-jni-library/</link>
      <pubDate>Sat, 15 Oct 2016 01:09:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/android-ndk-link-static-library-to-your-jni-library/</guid>
      <description>http://blog.marcingil.com/android-ndk-link-static-library-to-your-jni-library/
When you&amp;rsquo;re developing an application that needs to use a custom, native precompiled library (the .a file) together with your gluing JNI interface maybe you&amp;rsquo;re wondering how to link it. It&amp;rsquo;s fairly simple and you can even make it target architecture aware (separate precompiled libraries for arm, arm-v7a, x86). In your module (I&amp;rsquo;m using Android Studio) you should have a jnidirectory, like this:
project / + module + src + main + jni # JNI source files here and other native sources here | Android.</description>
    </item>
    
    <item>
      <title>[Android NDK]fatal error &#39;backward_warning.h&#39; file not found</title>
      <link>http://www.dawnarc.com/2016/10/android-ndkfatal-error-backward_warning.h-file-not-found/</link>
      <pubDate>Sat, 15 Oct 2016 01:09:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/android-ndkfatal-error-backward_warning.h-file-not-found/</guid>
      <description>android中使用hash_map时报错： fatal error: &#39;backward_warning.h&#39; file not found
解决办法： Android.mk添加宏定义
LOCAL_CFLAGS := -D_GLIBCXX_PERMIT_BACKWARD_HASH  如果是UE4项目编译android版本，在工程的Build.cs中添加：
Definitions.Add(&amp;quot;_GLIBCXX_PERMIT_BACKWARD_HASH&amp;quot;);  </description>
    </item>
    
    <item>
      <title>[UE4]SpawnEmitterAttached创建出来的粒子特效体积被放大的问题</title>
      <link>http://www.dawnarc.com/2016/10/ue4spawnemitterattached%E5%88%9B%E5%BB%BA%E5%87%BA%E6%9D%A5%E7%9A%84%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E4%BD%93%E7%A7%AF%E8%A2%AB%E6%94%BE%E5%A4%A7%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 14 Oct 2016 21:54:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4spawnemitterattached%E5%88%9B%E5%BB%BA%E5%87%BA%E6%9D%A5%E7%9A%84%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E4%BD%93%E7%A7%AF%E8%A2%AB%E6%94%BE%E5%A4%A7%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题表现： 使用UGameplayStatics::SpawnEmitterAttached创建的粒子尺寸大小异常，变得非常大，比SpawnEmitterAtLocation()创建出来的粒子大差不多六七倍。
解决版本：
UParticleSystemComponent::bAbsoluteScale = true;  例子：
UParticleSystemComponent* PSC = UGameplayStatics::SpawnEmitterAttached(ParticleTemplate, Unit-&amp;gt;GetMesh()); PSC-&amp;gt;SetAbsolute(false, false, true);  </description>
    </item>
    
    <item>
      <title>[UE4]如何隐藏Actor</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E9%9A%90%E8%97%8Factor/</link>
      <pubDate>Wed, 12 Oct 2016 20:21:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E9%9A%90%E8%97%8Factor/</guid>
      <description>三种方式：
1，MyActor-&amp;gt;bHidden = true;
2, MyActor-&amp;gt;GetMesh()-&amp;gt;SetVisibility(false);
3，MyActor-&amp;gt;SetActorHiddenInGame(true);</description>
    </item>
    
    <item>
      <title>[UE4]如何禁用角色的刚体碰撞检测Collision</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E7%A6%81%E7%94%A8%E8%A7%92%E8%89%B2%E7%9A%84%E5%88%9A%E4%BD%93%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8Bcollision/</link>
      <pubDate>Wed, 12 Oct 2016 20:15:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E7%A6%81%E7%94%A8%E8%A7%92%E8%89%B2%E7%9A%84%E5%88%9A%E4%BD%93%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8Bcollision/</guid>
      <description>通常的做法是：
MyCharacter-&amp;gt;SetActorEnableCollision(false);  这样设置以后，角色就可以忽视一切障碍物或者刚体来进行移动了。
另外一种方式：
MyCharacter-&amp;gt;GetMesh()-&amp;gt;SetCollisionEnabled(ECollisionEnabled::NoCollision);  这种第二种方式，不会禁用CollisionComponent的碰撞（个人理解，具体未测试）。</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]for循环中的size参数优化问题</title>
      <link>http://www.dawnarc.com/2016/10/c--for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84size%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 11 Oct 2016 22:11:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/c--for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84size%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/</guid>
      <description>之前网上一直有这么一条for循环优化建议： 将size提到第一个分号前，这样可以提高循环的效率，例如：
std::vector&amp;lt;int&amp;gt; aaa; for (size_t i = 0, size = aaa.size(); i &amp;lt; size; i++) { printf(&amp;quot;bbb&amp;quot;); }  这个如果是很多年前，应该是有道理的，但是现在的编译器足够聪明，很多看起不够优化的代码，编译器会帮你处理。 以下是在VS2015下的汇编代码，结果是：size不前提反而可以节省两次mov指令。
size放在第一个分号后：
 for (size_t i = 0; i &amp;lt; aaa.size(); i++) 00007FF7629E3147 mov qword ptr [rbp+48h],0 00007FF7629E314F jmp _20161011+3Ch (07FF7629E315Ch) 00007FF7629E3151 mov rax,qword ptr [rbp+48h] 00007FF7629E3155 inc rax 00007FF7629E3158 mov qword ptr [rbp+48h],rax 00007FF7629E315C lea rcx,[aaa] 00007FF7629E3160 call std::vector&amp;lt;int,std::allocator&amp;lt;int&amp;gt; &amp;gt;::size (07FF7629E16BDh) 00007FF7629E3165 cmp qword ptr [rbp+48h],rax 00007FF7629E3169 jae _20161011+59h (07FF7629E3179h)  size提到第一个分号前：</description>
    </item>
    
    <item>
      <title>[UE4]如何替换角色Mesh上的Material材质</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E6%9B%BF%E6%8D%A2%E8%A7%92%E8%89%B2mesh%E4%B8%8A%E7%9A%84material%E6%9D%90%E8%B4%A8/</link>
      <pubDate>Tue, 11 Oct 2016 02:21:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E5%A6%82%E4%BD%95%E6%9B%BF%E6%8D%A2%E8%A7%92%E8%89%B2mesh%E4%B8%8A%E7%9A%84material%E6%9D%90%E8%B4%A8/</guid>
      <description>.h (located in pawn header file and assigned in Blueprint editor)
UPROPERTY(EditAnywhere) TArray&amp;lt;UMaterialInterface*&amp;gt; Materials;  .h (located in pawn manager responsible for spawning them)
TSubclassOf&amp;lt;class AMyPawn&amp;gt; PawnClass;  .cpp
FVector spawnLocation = FVector(0.0f, 0.0f, 0.0f); FRotator spawnRotation = FRotator::ZeroRotator; AMyPawn* pawn = GetWorld()-&amp;gt;SpawnActor&amp;lt;AMyPawn&amp;gt;(PawnClass, spawnLocation, spawnRotation); if (pawn != nullptr) { AMyPawn* defaultPawn = PawnClass.GetDefaultObject(); int32 materialCount = defaultPawn-&amp;gt;Materials.Num(); int m = FMath::RandRange(0, materialCount - 1); const TArray&amp;lt;UActorComponent*&amp;gt;&amp;amp; theComponents = pawn-&amp;gt;GetComponents(); int32 componentCount = theComponents.</description>
    </item>
    
    <item>
      <title>随机数、随机数种子</title>
      <link>http://www.dawnarc.com/2016/10/%E9%9A%8F%E6%9C%BA%E6%95%B0%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%A7%8D%E5%AD%90/</link>
      <pubDate>Mon, 10 Oct 2016 19:11:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/%E9%9A%8F%E6%9C%BA%E6%95%B0%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%A7%8D%E5%AD%90/</guid>
      <description>原文：http://www.cnblogs.com/ovliverlin/archive/2008/03/17/1109106.html
在计算机中并没有一个真正的随机数发生器，但是可以做到使产生的数字重复率很低，这样看起来好象是真正的随机数，实现这一功能的程序叫伪随机数发生器。
有关如何产生随机数的理论有许多，如果要详细地讨论，需要厚厚的一本书的篇幅。不管用什么方法实现随机数发生器，都必须给它提供一个名为“种子”的初始值。而且这个值最好是随机的，或者至少这个值是伪随机的。“种子”的值通常是用快速计数寄存器或移位寄存器来生成的。
下面讲一讲在C语言里所提供的随机数发生器的用法。现在的C编译器都提供了一个基于ANSI标准的伪随机数发生器函数，用来生成随机数。它们就是rand()和srand()函数。这二个函数的工作过程如下：
1) 首先给srand()提供一个种子，它是一个unsigned int类型，其取值范围从0~65535；
2) 然后调用rand()，它会根据提供给srand()的种子值返回一个随机数(在0到32767之间)
3) 根据需要多次调用rand()，从而不间断地得到新的随机数；
4) 无论什么时候，都可以给srand()提供一个新的种子，从而进一步“随机化”rand()的输出结果。
这个过程看起来很简单，问题是如果你每次调用srand()时都提供相同的种子值，那么，你将会得到相同的随机数序列，这时看到的现象是没有随机数，而每一次的数都是一样的了。例如，在以17为种子值调用srand()之后，在首次调用rand()时，得到随机数94。在第二次和第三次调用rand()时将分别得到26602和30017，这些数看上去是很随机的(尽管这只是一个很小的数据点集合)，但是，在你再次以17为种子值调用srand()后，在对于rand()的前三次调用中，所得的返回值仍然是在对94，26602，30017，并且此后得到的返回值仍然是在对rand()的第一批调用中所得到的其余的返回值。因此只有再次给srand()提供一个随机的种子值，才能再次得到一个随机数。</description>
    </item>
    
    <item>
      <title>[UE4]粒子发射器的碰撞事件(Particle Collision Event)</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E5%8F%91%E5%B0%84%E5%99%A8%E7%9A%84%E7%A2%B0%E6%92%9E%E4%BA%8B%E4%BB%B6particle-collision-event/</link>
      <pubDate>Mon, 10 Oct 2016 11:32:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E5%8F%91%E5%B0%84%E5%99%A8%E7%9A%84%E7%A2%B0%E6%92%9E%E4%BA%8B%E4%BB%B6particle-collision-event/</guid>
      <description>Keyword：Particle、Emitter、Collision、Event、Dispathch、Blueprint、C++
先保证粒子发射器中有碰撞检测事件：类型为Collision的Event Generator   蓝图方式： Spawn创建粒子之后，绑定事件OnParticleCollide，然后新建一个自定义事件（图中命令为CustomEvent_0），然后就可以在这个事件中获取碰撞的坐标等信息了。   注意：这里的CumtomEvent_0无法单独创建出来，否则就是一个没有任何参数的普通custom event，必须从Bind Event to OnParticleCollide节点中拖拽出来   C++方式： UParticleSystemComponent* PSC = UGameplayStatics::SpawnEmitterAtLocation(MyGameMode-&amp;gt;GetWorld(), SkillParticle_1004, Location, FRotator::ZeroRotator, true); FScriptDelegate Delegate; Delegate.BindUFunction(MyCharacter, &amp;quot;OnParticleHit&amp;quot;); PSC-&amp;gt;OnParticleCollide.Add(Delegate);  碰撞回调事件的函数签名：
UFUNCTION() void OnParticleHit(FName EventName, float EmitterTime, int32 ParticleTime, FVector Location, FVector Velocity, FVector Direction, FVector Normal, FName BoneName, UPhysicalMaterial* PhysMat);  其中的Location就是撞击的坐标</description>
    </item>
    
    <item>
      <title>[UE4]Creating Volumetric Fog effect</title>
      <link>http://www.dawnarc.com/2016/10/ue4creating-volumetric-fog-effect/</link>
      <pubDate>Sun, 09 Oct 2016 15:20:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4creating-volumetric-fog-effect/</guid>
      <description>Creating Volumetric Fog effect
https://answers.unrealengine.com/questions/221791/creating-volumetric-fog-effect.html</description>
    </item>
    
    <item>
      <title>[UE4]Animation Notifications (Notifies)(动画的事件通知)</title>
      <link>http://www.dawnarc.com/2016/10/ue4animation-notifications-notifies%E5%8A%A8%E7%94%BB%E7%9A%84%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5/</link>
      <pubDate>Sun, 09 Oct 2016 15:05:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4animation-notifications-notifies%E5%8A%A8%E7%94%BB%E7%9A%84%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5/</guid>
      <description>keyword: AnimNotify、Animation Notify
Animation Notifications (Notifies)
https://docs.unrealengine.com/latest/INT/Engine/Animation/Sequences/Notifies/
ue4中动画通知的两种方式（蓝图和C++）
http://blog.csdn.net/yangxuan0261/article/details/52097917</description>
    </item>
    
    <item>
      <title>[UE4]粒子特效碰撞地面无法触发碰撞事件的问题</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E7%A2%B0%E6%92%9E%E5%9C%B0%E9%9D%A2%E6%97%A0%E6%B3%95%E8%A7%A6%E5%8F%91%E7%A2%B0%E6%92%9E%E4%BA%8B%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 09 Oct 2016 01:22:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E7%A2%B0%E6%92%9E%E5%9C%B0%E9%9D%A2%E6%97%A0%E6%B3%95%E8%A7%A6%E5%8F%91%E7%A2%B0%E6%92%9E%E4%BA%8B%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>Keyword：UE4、Particle、Emitter、Collision、Hit、Event、Floor
问题表现：粒子特效中有个事件类型为collision的Event Generator
  但是当粒子发生碰撞时（比如撞击地面时），并没有触发此Event。原因可能如下：
1， 碰撞的物体没有设置为static   2， 碰撞方式没有设置default或者BlockAll   3， 如果是4.15之前的版本，修改Config/DefaultEngine.ini中[/Script/Engine.Engine]节点下的参数bUseFixedFrameRate设置为true，删掉这个参数或者设为false即可：
bUseFixedFrameRate=True
这是UE4的一个bug，在4.15版本修复了：https://issues.unrealengine.com/issue/UE-37210</description>
    </item>
    
    <item>
      <title>[UE4]粒子系统的事件(Particle Event)</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BA%8B%E4%BB%B6particle-event/</link>
      <pubDate>Sat, 08 Oct 2016 17:56:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BA%8B%E4%BB%B6particle-event/</guid>
      <description>粒子发射器中的两个Module：Event Generator和EventRcvr Spawn https://wiki.unrealengine.com/Particle_Events</description>
    </item>
    
    <item>
      <title>[UE4]用DrawDebugLine绘制矩形</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%94%A8drawdebugline%E7%BB%98%E5%88%B6%E7%9F%A9%E5%BD%A2/</link>
      <pubDate>Sat, 08 Oct 2016 01:02:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%94%A8drawdebugline%E7%BB%98%E5%88%B6%E7%9F%A9%E5%BD%A2/</guid>
      <description>自己实现的用DrawDebugLine绘制矩形的函数：
/* Draw rectangle use line @CenterLoc, location of rectangle center @Rot, rotation of rectangle @Angle, angle of diagonal @DiagonalHalve, half of diagonal lenght. */ void DrawDebugTrangle(const FVector&amp;amp; CenterLoc, const FRotator&amp;amp; Rot, float Angle, float DiagonalHalve) { FVector Point1 = CenterLoc + (Rot + FRotator(0.f, Angle, 0.f)).Vector() * DiagonalHalve; FVector Point2 = CenterLoc + (Rot + FRotator(0.f, 90.f + (90.f - Angle), 0.f)).Vector() * DiagonalHalve; FVector Point3 = CenterLoc + (Rot + FRotator(0.</description>
    </item>
    
    <item>
      <title>[UE4]DrawDebugLine的注意事项</title>
      <link>http://www.dawnarc.com/2016/10/ue4drawdebugline%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Fri, 07 Oct 2016 01:05:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4drawdebugline%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>有时候调用DrawDebugLine划线，在场景中看不见：
DrawDebugLine(GameMode-&amp;gt;GetWorld(), StartLocation, EndLocation, FColor::Red);  代码上没有任何问题，如果还是看不见，则可能是天光太强，导致线条没有渲染出来。
解决办法： 按F2关掉天光，或者按F1开启mesh透视模式</description>
    </item>
    
    <item>
      <title>[UE4][粒子系统]如何设置粒子在场景中的Rotation</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E5%9C%A8%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84rotation/</link>
      <pubDate>Thu, 06 Oct 2016 18:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E5%9C%A8%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84rotation/</guid>
      <description>如果想在游戏场景中控制粒子特效的Rotation，需要勾选发射器Required组件中的Use Local Space选项，否则无论设置rotation值多少，其旋转角度始终是默认的初始值。 （查看大图，请复制图片链接在新窗口中打开）
  </description>
    </item>
    
    <item>
      <title>[UE4]用C&#43;&#43;或蓝图来动态设置粒子系统的相关属性</title>
      <link>http://www.dawnarc.com/2016/10/ue4%E7%94%A8c--%E6%88%96%E8%93%9D%E5%9B%BE%E6%9D%A5%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Wed, 05 Oct 2016 13:58:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4%E7%94%A8c--%E6%88%96%E8%93%9D%E5%9B%BE%E6%9D%A5%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</guid>
      <description>蓝图方式 1，我拿StartContent中官方提供的火焰特效来举例，在蓝图脚本中来修改火焰的颜色   2，打开粒子编辑界面，这是粒子发射器中设置好的颜色参数   3，修改：Color Over Lif模组 –》 Color Over Life参数 –》Distribution参数 –》 Distribution Vector Particle Parameter   4，为这个参数起一个当前粒子里面的唯一名字。当然你如果希望多个参数共享一个设置，那么参数也可以同名   5，因为这个特效中和颜色相关的发射器有两个，所以我们这两个发射器中的参数名字设置为同名：ParamFireColor   6，设置参数模式为 DPM Direct     7，然后将粒子拖入场景中进行编辑。当然你可以通过Spawn在运行时动态生成，但是这里为了方便直接场景中放一个静态的   8，添加一个Instance Parameters参数   9，设置参数名为之前定好的ParamFireColor，类型选择Vector Random   10，启动运行程序，然后我们在游戏运行时动态修改。先找到粒子对象   11，然后在属性面板中，编辑之前添加的参数ParamFireColor，这里我们先改为之前的默认数值     12，这时修改颜色，场景中的火焰也会即时生效了。这些修改的数值不会保存，因为这是即时数据。     补充内容：用蓝图动态生成并设置颜色方式，按下键盘E时生成火焰并将颜色设置为蓝色     因为这里没有写随机颜色的逻辑，所以看起来很单薄。
C++方式 C++方式也需要上面蓝图的前面步骤，从第7步开始，后面的步骤都不需要了。 具体代码如下：
UParticleSystemComponent* PSC = UGameplayStatics::SpawnEmitterAtLocation(GameMode-&amp;gt;GetWorld(), EmitterTemplate, Location, FRotator::ZeroRotator, true); PSC-&amp;gt;SetColorParameter(FName(TEXT(&amp;quot;ParamFireColor&amp;quot;)), FLinearColor::Red); FLinearColor OutColor; PSC-&amp;gt;GetColorParameter(FName(TEXT(&amp;quot;ParamFireColor &amp;quot;)), OutColor);  注意：要Get参数之前，必须先Set一次，否则无法Get。</description>
    </item>
    
    <item>
      <title>[Windows]win10禁止自动更新</title>
      <link>http://www.dawnarc.com/2016/10/windowswin10%E7%A6%81%E6%AD%A2%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Sun, 02 Oct 2016 21:10:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/windowswin10%E7%A6%81%E6%AD%A2%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</guid>
      <description>首先，按Win键+R键调出运行，输入“gpedit.msc”点击“确定”，调出“本地组策略编辑器”。
依次展开&amp;rdquo;计算机配置&amp;rdquo;，&amp;rdquo;管理模板&amp;rdquo; ，&amp;rdquo;windows组件&amp;rdquo; ，&amp;rdquo;windows更新 &amp;ldquo;。
在右面找到“配置自动更新”，并双击。
在配置窗口上按1-3的顺序选择“已禁用”，点击“应用”，“确定”。
关掉“本地组策略编辑器”，重启电脑。</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]error C2034  type of bit field too small for number of bits</title>
      <link>http://www.dawnarc.com/2016/10/c--error-c2034--type-of-bit-field-too-small-for-number-of-bits/</link>
      <pubDate>Sun, 02 Oct 2016 13:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/c--error-c2034--type-of-bit-field-too-small-for-number-of-bits/</guid>
      <description>原文：http://ju.outofmemory.cn/entry/149128
struct A { int x:1; int y:2; int z:31; };  此时是正确的
但是：
struct A { int x:1; int y:2; int z:33; };  此时就会有编译错误：error C2034: &#39;z&#39; : type of bit field too small for number of bits
原文：http://zhidao.baidu.com/question/60696610.html
struct/class定义中在成员后面加冒号“：1”是什么意思？
这是位域操作的表示方法，也就是说后面加上“：1”的意思是这个成员的大小占所定义类型的1 bit，“：2”占2 bit，依次类推。当然大小不能超过所定义类型包含的总bit数。 一个bytes(字节)是8 bit(bit)。例如你的结构中定义的类型是u_char，一个字节，共8bit，最大就不能超过8。 32位机下， short是2字节，共16bit，最大就不能超过16. int是4字节，共32bit，最大就不能超过32. 依次类推。
这样定义比较省空间。例如你上面的结构，定义的变量类型是u_char，是一字节类型，即8bit。 fc_subtype占了4bit，fc_type占2bit,fc_protocol_version占2bit，共8bit，正好是一个字节。 其他八个成员,各占1bit，共8bit，正好也是一个字节。 因此你的结构的大小如果用sizeof（struct frame_control）计算，就是2bytes.</description>
    </item>
    
    <item>
      <title>[UE4]Controller.StopMovement()和MovementComponent.StopMovementImmediately()的区别</title>
      <link>http://www.dawnarc.com/2016/10/ue4controller.stopmovement%E5%92%8Cmovementcomponent.stopmovementimmediately%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 01 Oct 2016 23:46:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/10/ue4controller.stopmovement%E5%92%8Cmovementcomponent.stopmovementimmediately%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>Controller.StopMovement()和MovementComponent.StopMovementImmediately()的区别 前者只执行：
PathFollowingComp-&amp;gt;AbortMove(*this, FPathFollowingResultFlags::MovementStop);  后者先执行：
Velocity = FVector::ZeroVector;  接着再执行：
PathFollowingComp-&amp;gt;AbortMove(*this, FPathFollowingResultFlags::MovementStop);  </description>
    </item>
    
    <item>
      <title>[UE4]如何遍历场景中的所有Actor和Object(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E9%81%8D%E5%8E%86%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89actor%E5%92%8Cobjectc--/</link>
      <pubDate>Thu, 29 Sep 2016 19:43:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E9%81%8D%E5%8E%86%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89actor%E5%92%8Cobjectc--/</guid>
      <description>原文： https://wiki.unrealengine.com/Iterators:_Object_%26_Actor_Iterators,_Optional_Class_Scope_For_Faster_Search
遍历所有SkeletalMeshComponent
for ( TObjectIterator&amp;lt;USkeletalMeshComponent&amp;gt; Itr; Itr; ++Itr ) { // Access the subclass instance with the * or -&amp;gt; operators. USkeletalMeshCompoment *Component = *Itr; ClientMessage(Itr-&amp;gt;GetName()); }  遍历所有StaticMeshActor
for (TActorIterator&amp;lt;AStaticMeshActor&amp;gt; ActorItr(GetWorld()); ActorItr; ++ActorItr) { // Same as with the Object Iterator, access the subclass instance with the * or -&amp;gt; operators. AStaticMeshActor *Mesh = *ActorItr; ClientMessage(ActorItr-&amp;gt;GetName()); ClientMessage(ActorItr-&amp;gt;GetActorLocation().ToString()); }  遍历所有Character
for (TActorIterator&amp;lt;ACharacter&amp;gt; ActorItr(GetWorld()); ActorItr; ++ActorItr) { if (ActorItr-&amp;gt;GetName().</description>
    </item>
    
    <item>
      <title>[UE4]如何查看蓝图中的某个组件(Component)对应的C&#43;&#43;类名字</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E8%93%9D%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E7%BB%84%E4%BB%B6component%E5%AF%B9%E5%BA%94%E7%9A%84c--%E7%B1%BB%E5%90%8D%E5%AD%97/</link>
      <pubDate>Sat, 24 Sep 2016 16:37:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E8%93%9D%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%AA%E7%BB%84%E4%BB%B6component%E5%AF%B9%E5%BA%94%E7%9A%84c--%E7%B1%BB%E5%90%8D%E5%AD%97/</guid>
      <description>右键单击蓝图中的Component，最下方的C++头文件就是该蓝图组件对应的C++ class。
  </description>
    </item>
    
    <item>
      <title>[UE4]粒子系统的移动逻辑编写</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%A7%BB%E5%8A%A8%E9%80%BB%E8%BE%91%E7%BC%96%E5%86%99/</link>
      <pubDate>Tue, 20 Sep 2016 20:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%A7%BB%E5%8A%A8%E9%80%BB%E8%BE%91%E7%BC%96%E5%86%99/</guid>
      <description> keywords：UE4、粒子特效、粒子、Particle、Emitter、移动、Move
1， 先在资源浏览器中新建一个蓝图，类型选择Actor即可     2， 打开actor蓝图，点击右上角的Add Component，类型选择Particle System：   添加之后，默认会添加到DefaultSceneRoot之下：   DefaultSceneRoot我们不需要。鼠标左键按住ParticleSytem节点不放，拖拽到DefaultSceneRoot节点之中，这样DefaultSceneRoot就会被替换为ParticleSystem：   3， 设置ParticleSystem，选择我们做好的粒子特效：   4，添加ProjectileMovement：     5，设置ProjectileMovement参数：设置初始速度和最大速度，如果不需要重力影响，可以将Projectile Gravity Scale设置为0。   ProjectileMovement的速度可以先设置为0，在蓝图事件中对速度进行，逻辑如下（在Actor蓝图中编辑）：   如果碰到Actor无法移动的问题，原因可能如下： 1， static mesh没有设置为Movable。由于我们这里是粒子，所以没有static mesh，如果有，设置如下：   2， 速率Velocity设置太小。所以上面我么对Normalize出来的Vector乘以了300。   </description>
    </item>
    
    <item>
      <title>[UE4]蓝图中如何拆分设置Vector和Rotator中的X、Y、Z</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E4%B8%AD%E5%A6%82%E4%BD%95%E6%8B%86%E5%88%86%E8%AE%BE%E7%BD%AEvector%E5%92%8Crotator%E4%B8%AD%E7%9A%84xyz/</link>
      <pubDate>Tue, 20 Sep 2016 19:11:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E4%B8%AD%E5%A6%82%E4%BD%95%E6%8B%86%E5%88%86%E8%AE%BE%E7%BD%AEvector%E5%92%8Crotator%E4%B8%AD%E7%9A%84xyz/</guid>
      <description>鼠标右键单击Vector的黄色圆圈，弹出菜单选中“Split Struct Pin”   例子2：   如果想将拆分的XYZ变量重新合并成vector，鼠标右键单击“Recombine Struct Pin”   </description>
    </item>
    
    <item>
      <title>[UE4][粒子系统]无延迟的立即播放特效</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%97%A0%E5%BB%B6%E8%BF%9F%E7%9A%84%E7%AB%8B%E5%8D%B3%E6%92%AD%E6%94%BE%E7%89%B9%E6%95%88/</link>
      <pubDate>Sun, 18 Sep 2016 11:59:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%97%A0%E5%BB%B6%E8%BF%9F%E7%9A%84%E7%AB%8B%E5%8D%B3%E6%92%AD%E6%94%BE%E7%89%B9%E6%95%88/</guid>
      <description>Keywords：Warmup Time、no delay、at once、Particle System
默认播放特效时，会有一秒的延迟，如果想让粒子生成后立即播放，需要进行以下设置：
1，点点击例子系统编辑界面最右侧的黑色空闲区域   2，然后在Detail面板中找到Warmup Time参数，修改为1。默认为0   </description>
    </item>
    
    <item>
      <title>[UE4]粒子系统中的Curve曲线中的In Val属性</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84curve%E6%9B%B2%E7%BA%BF%E4%B8%AD%E7%9A%84in-val%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Sun, 18 Sep 2016 02:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84curve%E6%9B%B2%E7%BA%BF%E4%B8%AD%E7%9A%84in-val%E5%B1%9E%E6%80%A7/</guid>
      <description>Color Over Life中Curve属性下的In Val的意思是时间，单位为秒
  </description>
    </item>
    
    <item>
      <title>[UE4]粒子系统中的Ribbon Data</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84ribbon-data/</link>
      <pubDate>Sun, 18 Sep 2016 02:04:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84ribbon-data/</guid>
      <description>keyword: Particle Systems, Ribbon Data
UE4粒子系统的Ribbon Data用法。这个Emitter组件用来制作拖尾效果最佳，比如带尾巴的法术球（魔兽的奥术飞弹）特效。
Creating a Ribbon Emitter：https://www.youtube.com/watch?v=jBUF6at1s1o</description>
    </item>
    
    <item>
      <title>[UE4]动画蓝图中如何获取Character</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E4%B8%AD%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96character/</link>
      <pubDate>Sat, 17 Sep 2016 00:13:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E5%8A%A8%E7%94%BB%E8%93%9D%E5%9B%BE%E4%B8%AD%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96character/</guid>
      <description>Get Owning Actor -&amp;gt; Cast to 自定义类。 其中WarriorCharacter是自定义Character
  </description>
    </item>
    
    <item>
      <title>[UE4]蓝图播放序列帧(UAnimSequence)</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E6%92%AD%E6%94%BE%E5%BA%8F%E5%88%97%E5%B8%A7uanimsequence/</link>
      <pubDate>Fri, 16 Sep 2016 21:58:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E6%92%AD%E6%94%BE%E5%BA%8F%E5%88%97%E5%B8%A7uanimsequence/</guid>
      <description>播放动画Anim的蓝图节点时Play Animation，左侧的判断节点(==)是自己定义的判断Character状态的枚举值，如果是死亡状态，则播放死亡动画。 只要是正常播放UAnimSequence，当播放完毕以后会自动停留在最后一帧，无需手动设置。
注意事项： 1，这里是播放Anim，不是Montage。正常逻辑下，Montage不用手动执行，一般都是通过属性值(Speed)来动态驱动的。 2，Play Animation是在Character对象中才能访问，如果在Character蓝图之外访问，需要先获得Character对象，然后再从Character对象节点中拉出Play Animation节点。
  </description>
    </item>
    
    <item>
      <title>[UE4]播放Montage动画时让动作停留在最后一帧</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E6%92%AD%E6%94%BEmontage%E5%8A%A8%E7%94%BB%E6%97%B6%E8%AE%A9%E5%8A%A8%E4%BD%9C%E5%81%9C%E7%95%99%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E5%B8%A7/</link>
      <pubDate>Thu, 15 Sep 2016 03:12:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E6%92%AD%E6%94%BEmontage%E5%8A%A8%E7%94%BB%E6%97%B6%E8%AE%A9%E5%8A%A8%E4%BD%9C%E5%81%9C%E7%95%99%E5%9C%A8%E6%9C%80%E5%90%8E%E4%B8%80%E5%B8%A7/</guid>
      <description> 三种方式
方式1： 在想要冻结的那一帧内，将SkeletonComponent的GlobalAnimRateScale属性设置为0。 比如想要角色的骨骼定格在第三帧，那么就在动画播放到第三帧的时候将该属性设置为0。
ACharacter::GetMesh()-&amp;gt;GlobalAnimRateScale = 0.f;  方式2: ACharacter::GetMesh()-&amp;gt;bNoSkeletonUpdate = true;  方式3： ACharacter::GetMesh()-&amp;gt;bPauseAnims = true;  注意：正常播放完AnimSequence时，只要不是设置为循环播放，播放完以后会自动停留在最后一帧。只有播放Montage时才需要设置以上属性。
 </description>
    </item>
    
    <item>
      <title>[Windows]TortoiseGit安装程序出错：the installer has encountered an unexpected error the error code is 2503</title>
      <link>http://www.dawnarc.com/2016/09/windowstortoisegit%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%87%BA%E9%94%99the-installer-has-encountered-an-unexpected-error-the-error-code-is-2503/</link>
      <pubDate>Sun, 11 Sep 2016 22:36:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/windowstortoisegit%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%87%BA%E9%94%99the-installer-has-encountered-an-unexpected-error-the-error-code-is-2503/</guid>
      <description> 安装TortoiseGit时提示一下错误：
the installer has encountered an unexpected error the error code is 2503  原因： win8、win10的权限问题
解决办法： 管理员模式下的命令行运行
msiexec /package E:\TortoiseGit-2.2.0.0-64bit.msi  </description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]protobuf中对中文编码与解析</title>
      <link>http://www.dawnarc.com/2016/09/c--protobuf%E4%B8%AD%E5%AF%B9%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 11 Sep 2016 02:43:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/c--protobuf%E4%B8%AD%E5%AF%B9%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E6%9E%90/</guid>
      <description>代码：
std::string str(&amp;quot;笑傲江湖DA&amp;quot;); int Len = str.size(); char* data = new char[Len](); strcpy(data, str.data()); HProtocol::test t1; t1.set_input_str(data); char* buff[1024]; t1.SerializeToArray(buff, 1024); HProtocol::test t2; t2.ParseFromArray(buff, t1.ByteSize()); //最终str3的值依然是str的值 const char* str3 = t2.input_str().data();  </description>
    </item>
    
    <item>
      <title>[UE4]中文字符的FString和wchar_t数组之间的转换</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E7%9A%84fstring%E5%92%8Cwchar_t%E6%95%B0%E7%BB%84%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Sun, 11 Sep 2016 02:41:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E7%9A%84fstring%E5%92%8Cwchar_t%E6%95%B0%E7%BB%84%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
      <description>代码：
FString str(TEXT(&amp;quot;笑傲江湖DA&amp;quot;)); const wchar_t* s1 = *str; int LenW = wcslen(s1); int LenC = LenW * 2; char* buf = new char[LenC + 1](); memcpy(buf, s1, LenC); wchar_t* buf2 = new wchar_t[LenC/2 + 1](); memcpy(buf2, buf, LenC);  </description>
    </item>
    
    <item>
      <title>[UE4]如何获取FString转换后char之后的长度</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96fstring%E8%BD%AC%E6%8D%A2%E5%90%8Echar%E4%B9%8B%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6/</link>
      <pubDate>Sat, 10 Sep 2016 17:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96fstring%E8%BD%AC%E6%8D%A2%E5%90%8Echar%E4%B9%8B%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6/</guid>
      <description>比如用TCHAR_TO_ANSI()将tchar转换为char之后，char的长度如何计算？ 使用FTCHARToANSI::Length()，示例如下：
FTCHARToANSI Convert(*String); Ar-&amp;gt;Serialize((ANSICHAR*)Convert, Convert.Length());  参考自：https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/StringHandling/CharacterEncoding/index.html</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]指针数组以及数组初始化</title>
      <link>http://www.dawnarc.com/2016/09/c--%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%BB%A5%E5%8F%8A%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Sat, 10 Sep 2016 16:48:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/c--%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%BB%A5%E5%8F%8A%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>关键字：C++数组初始化
原文： http://www.cnblogs.com/mywebname/articles/2291540.html
定义：
int *pia = new int[10]; // array of 10 uninitialized ints  此 new 表达式分配了一个含有 10 个 int 型元素的数组，并返回指向该数组第一个元素的指针，此返回值初始化了指针 pia。 在自由存储区中创建的数组对象是没有名字的，只能通过其地址间接地访问堆中的对象。 注意：C++使用new和delete在堆（自由存储区）上分配和释放动态数组。
动态数组初始化： 1.元素只能初始化为元素类型的默认值，而不能像数组变量一样，用初始化列表为数组元素提供各不相同的初值。 2.对于内置数据类型元素的数组，必须使用()来显示指定程序执行初始化操作，否则程序不执行初始化操作：
int *pia = new int[10]; // 每个元素都没有初始化 int *pia2 = new int[10] (); // 每个元素初始化为0  3.类类型元素的数组，则无论是否使用（），都会自动调用其默认构造函数来初始化：
string *psa = new string[10]; // 每个元素调用默认构造函数初始化 string *psa = new string[10](); // 每个元素调用默认构造函数初始化  动态分配空数组： char *cp = new char[0];  之后，可以动态改变cp的维数。</description>
    </item>
    
    <item>
      <title>[UE4]获取UMG text组件中的文本内容</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E8%8E%B7%E5%8F%96umg-text%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9/</link>
      <pubDate>Sat, 10 Sep 2016 00:42:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E8%8E%B7%E5%8F%96umg-text%E7%BB%84%E4%BB%B6%E4%B8%AD%E7%9A%84%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9/</guid>
      <description>直接调用Text属性是获取不到的的：
FText txt = TxtboxCmdInput-&amp;gt;Text;  要调用GetText()函数
FText txt = TxtboxCmdInput-&amp;gt;GetText();  </description>
    </item>
    
    <item>
      <title>[UE4]蓝图设置UMG组件可见与隐藏</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E8%AE%BE%E7%BD%AEumg%E7%BB%84%E4%BB%B6%E5%8F%AF%E8%A7%81%E4%B8%8E%E9%9A%90%E8%97%8F/</link>
      <pubDate>Sat, 10 Sep 2016 00:08:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E8%93%9D%E5%9B%BE%E8%AE%BE%E7%BD%AEumg%E7%BB%84%E4%BB%B6%E5%8F%AF%E8%A7%81%E4%B8%8E%E9%9A%90%E8%97%8F/</guid>
      <description>关键字：Set Visible、UMG
以下逻辑是：判断某个umg组件的可见性，如果是隐藏则设置为可见，如果是可见则设置为隐藏 （查看大图，请复制图片链接在新窗口中打开）   </description>
    </item>
    
    <item>
      <title>[UE4]FVector.Normalize()获取某方向上的单位向量</title>
      <link>http://www.dawnarc.com/2016/09/ue4fvector.normalize%E8%8E%B7%E5%8F%96%E6%9F%90%E6%96%B9%E5%90%91%E4%B8%8A%E7%9A%84%E5%8D%95%E4%BD%8D%E5%90%91%E9%87%8F/</link>
      <pubDate>Tue, 06 Sep 2016 21:49:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4fvector.normalize%E8%8E%B7%E5%8F%96%E6%9F%90%E6%96%B9%E5%90%91%E4%B8%8A%E7%9A%84%E5%8D%95%E4%BD%8D%E5%90%91%E9%87%8F/</guid>
      <description>Keyworlds：单位向量、方向向量、unit vector
FVector::Normalize()函数的意思是将当前向量变成单位向量（方向与原向量相同，但是长度为1）。
使用场景： 1， 比如你需要做一些平滑计算的时候，那么可能会用到DeltaSeconds，你想包装你的向量与DeltaSeconds运算时始终保持恒定，那么，可以将该向量Normalize。 2， 想获得两个点之间的单位向量，一边把该单位向量当作MovementComponent的速率。
与之对应的两种蓝图方式：
1，Get Direction Vector   2，与C++函数名同名的Normalize节点</description>
    </item>
    
    <item>
      <title>[UE4]Change Actor‘s Rotation</title>
      <link>http://www.dawnarc.com/2016/09/ue4change-actors-rotation/</link>
      <pubDate>Tue, 06 Sep 2016 21:26:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4change-actors-rotation/</guid>
      <description>立即修改：
MyCharacter-&amp;gt;SetActorRotation(FRotator(0.f, 180.f, 0.f));  平滑修改：
void TickFun() { FVector MyLoc = MyCharacter-&amp;gt;GetActorLocation(); FVector TargetLoc = FVector(100.f, 100.f, 0.f); FVector Dir = (TargetLoc - MyLoc); Dir.Normalize(); MyCharacter-&amp;gt;SetActorRotation(FMath::Lerp(MyCharacter-&amp;gt;GetActorRotation(), Dir.Rotation(), 0.05f)); }  参考自：https://answers.unrealengine.com/questions/223469/smoothly-rotate-object.html</description>
    </item>
    
    <item>
      <title>[UE4]如何设置角色方向的转向速率</title>
      <link>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%A7%92%E8%89%B2%E6%96%B9%E5%90%91%E7%9A%84%E8%BD%AC%E5%90%91%E9%80%9F%E7%8E%87/</link>
      <pubDate>Sun, 04 Sep 2016 22:03:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/09/ue4%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E8%A7%92%E8%89%B2%E6%96%B9%E5%90%91%E7%9A%84%E8%BD%AC%E5%90%91%E9%80%9F%E7%8E%87/</guid>
      <description>打开角色蓝图，选中CharacterMovement，设置Rotation Rate </description>
    </item>
    
    <item>
      <title>4X策略游戏是什么意思</title>
      <link>http://www.dawnarc.com/2016/08/4x%E7%AD%96%E7%95%A5%E6%B8%B8%E6%88%8F%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</link>
      <pubDate>Wed, 31 Aug 2016 20:54:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/4x%E7%AD%96%E7%95%A5%E6%B8%B8%E6%88%8F%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</guid>
      <description>4x要素是什么？ 很多玩家朋友在看一些策略游戏时，发现老是提到什么包含了4X要素/元素，这是什么意思呢？其它这个4X要素是用来说明模拟策略游戏，注意:它不是找模拟游戏，而是找策略游戏的。
4x要素： 探索（eXlore）、扩张（eXpand）、开发（eXploit）和消灭（eXterminate）。一般在太空策略游戏中看到。
这个4X可以概括相当数量战略游戏的核心内容，也是战略游戏设计者的一种准则目标或者潜意识。
4X要素的来源解析： 一般认为，最早明确提出4X概念的是开发文明系列的席德·梅尔。其代表作文明，即是4X体系的典型作品，当文明系列大获好评后，越来越多的战略游戏开发者开始注意这种系统概念，并将之实施到自己的作品中。 确切地说，目前几乎所有战略游戏都有4X体系的内容，比如侦查地图，建立自己的地区，研发科技和发展，最后向对手开战。但其中少数游戏相对更重视自己系统上的完善度以及强调漫长的发展过程，这一系列游戏更重视4X元素的平衡，对这个体系的反映更为集中和突出，也因此更常被认为是4X游戏的代表作。
最初的4X游戏集中于回合策略这一种游戏类型上，而当即时战略作为较晚出现的策略游戏种类出现之后，几乎立刻就继承和吸收了4X的思想，比如战争迷雾和基地建设等等内容。但一般来说，即时战略更强调直观的视觉，因此不得不削减相当的策略思考成分，也包括缩短游戏中的玩家发展周期。虽然有一系列游戏声称与4X概念完美结合，但其4X体系均有不同程度上的简化，因此也令一些深度喜爱4X的玩家用户难以得到满足。 目前，4X作品涵盖了几乎所有背景的战略游戏，从历史类（文明），到科幻类（猎户座之王），以及奇幻类（魔法门之英雄无敌）。
4X要素游戏代表： 文明5 天马座传说 无尽空间</description>
    </item>
    
    <item>
      <title>如何在Steam上运行国服DOTA2</title>
      <link>http://www.dawnarc.com/2016/08/%E5%A6%82%E4%BD%95%E5%9C%A8steam%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%9B%BD%E6%9C%8Ddota2/</link>
      <pubDate>Thu, 25 Aug 2016 14:33:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/%E5%A6%82%E4%BD%95%E5%9C%A8steam%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%9B%BD%E6%9C%8Ddota2/</guid>
      <description>steam的游戏库列表中，右键dota2-》属性 输入：
-perfectworld steam  </description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]如何将std vector反序</title>
      <link>http://www.dawnarc.com/2016/08/c--%E5%A6%82%E4%BD%95%E5%B0%86std-vector%E5%8F%8D%E5%BA%8F/</link>
      <pubDate>Wed, 17 Aug 2016 15:59:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/c--%E5%A6%82%E4%BD%95%E5%B0%86std-vector%E5%8F%8D%E5%BA%8F/</guid>
      <description>使用std::reverse函数：
#include &amp;lt;vector&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;iterator&amp;gt; #include &amp;lt;algorithm&amp;gt; int main() { std::vector&amp;lt;int&amp;gt; v({1,2,3}); std::reverse(std::begin(v), std::end(v)); std::cout &amp;lt;&amp;lt; v[0] &amp;lt;&amp;lt; v[1] &amp;lt;&amp;lt; v[2] &amp;lt;&amp;lt; &#39;\n&#39;; int a[] = {4, 5, 6, 7}; std::reverse(std::begin(a), std::end(a)); std::cout &amp;lt;&amp;lt; a[0] &amp;lt;&amp;lt; a[1] &amp;lt;&amp;lt; a[2] &amp;lt;&amp;lt; a[3] &amp;lt;&amp;lt; &#39;\n&#39;; }  </description>
    </item>
    
    <item>
      <title>[UE4]用C&#43;&#43;如何动态创建TextRender</title>
      <link>http://www.dawnarc.com/2016/08/ue4%E7%94%A8c--%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAtextrender/</link>
      <pubDate>Mon, 15 Aug 2016 23:07:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4%E7%94%A8c--%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAtextrender/</guid>
      <description>关键字：Runtime、TextRender、TextRenderActor
代码：
#include &amp;quot;Engine/TextRenderActor.h&amp;quot; #include &amp;quot;Components/TextRenderComponent.h&amp;quot; void ATopDownTestGameMode::BeginPlay() { Super::BeginPlay(); Text = GetWorld()-&amp;gt;SpawnActor&amp;lt;ATextRenderActor&amp;gt;(ATextRenderActor::StaticClass(), FVector(0.f, 100, 170.f), FRotator(90.f, 180.f, 0.f)); Text-&amp;gt;GetTextRender()-&amp;gt;SetText(FText::FromString(TEXT(&amp;quot;Dynamic Text&amp;quot;))); Text-&amp;gt;GetTextRender()-&amp;gt;SetTextRenderColor(FColor::Red); Text-&amp;gt;SetActorScale3D(FVector(5.f, 5.f, 5.f)); }  </description>
    </item>
    
    <item>
      <title>[UE4]NavMesh参数设置</title>
      <link>http://www.dawnarc.com/2016/08/ue4navmesh%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Thu, 11 Aug 2016 02:38:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4navmesh%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/</guid>
      <description>1，设置NavMesh的三角形粒度和高度。Project Setting –》 Engine –》 Navigation Mesh，其中Cell Size为MavMesh三角形粒度大小，Cell Height为离地面的高度。 </description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]vector等容器的元素引用问题</title>
      <link>http://www.dawnarc.com/2016/08/c--vector%E7%AD%89%E5%AE%B9%E5%99%A8%E7%9A%84%E5%85%83%E7%B4%A0%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Aug 2016 13:57:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/c--vector%E7%AD%89%E5%AE%B9%E5%99%A8%E7%9A%84%E5%85%83%E7%B4%A0%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</guid>
      <description>示例代码：
struct TestStru { int val; TestStru() { val = -1; } }; std::vector&amp;lt;TestStru&amp;gt; TestArr; TestStru e1; TestArr.push_back(e1); TestStru&amp;amp; e = TestArr[0]; e.val = 999; TestStru e2; TestArr.push_back(e2);  变量e为数组TestArr内元素的引用，但是当执行TestArr.push_back(e2);时，e就失效了。原因是push_back的时候内部容器有扩容，另外vector的默认容量为0。</description>
    </item>
    
    <item>
      <title>[UE4]获取系统时间以及UNIX时间戳</title>
      <link>http://www.dawnarc.com/2016/08/ue4%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%BB%A5%E5%8F%8Aunix%E6%97%B6%E9%97%B4%E6%88%B3/</link>
      <pubDate>Sat, 06 Aug 2016 22:59:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%BB%A5%E5%8F%8Aunix%E6%97%B6%E9%97%B4%E6%88%B3/</guid>
      <description>蓝图：
float UKismetSystemLibrary::GetGameTimeInSeconds(UObject* WorldContextObject);  C++代码：
double now = FPlatformTime::Seconds();  </description>
    </item>
    
    <item>
      <title>[UE4]用C&#43;&#43;如何创建Box Collision</title>
      <link>http://www.dawnarc.com/2016/08/ue4%E7%94%A8c--%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BAbox-collision/</link>
      <pubDate>Wed, 03 Aug 2016 15:53:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4%E7%94%A8c--%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BAbox-collision/</guid>
      <description>在蓝图中直接编辑添加Box Collision是这样的： 如果用C++，则如下：
UBoxComponent* CollisionMesh = CreateDefaultSubobject&amp;lt;UBoxComponent&amp;gt;(TEXT(&amp;quot;TestCollision&amp;quot;)); CollisionMesh-&amp;gt;SetBoxExtent(FVector(32.f, 32.f, 96.f)); CollisionMesh-&amp;gt;bDynamicObstacle = true; CollisionMesh-&amp;gt;SetupAttachment(GetRootComponent());  注： 使用CreateDefaultSubobject必须在构造函数中，如果是其他成员函数，则形式为 UBoxComponent* MyNewBox = NewObject(this); 这里的this是一个Character指针。但这样有个问题：NewObject非构造函数中创建的Box无法及时更新NavMesh，也就是说该box在NavMesh不会被当作障碍物。
其他参考：
C++创建BoxCollision(BoxComponent)并注册Overlap和Hit事件回调函数
http://www.dawnarc.com/2017/05/ue4c--%E5%88%9B%E5%BB%BAboxcollisionboxcomponent%E5%B9%B6%E6%B3%A8%E5%86%8Coverlap%E5%92%8Chit%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</description>
    </item>
    
    <item>
      <title>[UE4]常用蓝图备忘</title>
      <link>http://www.dawnarc.com/2016/08/ue4%E5%B8%B8%E7%94%A8%E8%93%9D%E5%9B%BE%E5%A4%87%E5%BF%98/</link>
      <pubDate>Mon, 01 Aug 2016 23:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4%E5%B8%B8%E7%94%A8%E8%93%9D%E5%9B%BE%E5%A4%87%E5%BF%98/</guid>
      <description> 1，获取场景中现成的对象并修改其坐标 此蓝图为Level BP，其中Character_2、Character_3、Character_4都是之间从内容浏览器中拖进场景中的，不是spawn出来的，然后按下F键来移动3个角色的位置。 3个Character变量是从World Outliner中拖进来的： </description>
    </item>
    
    <item>
      <title>[UE4]引擎提供的避让动态障碍物的寻路功能</title>
      <link>http://www.dawnarc.com/2016/08/ue4%E5%BC%95%E6%93%8E%E6%8F%90%E4%BE%9B%E7%9A%84%E9%81%BF%E8%AE%A9%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%9A%84%E5%AF%BB%E8%B7%AF%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Mon, 01 Aug 2016 23:06:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/08/ue4%E5%BC%95%E6%93%8E%E6%8F%90%E4%BE%9B%E7%9A%84%E9%81%BF%E8%AE%A9%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%9A%84%E5%AF%BB%E8%B7%AF%E5%8A%9F%E8%83%BD/</guid>
      <description>1，设置NavigationMesh的Runtime Generation为Dynamic 2，设置缸体为动态障碍物。 先选中刚体 再勾选Dynamic Obstacle（默认是勾选的） 但这里有个问题，胶囊体上下部分是半球形的，整个胶囊体与地面接触时只有一个点，对NavMesh来说不是一个障碍物，如果要让物体成为NavMesh中的障碍物，那么需要增加一个box类型的缸体： 然后再设置这个box的属性值Dynamic Obstacle为true： 这样当有box collistion的角色在场景移动时，NavMesh会实时更新。这种操作可能对服务端性能影响较大，具体还没测过。</description>
    </item>
    
    <item>
      <title>[UE4]快捷键</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sun, 31 Jul 2016 11:49:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>打开关闭HUD： F8
编辑器中控制视角最方便的快捷键： 按住鼠标右键不放，然后再按W、A、S、D、Q、E
隐藏场景中的某个物体： 选中按H，要重新显示按Ctrl+H，
显示或隐藏NavMesh： 按P键
运行时显示NavMesh等信息： 按下单引号，会出现debug菜单选项，然后根据需要选择
切换自由视角和游戏视角 比如我们在游戏中有个固定视角，游戏运行时我想从该固定视角切换成自由视角，按下单引号，再按tab键，此时就是自由时间，如果此时想再变成游戏固定视角，再按下tab键。
材质蓝图中快速创建常用节点： 比如，我要快速创建一个Constant3Vector，不想通过右键点击或者从右边菜单中拖放。   操作方式：按下对应的字符不放，然后单击鼠标左键。例如按住3不放，然后点击鼠标左键，这样就可以快速创建一个Constant3Vector。
更多快捷键说明： http://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewportControls/index.html</description>
    </item>
    
    <item>
      <title>[UE4]如何在运行时编辑场景中的对象</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E7%BC%96%E8%BE%91%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Wed, 27 Jul 2016 22:40:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E5%9C%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E7%BC%96%E8%BE%91%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1/</guid>
      <description>比如场景中有个box，我们想在运行时查看这个box的坐标轴并且来编辑这个box，方式如下： 点击Play菜单中的Simulate选项，快捷键时Alt+S。
  </description>
    </item>
    
    <item>
      <title>[UE4]如何启用Detour Crowd AI Controller(群组移动时的绕路问题)</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8detour-crowd-ai-controller%E7%BE%A4%E7%BB%84%E7%A7%BB%E5%8A%A8%E6%97%B6%E7%9A%84%E7%BB%95%E8%B7%AF%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 27 Jul 2016 19:39:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8detour-crowd-ai-controller%E7%BE%A4%E7%BB%84%E7%A7%BB%E5%8A%A8%E6%97%B6%E7%9A%84%E7%BB%95%E8%B7%AF%E9%97%AE%E9%A2%98/</guid>
      <description> 老版本中需要手动写C++来设置CrowManagerClass，新版本中只需要在Project Settings中设置。
老版本 蓝图中叫做：Detour Crowd AI Controller C++代码中叫做：UCrowdFollowingComponent，在AIController的构造函数中设置即可
头文件：
MyAIController(const FObjectInitializer&amp;amp; ObjectInitializer = FObjectInitializer::Get());  cpp：
MyAIController::MyAIController(const FObjectInitializer&amp;amp; ObjectInitializer) : Super(ObjectInitializer.SetDefaultSubobjectClass&amp;lt;UCrowdFollowingComponent&amp;gt;(TEXT(&amp;quot;PathFollowingComponent&amp;quot;))) { }  新版本 Project Settings -》Engine -》 Navigation System -》 Crow Manager Class
  官方doc： FCrowdAvoidanceConfig https://docs.unrealengine.com/latest/INT/API/Runtime/AIModule/Navigation/FCrowdAvoidanceConfig/index.html
注意事项： 使用UCrowdFollowingComponent时必须禁用RVO避让模式，否则无法生效：
//默认是关闭的 GetCharacterMovement()-&amp;gt;bUseRVOAvoidance = false;  </description>
    </item>
    
    <item>
      <title>[UE4]如何伸缩texture(设置texture的平铺倍数)</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E4%BC%B8%E7%BC%A9texture%E8%AE%BE%E7%BD%AEtexture%E7%9A%84%E5%B9%B3%E9%93%BA%E5%80%8D%E6%95%B0/</link>
      <pubDate>Sat, 23 Jul 2016 21:34:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E5%A6%82%E4%BD%95%E4%BC%B8%E7%BC%A9texture%E8%AE%BE%E7%BD%AEtexture%E7%9A%84%E5%B9%B3%E9%93%BA%E5%80%8D%E6%95%B0/</guid>
      <description>使用texture coordinate node，并设置其UTiling和VTiling参数</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]向量积、外积、叉积</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%90%91%E9%87%8F%E7%A7%AF%E5%A4%96%E7%A7%AF%E5%8F%89%E7%A7%AF/</link>
      <pubDate>Sat, 23 Jul 2016 19:19:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%90%91%E9%87%8F%E7%A7%AF%E5%A4%96%E7%A7%AF%E5%8F%89%E7%A7%AF/</guid>
      <description>叉积 http://baike.baidu.com/view/973423.htm
点积 http://baike.baidu.com/view/2744555.htm
UE4的叉积（向量积、外积）函数：
FVector::CrossProduct()  UE4的点积（数量积、内积）函数：
FVector::DotProduct()  具体代码示例
FVector V1(100.f, 0.f, 0.f); FVector V2 = FRotator(0.f, 30.f, 0.f).RotateVector(V1); FVector V3 = FRotator(0.f, 45.f, 0.f).RotateVector(V1); FVector V4 = FRotator(0.f, 60.f, 0.f).RotateVector(V1); float d1 = FVector::DotProduct(V2, V3); float d2 = FVector::DotProduct(V3, V2); float d3 = FVector::DotProduct(V3, V4); float d4 = FVector::DotProduct(V2, V4);  其中各个值为：
V2 = (86.6f, 50.f, 0.f) V3 = (70.7f, 70.7f, 0.f) V4 = (50.f, 86.6f, 0.f) d1 = 9659.</description>
    </item>
    
    <item>
      <title>[UE4]飞行模式中的加速减速问题</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E9%A3%9E%E8%A1%8C%E6%A8%A1%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%8A%A0%E9%80%9F%E5%87%8F%E9%80%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 18 Jul 2016 21:27:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E9%A3%9E%E8%A1%8C%E6%A8%A1%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%8A%A0%E9%80%9F%E5%87%8F%E9%80%9F%E9%97%AE%E9%A2%98/</guid>
      <description>CharacterMovement默认有一个加速效果（属性值为MaxAcceleration，默认为2048，表示加速率），如果MovementMode设置为Walking模式，当调用Controller-&amp;gt;StopMovement()来立即停止移动； 但是Flying Mode时，即使不再执行AddMovementInput()，Actor仍然会继续滑行一段距离，如果希望此时立即停止不滑行，需要将减速速率（默认为0）设置为加速速率的大小：
GetCharacterMovement()-&amp;gt;BrakingDecelerationFlying = GetCharacterMovement()-&amp;gt;MaxAcceleration;  </description>
    </item>
    
    <item>
      <title>[UE4]设置MovementMode时的注意事项</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E8%AE%BE%E7%BD%AEmovementmode%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Sun, 17 Jul 2016 13:26:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E8%AE%BE%E7%BD%AEmovementmode%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>如果一个Actor被Spawn出来之后，其MovementMode默认状态是Walking，如果此时Spawn的位置在空中，在没有Controller对其Possess的情况下，其静止在空中，当Possess之后，MovementMode会自动变为Falling，如果想让其继续停留在空中(比如飞行类的角色)，此时再手动将其MovementMode设置为Flying。绝对不能在possess之前设置，否则设置状态会被引擎修改掉。</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]基于某点向某方向上投射指定距离后的坐标计算</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E4%BA%8E%E6%9F%90%E7%82%B9%E5%90%91%E6%9F%90%E6%96%B9%E5%90%91%E4%B8%8A%E6%8A%95%E5%B0%84%E6%8C%87%E5%AE%9A%E8%B7%9D%E7%A6%BB%E5%90%8E%E7%9A%84%E5%9D%90%E6%A0%87%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Wed, 06 Jul 2016 19:54:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E4%BA%8E%E6%9F%90%E7%82%B9%E5%90%91%E6%9F%90%E6%96%B9%E5%90%91%E4%B8%8A%E6%8A%95%E5%B0%84%E6%8C%87%E5%AE%9A%E8%B7%9D%E7%A6%BB%E5%90%8E%E7%9A%84%E5%9D%90%E6%A0%87%E8%AE%A1%E7%AE%97/</guid>
      <description>代码：
float Len = FMath::Sqrt(100 * 100 + 100 * 100); FVector Loc = FVector(100.f, 100.f, 0.f) + FRotator(0.f, 45.f, 0.f).Vector() * Len;  结果：
Loc = {X=200.f, Y=200.f, Z=0.f}  =================================
例子2：
float Len = FMath::Sqrt(100 * 100 + 100 * 100); FVector Loc1 = FVector(0.f, 0.f, 0.f) + FRotator(0.f, 45.f, 0.f).Vector() * Len; FVector Loc2 = FVector(0.f, 0.f, 0.f) + FRotator(0.f, 135.f, 0.f).Vector() * Len; FVector Loc3 = FVector(0.</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]已知方向向量，求该向量与空间坐标轴的夹角</title>
      <link>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%B7%B2%E7%9F%A5%E6%96%B9%E5%90%91%E5%90%91%E9%87%8F%E6%B1%82%E8%AF%A5%E5%90%91%E9%87%8F%E4%B8%8E%E7%A9%BA%E9%97%B4%E5%9D%90%E6%A0%87%E8%BD%B4%E7%9A%84%E5%A4%B9%E8%A7%92/</link>
      <pubDate>Wed, 06 Jul 2016 17:30:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%B7%B2%E7%9F%A5%E6%96%B9%E5%90%91%E5%90%91%E9%87%8F%E6%B1%82%E8%AF%A5%E5%90%91%E9%87%8F%E4%B8%8E%E7%A9%BA%E9%97%B4%E5%9D%90%E6%A0%87%E8%BD%B4%E7%9A%84%E5%A4%B9%E8%A7%92/</guid>
      <description>原始的数学公式不列举了，需要的话找个Math库看下源码。这里以UE4的API说明：
情况一：已知两个空间向量的角角 已知空间中两个点FVector V1, V2，方向向量V3 = V2 - V1，求V3与空间坐标的夹角：
FRotator R = (V2 - V1).Rotation();  情况二：单个向量与世界坐标的夹角 已知方向向量Vector V1，求V1与空间坐标轴的夹角Rotator R1：即将Vector转换为Rotator
FRotator R1 = FVector(100.f, 100.f, 0.f).Rotation(); FRotator R2 = FVector(-100.f, -100.f, 0.f).Rotation(); FRotator R3 = FVector(100.f, 0.f, 0.f).Rotation(); FRotator R4 = FVector(0.f, 100.f, 0.f).Rotation();  结果分别是：
R1 = {Pitch=0.0 Yaw=45.0 Roll=0.0 } R2 = {Pitch=0.0 Yaw=-135.0 Roll=0.0 } R3 = {Pitch=0.0 Yaw=0.0 Roll=0.0 } R4 = {Pitch=0.0 Yaw=90.0 Roll=0.0 }  FVector::Rotation()函数的内部实现（局部）：</description>
    </item>
    
    <item>
      <title>Visual Studio 2015 Enterprise Update3 ISO download</title>
      <link>http://www.dawnarc.com/2016/07/visual-studio-2015-enterprise-update3-iso-download/</link>
      <pubDate>Fri, 01 Jul 2016 03:39:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/07/visual-studio-2015-enterprise-update3-iso-download/</guid>
      <description>下载地址：
http://download.microsoft.com/download/8/4/3/843ec655-1b67-46c3-a7a4-10a1159cfa84/vs2015.3.ent_enu.iso</description>
    </item>
    
    <item>
      <title>[UE4]如何锁定帧率</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E9%94%81%E5%AE%9A%E5%B8%A7%E7%8E%87/</link>
      <pubDate>Sat, 25 Jun 2016 12:50:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E9%94%81%E5%AE%9A%E5%B8%A7%E7%8E%87/</guid>
      <description>Project Settings -&amp;gt; Engine -&amp;gt; General Settings -&amp;gt; Use Fixed Frame Rate</description>
    </item>
    
    <item>
      <title>[UE4]线性代数与空间几何相关的API</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%A9%BA%E9%97%B4%E5%87%A0%E4%BD%95%E7%9B%B8%E5%85%B3%E7%9A%84api/</link>
      <pubDate>Thu, 23 Jun 2016 23:35:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%A9%BA%E9%97%B4%E5%87%A0%E4%BD%95%E7%9B%B8%E5%85%B3%E7%9A%84api/</guid>
      <description>检测一个点是否在一个多边形(或矩形)的内部(2D和3D)
FBox2D::IsInside(const FVector2D&amp;amp; TestPoint) FBox::IsInside(const FVector&amp;amp; TestPoint) FIntRect::Contains( FIntPoint P )  </description>
    </item>
    
    <item>
      <title>[线性代数]如何检测某个点是否在多边形内部</title>
      <link>http://www.dawnarc.com/2016/06/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E6%9F%90%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%86%85%E9%83%A8/</link>
      <pubDate>Thu, 23 Jun 2016 19:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E6%9F%90%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%86%85%E9%83%A8/</guid>
      <description>http://www.geeksforgeeks.org/how-to-check-if-a-given-point-lies-inside-a-polygon/
http://math.stackexchange.com/questions/190111/how-to-check-if-a-point-is-inside-a-rectangle
http://stackoverflow.com/questions/217578/how-can-i-determine-whether-a-2d-point-is-within-a-polygon#</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]如何检测某个点是否在矩形范围内</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E6%9F%90%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E7%9F%A9%E5%BD%A2%E8%8C%83%E5%9B%B4%E5%86%85/</link>
      <pubDate>Thu, 23 Jun 2016 15:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E6%9F%90%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E7%9F%A9%E5%BD%A2%E8%8C%83%E5%9B%B4%E5%86%85/</guid>
      <description>代码：
FBox2D::IsInside(const FVector2D&amp;amp; TestPoint) FBox::IsInside(const FVector&amp;amp; TestPoint) FIntRect::Contains( FIntPoint P )  </description>
    </item>
    
    <item>
      <title>[UE4]CharacterMoveComponent中各个属性的意义及默认值</title>
      <link>http://www.dawnarc.com/2016/06/ue4charactermovecomponent%E4%B8%AD%E5%90%84%E4%B8%AA%E5%B1%9E%E6%80%A7%E7%9A%84%E6%84%8F%E4%B9%89%E5%8F%8A%E9%BB%98%E8%AE%A4%E5%80%BC/</link>
      <pubDate>Wed, 22 Jun 2016 16:10:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4charactermovecomponent%E4%B8%AD%E5%90%84%E4%B8%AA%E5%B1%9E%E6%80%A7%E7%9A%84%E6%84%8F%E4%B9%89%E5%8F%8A%E9%BB%98%E8%AE%A4%E5%80%BC/</guid>
      <description>AirControl: 当Jumping或者Falling的时候，侧向移动的速度。默认为0.05，1表示以最大速度侧向移动，0表示禁止侧向移动
CharacterMovement 0x000002244572a400 (Name=0x0000022474e0aab8 &amp;quot;CharMoveComp&amp;quot;) UCharacterMovementComponent * {UE4Editor-Engine.dll!UCharacterMovementComponent} [UCharacterMovementComponent] (Name=0x0000022474e0aab8 &amp;quot;CharMoveComp&amp;quot;) UE4Editor-Engine.dll!UCharacterMovementComponent UPawnMovementComponent (Name=0x0000022474e0aab8 &amp;quot;CharMoveComp&amp;quot;) UPawnMovementComponent IRVOAvoidanceInterface {...} IRVOAvoidanceInterface INetworkPredictionInterface {...} INetworkPredictionInterface CharacterOwner 0x000002244571ab00 (Name=0x000002240ef84228 &amp;quot;pawn_shuangtouguai_charBP_C&amp;quot;_0) ACharacter * {AWarriorCharacter} GravityScale 1.00000000 float MaxStepHeight 45.0000000 float JumpZVelocity 420.000000 float JumpOffJumpZFactor 0.500000000 float WalkableFloorAngle 44.7650833 float WalkableFloorZ 0.710000038 float MovementMode MOVE_None (0) TEnumAsByte&amp;lt;enum EMovementMode&amp;gt; CustomMovementMode 0 &#39;\0&#39; unsigned char OldBaseLocation {X=0.000000000 Y=0.000000000 Z=0.000000000 } FVector OldBaseQuat {X=0.000000000 Y=0.000000000 Z=0.000000000 ...} FQuat GroundFriction 8.</description>
    </item>
    
    <item>
      <title>[UE4]寻路移动结束时的回调事件</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%AF%BB%E8%B7%AF%E7%A7%BB%E5%8A%A8%E7%BB%93%E6%9D%9F%E6%97%B6%E7%9A%84%E5%9B%9E%E8%B0%83%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Tue, 21 Jun 2016 12:05:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%AF%BB%E8%B7%AF%E7%A7%BB%E5%8A%A8%E7%BB%93%E6%9D%9F%E6%97%B6%E7%9A%84%E5%9B%9E%E8%B0%83%E4%BA%8B%E4%BB%B6/</guid>
      <description>代码：
UPathFollowingComponent::OnMoveFinished  </description>
    </item>
    
    <item>
      <title>[UE4]NavigationSystem寻路相关的API</title>
      <link>http://www.dawnarc.com/2016/06/ue4navigationsystem%E5%AF%BB%E8%B7%AF%E7%9B%B8%E5%85%B3%E7%9A%84api/</link>
      <pubDate>Tue, 21 Jun 2016 12:02:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4navigationsystem%E5%AF%BB%E8%B7%AF%E7%9B%B8%E5%85%B3%E7%9A%84api/</guid>
      <description>检测某个坐标点是否在navmesh内，即可以作为寻路的坐标点。 UNavigationSystem::TestPathSync 实例用法：
UNavigationSystem* const NavSys = GetWorld()-&amp;gt;GetNavigationSystem(); const ANavigationData* NavData = NavSys-&amp;gt;GetNavDataForProps(YourCharacter-&amp;gt;GetNavAgentPropertiesRef()); FPathFindingQuery Query1(YourCharacter, *NavData, YourCharacter-&amp;gt;GetNavAgentLocation(), TestLocation); bool qrs1 = NavSys-&amp;gt;TestPathSync(Query1);  UNavigationSystem::FindPathSync也可以判断，但是他会返回寻路结果，效率上没有TestPathSync快。 其他的API还有：
UNavigationSystem::ProjectPointToNavigation  </description>
    </item>
    
    <item>
      <title>[UE4]Movement相关的API</title>
      <link>http://www.dawnarc.com/2016/06/ue4movement%E7%9B%B8%E5%85%B3%E7%9A%84api/</link>
      <pubDate>Sun, 19 Jun 2016 17:33:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4movement%E7%9B%B8%E5%85%B3%E7%9A%84api/</guid>
      <description> 如何停止正在移动的Pawn AController::StopMovement()  修改重力加速度(Gravity)  编辑器中设置全局重力加速度
Project Settings -》 Engine -》 Physics -》 Default Physics Settings -》 Default Gravity Z。
 运行时runtime期间设置全局重力加速度：
AWorldSettings* MyWorldSetting=GetWorldSettings(); MyWorldSetting-&amp;gt;bGlobalGravitySet=true; MyWorldSetting-&amp;gt;GlobalGravityZ = 900.f;  设置单个角色的重力加速度（倍率）
MyCharacter-&amp;gt;GetCharacterMovement()-&amp;gt;GravityScale = 100.f   </description>
    </item>
    
    <item>
      <title>[UE4]PlayerController常用API</title>
      <link>http://www.dawnarc.com/2016/06/ue4playercontroller%E5%B8%B8%E7%94%A8api/</link>
      <pubDate>Sun, 19 Jun 2016 10:31:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4playercontroller%E5%B8%B8%E7%94%A8api/</guid>
      <description>获取当前的Pawn 一个Controller（包括AIController）只能同时possess一个Pawn。所以GetPawn()返回的就是当前控制的Pawn：
APawn* Pawn = PC-&amp;gt;GetPawn();  Screen相关 //Convert 2D screen position to World Space 3D position and direction. Returns false if unable to determine value. bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, FVector&amp;amp; WorldLocation, FVector&amp;amp; WorldDirection) const; /** Returns hit results from doing a collision query at a certain location on the screen */ bool GetHitResultAtScreenPosition(const FVector2D ScreenPosition, const ECollisionChannel TraceChannel, const FCollisionQueryParams&amp;amp; CollisionQueryParams, FHitResult&amp;amp; HitResult) const; /** * Returns the PlayerState associated with the player at the specified index.</description>
    </item>
    
    <item>
      <title>[UE4]Viewport Resized Event(视图窗口的尺寸修改变化时的回调事件)</title>
      <link>http://www.dawnarc.com/2016/06/ue4viewport-resized-event%E8%A7%86%E5%9B%BE%E7%AA%97%E5%8F%A3%E7%9A%84%E5%B0%BA%E5%AF%B8%E4%BF%AE%E6%94%B9%E5%8F%98%E5%8C%96%E6%97%B6%E7%9A%84%E5%9B%9E%E8%B0%83%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sat, 18 Jun 2016 00:25:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4viewport-resized-event%E8%A7%86%E5%9B%BE%E7%AA%97%E5%8F%A3%E7%9A%84%E5%B0%BA%E5%AF%B8%E4%BF%AE%E6%94%B9%E5%8F%98%E5%8C%96%E6%97%B6%E7%9A%84%E5%9B%9E%E8%B0%83%E4%BA%8B%E4%BB%B6/</guid>
      <description>keywords: Viewport, Resize, Callback, Event
1，在BeginPlay()函数中添加绑定事件：
GEngine-&amp;gt;GameViewport-&amp;gt;Viewport-&amp;gt;ViewportResizedEvent.AddUObject(this, &amp;amp;MyObj::MyFunction);  2，编写回调逻辑。注意，回调函数必须包含FViewport*和uint32两个参数
void MyObj::MyFunction(FViewport* ViewPort, uint32 val) { }  </description>
    </item>
    
    <item>
      <title>[UE4]移动物体的几种方法</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E7%A7%BB%E5%8A%A8%E7%89%A9%E4%BD%93%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 17 Jun 2016 13:17:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E7%A7%BB%E5%8A%A8%E7%89%A9%E4%BD%93%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>keywords: UE4、Movement
作者：@玄冬Wong
1，Actor-&amp;gt;SetActorLocation
Actor-&amp;gt;SetActorLocation()  2，Velocity
ACharacter-&amp;gt;GetCharacterMovement()-&amp;gt;Velocity += FVector(5.f, 5.f, 0.f);  3，将一个Controller（PlayerController或者AIController）possess到一个Actor上，然后调用：
Controller-&amp;gt;MoveTo();  4，将一个Controller（PlayerController或者AIController）possess到一个Actor上，然后调用
GetWorld()-&amp;gt;GetNavigationSystem()-&amp;gt;SimpleMoveToLocation(Controller, DestLocation);  注意：如果使用Controller-&amp;gt;MoveTo或者使用NavigationSystem的Move函数，前提条件是你使用了Navigation组件并build了地形，否则无效。
 5，APawn-&amp;gt;AddMovementInput
APawn-&amp;gt;AddMovementInput(FVector WorldDirection, float ScaleValue = 1.0f, bool bForce = false);  其中WorldDirection是方向，ScaleValue是速率倍速，bForce表示是否忽略Controller中的IgnoreMoveInput属性值，强制移动。
6，UCharacterMovementComponent::AddImpulse
void UCharacterMovementComponent::AddImpulse( FVector Impulse, bool bVelocityChange )  AddImpulse一般用来做投掷、爆炸、击飞等物理效果。添加的是一个瞬间的力，之后就不需要每帧做处理了。 以实现一个击飞效果为例，要有明显击飞效果，Impulse 值要1000以上，且 bVelocityChange 设置为 true 。

7，UCharacterMovementComponent::AddForce
void UCharacterMovementComponent::AddForce( FVector Force )  如果想让物体保持移动，需要每帧都执行AddForce()函数，也就说如果加速度是实时变化的，那么就可以用AddForce。 两者的区别可以参考：
https://forums.unrealengine.com/showthread.php?29496-Addforce-and-addimpulse
AddForce accounts for delta time and should be used for applying force over more than one frame, AddImpulse does not account for delta time and should be used for single &#39;pushes&#39;, like from an explosion or being thrown by a player.</description>
    </item>
    
    <item>
      <title>[TortoiseGit]fetch和merge操作</title>
      <link>http://www.dawnarc.com/2016/06/tortoisegitfetch%E5%92%8Cmerge%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 16 Jun 2016 20:14:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/tortoisegitfetch%E5%92%8Cmerge%E6%93%8D%E4%BD%9C/</guid>
      <description>右键菜单Merge： Branch选择：FETCH_HEAD</description>
    </item>
    
    <item>
      <title>[UE4]如何获取两点之间的寻路路径(Vector数组)</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%B8%A4%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E5%AF%BB%E8%B7%AF%E8%B7%AF%E5%BE%84vector%E6%95%B0%E7%BB%84/</link>
      <pubDate>Mon, 13 Jun 2016 12:18:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%B8%A4%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E5%AF%BB%E8%B7%AF%E8%B7%AF%E5%BE%84vector%E6%95%B0%E7%BB%84/</guid>
      <description>代码：
UNavigationPath *tpath; UNavigationSystem* NavSys = UNavigationSystem::GetCurrent(GetWorld()); tpath = NavSys-&amp;gt;FindPathToLocationSynchronously(GetWorld(), GetActorLocation(), end_point); if (tpath != NULL) { for (int pointiter = 0; pointiter &amp;lt; tpath-&amp;gt;PathPoints.Num(); pointiter++) { DrawDebugSphere(GetWorld(), tpath-&amp;gt;PathPoints[pointiter], 10.0f, 12, FColor(255, 0, 0)); } }  参考：https://answers.unrealengine.com/questions/102126/how-do-i-get-the-navigation-path-to-a-point.html</description>
    </item>
    
    <item>
      <title>[UE4]客户端无法调用FindPathToLocationSynchronously函数的问题</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8findpathtolocationsynchronously%E5%87%BD%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 13 Jun 2016 12:02:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8findpathtolocationsynchronously%E5%87%BD%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>如果client-side执行UNavigationSystem::FindPathToLocationSynchronously()，会返回错误：
Error Accessed None &#39;CallFunc_FindPathToLocationSynchronously_ReturnValue2&#39; from node ReturnNode in blueprint GameController  原因： client-side默认关闭了寻路功能，需要启动，修改设置：Project Settings &amp;gt; Navigation System &amp;gt; bAllowClientSideNavigation
参考：https://answers.unrealengine.com/questions/222353/find-path-to-location-synchronously-not-working-on.html</description>
    </item>
    
    <item>
      <title>[UE4]如何制作RTS游戏中的角色脚下圆环</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9Crts%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2%E8%84%9A%E4%B8%8B%E5%9C%86%E7%8E%AF/</link>
      <pubDate>Sun, 12 Jun 2016 10:24:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9Crts%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2%E8%84%9A%E4%B8%8B%E5%9C%86%E7%8E%AF/</guid>
      <description>1，准备好贴图 2，新建一个材质蓝图 3，在蓝图中新建个Texture Sample节点，并设置为之前准备的贴图 4，将材质的Blend Mode设置为Translucent半透明模式 5，设置好材质的BaseColor和Opacity 6，然后新建一个Actor蓝图 7，在actor蓝图中新建个Scene组件 8，将新建个Scene组件拖拽到Root根节点中，以替换原来默认根节点 10，然后再新建一个StaticMesh组件 11，然后将这个StaticMesh组件的Mesh设置为一个地砖形状的模型 12，同时讲StaticMesh的材质设置为之前新建个材质 13，然后将actor蓝图设置为Movable 14，这样设置完成了，之后就可以将这个actor蓝图spawn到场景中并attach到人物的身上，并设置后相对坐标即可 </description>
    </item>
    
    <item>
      <title>foobar2000 1.3如何打开configuration目录</title>
      <link>http://www.dawnarc.com/2016/06/foobar2000-1.3%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80configuration%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Thu, 09 Jun 2016 15:14:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/foobar2000-1.3%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80configuration%E7%9B%AE%E5%BD%95/</guid>
      <description>按住shift键不放，然后点击菜单栏的“File”，就会出现默认隐藏的选项，包括“configuration files”</description>
    </item>
    
    <item>
      <title>[UE4][线性代数]物体围绕某个点旋转一定角度</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%89%A9%E4%BD%93%E5%9B%B4%E7%BB%95%E6%9F%90%E4%B8%AA%E7%82%B9%E6%97%8B%E8%BD%AC%E4%B8%80%E5%AE%9A%E8%A7%92%E5%BA%A6/</link>
      <pubDate>Wed, 08 Jun 2016 18:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%89%A9%E4%BD%93%E5%9B%B4%E7%BB%95%E6%9F%90%E4%B8%AA%E7%82%B9%E6%97%8B%E8%BD%AC%E4%B8%80%E5%AE%9A%E8%A7%92%E5%BA%A6/</guid>
      <description>2D上的点围绕某另一个点旋转： If you rotate point (px, py) around point (ox, oy) by angle theta you&amp;rsquo;ll get:
p&#39;x = cos(theta) * (px-ox) - sin(theta) * (py-oy) + ox p&#39;y = sin(theta) * (px-ox) + cos(theta) * (py-oy) + oy  this is an easy way to rotate a point in 2D.
======================================= http://stackoverflow.com/questions/13275719/rotate-a-3d-point-around-another-one Try to use vector math. decide in which order you rotate, first along x, then along y perhaps.</description>
    </item>
    
    <item>
      <title>[Windows]win10 C盘可以删除的文件</title>
      <link>http://www.dawnarc.com/2016/06/windowswin10-c%E7%9B%98%E5%8F%AF%E4%BB%A5%E5%88%A0%E9%99%A4%E7%9A%84%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 08 Jun 2016 10:03:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/windowswin10-c%E7%9B%98%E5%8F%AF%E4%BB%A5%E5%88%A0%E9%99%A4%E7%9A%84%E6%96%87%E4%BB%B6/</guid>
      <description>Download目录：
C:\Windows\SoftwareDistribution\Download  C盘中可以删除的VisualStudio相关的文件：
C:\Users\用户名\AppData\Local\Microsoft\VisualStudio\14.0\Extensions\izpfmoxb.f22\Data\vs14_XXXX  更新VS2015 update2以后，这个目录下的文件有8个多g，删掉后不影响VS运行
这个下面的文件时windows更新文件和windows store的临时文件。官方建议是：可以但是不建议删除，如果c盘空间不足，可以删除。
C:\Windows\SoftwareDistribution\DeliveryOptimization  ===================================
其他方式
管理员权限的CMD中执行命令：
Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase  具体参考： https://msdn.microsoft.com/zh-cn/library/windows/hardware/dn898501(v=vs.85).aspx</description>
    </item>
    
    <item>
      <title>MSVC自带的内存泄漏检测工具</title>
      <link>http://www.dawnarc.com/2016/06/msvc%E8%87%AA%E5%B8%A6%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 05 Jun 2016 21:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/msvc%E8%87%AA%E5%B8%A6%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7/</guid>
      <description>Finding Memory Leaks Using the CRT Library https://msdn.microsoft.com/en-us/library/x98tx3cf.aspx</description>
    </item>
    
    <item>
      <title>git pull与git fetch的用法</title>
      <link>http://www.dawnarc.com/2016/06/git-pull%E4%B8%8Egit-fetch%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 05 Jun 2016 19:04:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/git-pull%E4%B8%8Egit-fetch%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>命令
git pull origin master  等价于
git fetch origin master git merge origin/master  </description>
    </item>
    
    <item>
      <title>[UE4]CharacterMovementComponent的相关属性</title>
      <link>http://www.dawnarc.com/2016/06/ue4charactermovementcomponent%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Sun, 05 Jun 2016 10:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4charactermovementcomponent%E7%9A%84%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7/</guid>
      <description>bFastAttachedMove：如果确定行走过程中的障碍物都是静止的，那么设为true可以提供寻路效率 bWantsToCrouch：希望在下一个update中停下来</description>
    </item>
    
    <item>
      <title>C风格new操作符malloc，如何调用构造函数</title>
      <link>http://www.dawnarc.com/2016/06/c%E9%A3%8E%E6%A0%BCnew%E6%93%8D%E4%BD%9C%E7%AC%A6malloc%E5%A6%82%E4%BD%95%E8%B0%83%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 04 Jun 2016 17:40:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/c%E9%A3%8E%E6%A0%BCnew%E6%93%8D%E4%BD%9C%E7%AC%A6malloc%E5%A6%82%E4%BD%95%E8%B0%83%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</guid>
      <description>原文： http://stackoverflow.com/questions/4956249/using-malloc-instead-of-new-and-calling-the-copy-constructor-when-the-object-is
You&amp;rsquo;ll need to use placement new after getting the raw memory from malloc.
void* mem = malloc(sizeof(S)); S* s = new (mem) S(); //this is the so called &amp;quot;placement new&amp;quot;  When you&amp;rsquo;re done with the object you have to make sure to explicitly call its destructor.
s-&amp;gt;~S(); free(mem);  </description>
    </item>
    
    <item>
      <title>[UE4]创建自定义PlayerController的方法(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2016/06/ue4%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89playercontroller%E7%9A%84%E6%96%B9%E6%B3%95c--/</link>
      <pubDate>Thu, 02 Jun 2016 18:15:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/ue4%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89playercontroller%E7%9A%84%E6%96%B9%E6%B3%95c--/</guid>
      <description>一种不推荐的写法：
FActorSpawnParameters SpawnInfo; SpawnInfo.Instigator = Instigator; SpawnInfo.ObjectFlags |= RF_Transient; // We never want to save player controllers into a map SpawnInfo.bDeferConstruction = true; AMyPlayerController* NewPC = GetWorld()-&amp;gt;SpawnActor&amp;lt;AMyPlayerController&amp;gt;(AMyPlayerController::StaticClass(), SpawnLocation, SpawnRotation, SpawnInfo);  参考自AGameMode::SpawnPlayerController()函数：
APlayerController* AGameMode::SpawnPlayerController(ENetRole RemoteRole, FVector const&amp;amp; SpawnLocation, FRotator const&amp;amp; SpawnRotation) { FActorSpawnParameters SpawnInfo; SpawnInfo.Instigator = Instigator; SpawnInfo.ObjectFlags |= RF_Transient; // We never want to save player controllers into a map SpawnInfo.bDeferConstruction = true; APlayerController* NewPC = GetWorld()-&amp;gt;SpawnActor&amp;lt;APlayerController&amp;gt;(PlayerControllerClass, SpawnLocation, SpawnRotation, SpawnInfo); if (NewPC) { if (RemoteRole == ROLE_SimulatedProxy) { // This is a local player because it has no authority/autonomous remote role NewPC-&amp;gt;SetAsLocalPlayerController(); } UGameplayStatics::FinishSpawningActor(NewPC, FTransform(SpawnRotation, SpawnLocation)); } return NewPC; }  推荐写法：</description>
    </item>
    
    <item>
      <title>MOBA类游戏l常用英文术语大全</title>
      <link>http://www.dawnarc.com/2016/06/moba%E7%B1%BB%E6%B8%B8%E6%88%8Fl%E5%B8%B8%E7%94%A8%E8%8B%B1%E6%96%87%E6%9C%AF%E8%AF%AD%E5%A4%A7%E5%85%A8/</link>
      <pubDate>Wed, 01 Jun 2016 08:22:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/06/moba%E7%B1%BB%E6%B8%B8%E6%88%8Fl%E5%B8%B8%E7%94%A8%E8%8B%B1%E6%96%87%E6%9C%AF%E8%AF%AD%E5%A4%A7%E5%85%A8/</guid>
      <description>以LOL为例
ELO分就是排位赛的分数（rank值）。排位赛是比较正式的模式，双方可以各自禁选三名英雄，选择英雄不能重复。排位赛胜利会提高ELO分值，失败会降低ELO分值。
KDA-杀人(Kill)死亡(Death)助攻(Assist)按照一定比率来算的一个数值 其公式为K+A/D 一般3为正常。
APC-魔法核心输出
ADC-物理核心输出
Gank：GangbangKill的缩写，游戏中的一种常用战术，指两个以上的英雄并肩作战，对敌方英雄进行偷袭、包抄、围杀。通常是以多打少，又称“抓人”。
ult：大招
gg：good game。大部分时候是在游戏结束的时候，由输的一方打出来。称赞对方打的好，自己认输的一种表现。
GPM-gold per minute每分钟金钱数
b=back=回城
u should back=你丫血太少了在这混着很危险回家喝满水再来吧
all back=全体回城
gank=抓人
stick together=一起行动
mid=中路
top=上路
bottom=下路
mis=失踪了
mia=中路不见了
regroup=集合
have ult=有大
wtf=卧槽你脑子出什么毛病了
dont fight under the tower=别在塔下和敌人作战
guys=伙计们
push=推
kill the dragon=打龙去
dont go alone=别一个人到处跑你丫会被干的很难看
noob 菜鸟
noooooooooooooooooooooooooooob 超级菜鸟(程度看o的数量)
bot 机器人，用来形容只会在路上来回走的人
solo 单，例如solo mid 单中
farm 打钱
baron，大虫子。击杀全地图友方英雄可获得强力buff。
nuke，用技能砸死某个单位。用法 nuke ryze。
creep，同farm
brb，be right back的缩写。马上回来的意思，比如和别人一条线，你回家补给或者购物时用。
jungle 打野
gj=good job 这可不是搞基哟 - - 人家夸你呢</description>
    </item>
    
    <item>
      <title>[Dlang]D与Rust的优缺点比较</title>
      <link>http://www.dawnarc.com/2016/05/dlangd%E4%B8%8Erust%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83/</link>
      <pubDate>Mon, 30 May 2016 09:17:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/dlangd%E4%B8%8Erust%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83/</guid>
      <description>原文：https://users.rust-lang.org/t/rust-vs-dlang-i-want-more-experienced/4472/19
First things first:
 You did ask this in a Rust community, so I might be biased, but I will try to be as fair as I can. This of course are my personal opinions, people have different preferences so it is hard to say black-and-white that this is good and this is bad. Take it as “this might be true, I will take this into consideration and research these points and then build on that”.</description>
    </item>
    
    <item>
      <title>[UE4]Constructor与Runtime两种环境下创建Component并Attach的方式</title>
      <link>http://www.dawnarc.com/2016/05/ue4constructor%E4%B8%8Eruntime%E4%B8%A4%E7%A7%8D%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%9B%E5%BB%BAcomponent%E5%B9%B6attach%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 29 May 2016 15:47:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4constructor%E4%B8%8Eruntime%E4%B8%A4%E7%A7%8D%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%9B%E5%BB%BAcomponent%E5%B9%B6attach%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>Component MyActor.h：
UShapeComponent * CollisionMesh;  Constructor中 Create &amp;amp; Attach MyActor.cpp：
CollisionMesh = CreateDefaultSubobject&amp;lt;UBoxComponent&amp;gt;(TEXT(&amp;quot;TestCollision&amp;quot;)); if(CollisionMesh) { CollisionMesh-&amp;gt;SetupAttachment(GetRootComponent()); }  Runtime中（非构造） Create &amp;amp; Attach MyActor.cpp：
CollisionMesh = NewObject&amp;lt;UBoxComponent&amp;gt;(this); if (CollisionMesh) { CollisionMesh-&amp;gt;RegisterComponent(); CollisionMesh-&amp;gt;AttachToComponent(GetRootComponent(), FAttachmentTransformRules::KeepRelativeTransform); }  Actor Runtime中Actor和Actor之间相互Attach Actor1 = GetWorld()-&amp;gt;SpawnActor&amp;lt;AMyActor&amp;gt;(AMyActor::StaticClass()); if(Actor1) { Actor1-&amp;gt;AttachToActor(Actor2, FAttachmentTransformRules::KeepRelativeTransform); }  Constructor中 Create &amp;amp; Attach 很少情况下需要在构造函数执行Actor之间的相关Attach。
ConstructorHelpers::FObjectFinder&amp;lt;UMaterial&amp;gt; DecalMaterialAsset(TEXT(&amp;quot;Material&#39;/Game/TopDownCPP/Blueprints/M_Cursor_Decal.M_Cursor_Decal&#39;&amp;quot;)); if (DecalMaterialAsset.Succeeded()) { DecalMaterialAsset.AttachToActor(MyActor, FAttachmentTransformRules::KeepRelativeTransform); }  AttachToComponent()为引擎的仅次于UObject的子类ActorComponent的函数； AttachToActor为引擎的仅次于UObject的子类Actor的函数。
 通过NewObject创建Component之后，执行Register的目的是为了触发OnComponentCreate等回调。不执行Create相关的Initial回调会导致后续的Attach失效。
 注意：Actor::AttachToActor()和Actor::AttachTo()为4.12的新版API，旧版本的工程迁移至4.12后，编译提示警告：
AActor::AttachRootComponentToActor已废弃，需要使用AttachToActor替换</description>
    </item>
    
    <item>
      <title>[UE4]C&#43;&#43;的K2 API和普通API有什么区别</title>
      <link>http://www.dawnarc.com/2016/05/ue4c--%E7%9A%84k2-api%E5%92%8C%E6%99%AE%E9%80%9Aapi%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 29 May 2016 15:08:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4c--%E7%9A%84k2-api%E5%92%8C%E6%99%AE%E9%80%9Aapi%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
      <description>比如我们看到很多API都有一个以K2开头的API，比如 AActor::AttachRootComponentTo对应的有一个API叫
AActor::K2_AttachRootComponentTo  这些K2的和常规API有什么区别：K2是给蓝图用调换的，如果你使用C++编码，那么这些K2的开头的不需要关心。 蓝图的前身是UDK的Kismet，所以有人认为K2是Kismet 2.0的意思，即蓝图。
参考：https://answers.unrealengine.com/questions/38197/what-is-k2-functions.html</description>
    </item>
    
    <item>
      <title>[UE4]FMallocTBB：：Malloc  scalable_malloc() crash</title>
      <link>http://www.dawnarc.com/2016/05/ue4fmalloctbbmalloc--scalable_malloc-crash/</link>
      <pubDate>Sat, 28 May 2016 21:54:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4fmalloctbbmalloc--scalable_malloc-crash/</guid>
      <description>#
UE4Editor_Core!rml::internal::Block::freePublicObject() UE4Editor_Core!rml::internal::ExtMemoryPool::initTLS() UE4Editor_Core!FMallocTBB::Free() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\private\hal\malloctbb.cpp:115] UE4Editor_Core!FMemory::Free() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\public\hal\fmemory.inl:49] UE4Editor_MyProject_784_Win64_DebugGame!operator delete[]() [d:\workspace\unreal_project\huaikongxin2\program\client\huaikxcli\source\huaikx\huaikx.cpp:15] UE4Editor_MyProject_784_Win64_DebugGame!HServices::HRecvMsg::~HRecvMsg() [d:\workspace\unreal_project\huaikongxin2\program\client\huaikxcli\source\huaikx\services\network\hrecvmsg.cpp:33] UE4Editor_MyProject_784_Win64_DebugGame!AHGameMode::Tick() [d:\workspace\unreal_project\huaikongxin2\program\client\huaikxcli\source\huaikx\graphics\world\hgamemode.cpp:121] UE4Editor_Engine!AActor::TickActor() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\actor.cpp:814] UE4Editor_Engine!FActorTickFunction::ExecuteTick() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\actor.cpp:111] UE4Editor_Engine!FTickFunctionTask::DoTask() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\ticktaskmanager.cpp:262] UE4Editor_Engine!TGraphTask&amp;lt;FTickFunctionTask&amp;gt;::ExecuteTask() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\public\async\taskgraphinterfaces.h:999] UE4Editor_Core!FNamedTaskThread::ProcessTasksNamedThread() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\private\async\taskgraph.cpp:932] UE4Editor_Core!FNamedTaskThread::ProcessTasksUntilQuit() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\private\async\taskgraph.cpp:679] UE4Editor_Core!FTaskGraphImplementation::WaitUntilTasksComplete() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\core\private\async\taskgraph.cpp:1776] UE4Editor_Engine!FTickTaskSequencer::ReleaseTickGroup() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\ticktaskmanager.cpp:530] UE4Editor_Engine!FTickTaskManager::RunTickGroup() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\ticktaskmanager.cpp:1435] UE4Editor_Engine!UWorld::RunTickGroup() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\leveltick.cpp:704] UE4Editor_Engine!UWorld::Tick() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\engine\private\leveltick.cpp:1197] UE4Editor_UnrealEd!UEditorEngine::Tick() [d:\build\++ue4+release-4.12+compile\sync\engine\source\editor\unrealed\private\editorengine.cpp:1349] UE4Editor_UnrealEd!UUnrealEdEngine::Tick() [d:\build\++ue4+release-4.12+compile\sync\engine\source\editor\unrealed\private\unrealedengine.cpp:368] UE4Editor!FEngineLoop::Tick() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\launch\private\launchengineloop.cpp:2774] UE4Editor!GuardedMain() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\launch\private\launch.cpp:148] UE4Editor!GuardedMainWrapper() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\launch\private\windows\launchwindows.cpp:126] UE4Editor!WinMain() [d:\build\++ue4+release-4.12+compile\sync\engine\source\runtime\launch\private\windows\launchwindows.cpp:200] UE4Editor!__scrt_common_main_seh() [f:\dd\vctools\crt\vcstartup\src\startup\exe_common.inl:264] kernel32 ntdll  #
UE4Editor-Core.dll!rml::internal::ExtMemoryPool::initTLS(void) UE4Editor-Core.dll!scalable_mallo() UE4Editor-Core.dll!FMallocTBB::Malloc(unsigned __int64 Size, unsigned int Alignment) Line 44 C++ UE4Editor-HuaiKX-6959-Win64-DebugGame.dll!HServices::HRecvMsg::HRecvMsg(int type, const char * data, int len) Line 20 C++ UE4Editor-HuaiKX-6959-Win64-DebugGame.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43;]内存污染检测分析工具</title>
      <link>http://www.dawnarc.com/2016/05/c--%E5%86%85%E5%AD%98%E6%B1%A1%E6%9F%93%E6%A3%80%E6%B5%8B%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sat, 28 May 2016 21:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/c--%E5%86%85%E5%AD%98%E6%B1%A1%E6%9F%93%E6%A3%80%E6%B5%8B%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</guid>
      <description>不仅可以检测内存溢出，还能检测内存泄漏以及线程竞争，但是官方只支持Clang/LLVM https://github.com/google/sanitizers</description>
    </item>
    
    <item>
      <title>[UE4]Spawn出来的actor固定在空中没有自由落体的问题</title>
      <link>http://www.dawnarc.com/2016/05/ue4spawn%E5%87%BA%E6%9D%A5%E7%9A%84actor%E5%9B%BA%E5%AE%9A%E5%9C%A8%E7%A9%BA%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%87%AA%E7%94%B1%E8%90%BD%E4%BD%93%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 28 May 2016 21:42:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4spawn%E5%87%BA%E6%9D%A5%E7%9A%84actor%E5%9B%BA%E5%AE%9A%E5%9C%A8%E7%A9%BA%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%87%AA%E7%94%B1%E8%90%BD%E4%BD%93%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>spawn出来的actor如果没有 possess controller（AIController或者PlayerController），则初始的坐标是哪个位置就会固定在这个位置，即使悬浮在空中也不会自由落体，只要给他possess一个controller就可以自由落体了。</description>
    </item>
    
    <item>
      <title>[UE4]UObject ConditionalBeginDestroy()导致无法第二次重新Load的问题</title>
      <link>http://www.dawnarc.com/2016/05/ue4uobject-conditionalbegindestroy%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E7%AC%AC%E4%BA%8C%E6%AC%A1%E9%87%8D%E6%96%B0load%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 28 May 2016 16:43:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4uobject-conditionalbegindestroy%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E7%AC%AC%E4%BA%8C%E6%AC%A1%E9%87%8D%E6%96%B0load%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>如果一个材质对象首次执行垃圾回收（ConditionalBeginDestroy是对BeginDestroy的封装，BeginDestroy是不管任何因素强制回收）：
UObject::ConditionalBeginDestroy()  或者：
UObject::BeginDestroy()  之后又需要再次加载该材质，那么调用LoadObject()时，第一个参数不能为NULL:
UObject* Obj = LoadObject&amp;lt;UObject&amp;gt;(NULL, Path);  因为这样只是在内存中扫描，不会从工程的资源Package文件中去加载(为什么首次这样执行可以加载成功？因为启动UE4Editor或程序首次启动时会加载被引用的资源)，所以这样不会加载成功，返回值为NULL。 如果要从工程资源文件中加载，那么需要手动new一个UObject，作为LoadObject的第一个参数：
UObject* Obj = NewObject&amp;lt;UTexture2D&amp;gt;(); LoadObject&amp;lt;UObject&amp;gt;(Obj, Path);  这样就能正确加载了。 但是这样有个问题：会发现，过几秒以后，再次使用这个UObject时会出现指针非法的错误，原因是刚刚自己New的UObject被引擎从内存中回收了。 如何禁止引擎对该UObject自动垃圾回收，而是我们自己手动执行？执行下AddToRoot：
Obj-&amp;gt;AddToRoot();  注：如果执行了AddToRoot()，那么退出程序前需要执行RemoveFromRoot()，否则在引擎在清理内存时会错误。(www.dawnarc.com)
如果一个UObject是SpawnActor创建出来的，那么执行Destroy()之后，再次执行Spawn是可以正常创建出来的。这点和LoadObject有区别。
UE4官方论坛上，很多帖子或资料告诉你，如果要销毁对象，需要执行ConditionalBeginDestroy()。其实这个API不是给上层逻辑使用的，如果要销毁对象，只要保证该对象失去引用或者RemoveFromRoot()即可，否则就会出现上述问题，即：Destroy之后，无法第二次Load。但是这个问题只存在编辑器运行模式下，如果是打包版本（或者Play时选择下拉菜单：Standalone），即使Destroy()，第二次LoadObject()，第一个参数为NULL，也是可以正常加载的。
 </description>
    </item>
    
    <item>
      <title>[hexo]server启动异常：YAMLException</title>
      <link>http://www.dawnarc.com/2016/05/hexoserver%E5%90%AF%E5%8A%A8%E5%BC%82%E5%B8%B8yamlexception/</link>
      <pubDate>Fri, 27 May 2016 22:00:20 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/hexoserver%E5%90%AF%E5%8A%A8%E5%BC%82%E5%B8%B8yamlexception/</guid>
      <description>错误堆栈： YAMLException: end of the stream or a document separator is expected at line 15, column 1: url: http://yoursite.com ^ at generateError (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\js-yaml\lib\js-yaml\loader.js:162:10) at throwError (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\js-yaml\lib\js-yaml\loader.js:168:9) at readDocument (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\js-yaml\lib\js-yaml\loader.js:1508:5) at loadDocuments (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\js-yaml\lib\js-yaml\loader.js:1544:5) at Object.load (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\js-yaml\lib\js-yaml\loader.js:1561:19) at Hexo.yamlHelper (E:\Protoss\Desktop\blog\node_modules\hexo\lib\plugins\renderer\yaml.js:7:15) at Hexo.tryCatcher (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\util.js:16:23) at Hexo.&amp;lt;anonymous&amp;gt; (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\method.js:15:34) at E:\Protoss\Desktop\blog\node_modules\hexo\lib\hexo\render.js:59:21 at tryCatcher (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\util.js:16:23) at Promise._settlePromiseFromHandler (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\promise.js:502:31) at Promise._settlePromise (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\promise.js:559:18) at Promise._settlePromise0 (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\promise.js:604:10) at Promise._settlePromises (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\promise.js:683:18) at Async._drainQueue (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\async.js:138:16) at Async._drainQueues (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\async.js:148:10) at Immediate.Async.drainQueues [as _onImmediate] (E:\Protoss\Desktop\blog\node_modules\hexo\node_modules\bluebird\js\release\async.</description>
    </item>
    
    <item>
      <title>[UE4]console命令行常用命令(command)</title>
      <link>http://www.dawnarc.com/2016/05/ue4console%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4command/</link>
      <pubDate>Fri, 27 May 2016 15:30:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/ue4console%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4command/</guid>
      <description>修改Camera Mode（切换摄像机视角）： Camera [modename] 其中modename的值为：
static const FName NAME_Fixed = FName(TEXT(&amp;quot;Fixed&amp;quot;)); static const FName NAME_ThirdPerson = FName(TEXT(&amp;quot;ThirdPerson&amp;quot;)); static const FName NAME_FreeCam = FName(TEXT(&amp;quot;FreeCam&amp;quot;)); static const FName NAME_FreeCam_Default = FName(TEXT(&amp;quot;FreeCam_Default&amp;quot;)); static const FName NAME_FirstPerson = FName(TEXT(&amp;quot;FirstPerson&amp;quot;));  启用debug camera：
ToggleDebugCamera  显示刚体
Show Collision  显示帧率
stat fps  显示Drawcall
stat scenerendering  显示三角面数量
stat Engine  显示单帧信息：总时长、Game耗时、Draw耗时、GPU耗时
stat unit  显示当前帧的时间信息（各种Tick, GC Mark，Update Overlaps等）：
stat game  设置渲染分辨率为默认大小的50%
r.ScreenPercentage 50  记录卡顿时间（通过t.</description>
    </item>
    
    <item>
      <title>Nginx安装简略步骤</title>
      <link>http://www.dawnarc.com/2016/05/nginx%E5%AE%89%E8%A3%85%E7%AE%80%E7%95%A5%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Thu, 26 May 2016 22:30:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/05/nginx%E5%AE%89%E8%A3%85%E7%AE%80%E7%95%A5%E6%AD%A5%E9%AA%A4/</guid>
      <description>安装依赖 $ yum install -y zlib-devel $ yum install -y pcre-devel $ yum install -y ssl $ yum install -y gcc  编译&amp;amp;安装 $ ./configure $ make $ make install  默认安装目录：
/usr/local/nginx/  nginx的bin目录：
/usr/local/nginx/sbin  link到bin目录
$ ln /usr/local/nginx/sbin/nginx /usr/local/bin/nginx  开机自动启动 如果使用编译版本，貌似配置器比较复杂。建议用yum安装，这样安装后就是自动启动且帮你link好了。</description>
    </item>
    
    <item>
      <title>[UE4]FString常用API</title>
      <link>http://www.dawnarc.com/2016/03/ue4fstring%E5%B8%B8%E7%94%A8api/</link>
      <pubDate>Tue, 01 Mar 2016 16:45:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/03/ue4fstring%E5%B8%B8%E7%94%A8api/</guid>
      <description>将int或float转换为string：
FString NewString = FString::FromInt(YourInt); FString VeryCleanString = FString::SanitizeFloat(YourFloat);  将FString转换为char*：
FString s; char *c = *s;  将string转换为int或者float：
FString TheString = &amp;quot;123.021&amp;quot;; int32 MyShinyNewInt = FCString::Atoi(*TheString); float MyShinyNewFloat = FCString::Atof(*TheString);  字符串切割：
FString a(&amp;quot;1,2,3&amp;quot;); TArray&amp;lt;FString&amp;gt; stringArray; a.ParseIntoArray(stringArray, TEXT(&amp;quot;,&amp;quot;), false);  字符串截取：
FString::Left(int count); FString::Right(int count);  字符串格式化Format：
FString Path = FString::Printf(TEXT(&amp;quot;StaticMesh&#39;/Game/Shapes/ground_shape_%d.ground_shape_%d&#39;&amp;quot;), i);  </description>
    </item>
    
    <item>
      <title>[UE4]如何播放Montage动画(C&#43;&#43;)</title>
      <link>http://www.dawnarc.com/2016/02/ue4%E5%A6%82%E4%BD%95%E6%92%AD%E6%94%BEmontage%E5%8A%A8%E7%94%BBc--/</link>
      <pubDate>Thu, 18 Feb 2016 16:40:02 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2016/02/ue4%E5%A6%82%E4%BD%95%E6%92%AD%E6%94%BEmontage%E5%8A%A8%E7%94%BBc--/</guid>
      <description>假设是在Character内执行，其中MontagePtr为Montage指针：
float DeathAnimDuration = PlayAnimMontage(MontagePtr) / (GetMesh() &amp;amp;&amp;amp; GetMesh()-&amp;gt;GlobalAnimRateScale &amp;gt; 0 ? GetMesh()-&amp;gt;GlobalAnimRateScale : 1);  如果只是播放Animation Sequence，可以使用 PlayAnimation()
if (USkeletalMeshComponent *Mesh = GetMesh()) { Mesh-&amp;gt;PlayAnimation(AnimSequence, false); }  注意：PlayAnimation可以直接来播放AnimSequence，但是不能混合动作。比如当播放完攻击动作后，无法自动回到空闲状态，但是通过Montage的Slot可以完成自动切换动作。
 C++动态播放Montage（通过AnimSequence创建） http://www.dawnarc.com/2017/12/ue4c--%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BAmontage%E5%B9%B6%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB/
其他参考： How can I play animations strictly from C++?
https://answers.unrealengine.com/questions/292345/how-can-i-play-animations-strictly-from-c.html</description>
    </item>
    
    <item>
      <title>[UE4]注意事项与笔记</title>
      <link>http://www.dawnarc.com/2015/12/ue4%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E4%B8%8E%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 06 Dec 2015 22:50:40 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2015/12/ue4%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E4%B8%8E%E7%AC%94%E8%AE%B0/</guid>
      <description>我的老博客中的UE4文章（一百八十多篇，未迁移，和此博客的UE4文章不重叠）
http://aigo.iteye.com/category/347833
【2015-12-06】
如何添加自己的C++代码
如果是添加Character C++代码，是在UE4 Editor中添加的，但是如果想添加一些与UE4引擎无关的c++代码，比如网络通讯的，或者一些工具类，必须也在UE4 Editor中添加（至少我现在用的4.10版本是这样），如果在VS中直接添加，会出现一些奇怪的编译错误。UE4 Editor中添加自定义C++代码方式如下： File -&amp;gt; New C++ Class -&amp;gt; 选择None，然后即可创建自己C++代码
UE4还写莫名其妙的bug，这些bug可能是与引擎升级有关，可参考解决办法：重新建个空的工程，然后把你现在项目的资源文件重新加进去，然后在编译和构建。
我的windows10上遇到的奇怪问题有：
(1)，项目自定义的GameMode没生效，进游戏是默认的自由摄像机控制器。这个问题我没有重新建工程，而是把level删掉重新建了一次。
(2)，打包安卓Android部署时，提示错误：DistributionSigning settings are not all set. Check the DistributionSetting
【2016-05-15】
如果项目中使用了LoadClass，那么蓝图相关的class构造函数中不要执行和实例化对象相关的操作，因为当执行LoadClass时也会把对应class的构造函数执行一遍（即使我们没有手动执行spawn或者create等函数，原因是LoadClass执行了LoadObject，而LoadObject内部又会执行ConstructorHelpers::FObjectFinder()，所以会触发class的构造函数，比如自己新建了一个UserWidget class，这个class的默认构造函数会在LoadClass时被执行一次），建议将初始化操作放在Initialize、BeginPlay等函数中。
【2016-05-17】
内存溢出导致的问题：在用FString拼接字符串的时候，抛了一个异常，但是相同的代码在另一个地方是正常的，两个地方都是非GameThread，崩掉的位置发在调用FString::FromInt()。后来用itoa代替就正常了。很可能是逻辑代码有内存溢出的bug。
【2016-06-02】
如果同一属性在蓝图编辑器中和C++中的值不同，那么蓝图中的属性值会shadow掉C++构造函数中的值。如果想让C++的值shadow蓝图的值，那么可以在C++的BeginPlay等非构造函数的初始化函数中设置属性（这里假设没有在蓝图逻辑脚本中对属性设置）。 新建蓝图时，蓝图的属性会遵循C++父类中的构造函数中的属性设置。
【2016-08-16】
用C++动态创建Component时（NewObject()），在AttachToComponent之前，需要执行RegisterComponent,否则无法Attach成功。备注：只有NewObject创建出来的Component才需要执行ResisterComponent，SpawnActor和ConstructorHelpers创建的对象则不需要。
【2016-09-23】
UE4中的C++类继承规则：只能直接继承自两种类，一种是非UObject类，一种是继承过UInterface的UObject类。如果一个类是UObject且其父类没有一个是UInterface，则无法编译通过。
如果同一批美术材质，在两个不同工程下的渲染效果不一样，比如同一个粒子特效，实际效果在两个工程中有差异，则可能是工程的设置项问题。解决办法：将两个工程中的Config/DefaultEngine.ini中的[/Script/Engine.RendererSettings】配置参数，设置统一即可。
如果spawn出来的actor执行了AddToRoot操作，那么，需要GameInstance::Shutdown()中执行RemoveFromRoot，否则退出UE4Editor时会出现崩溃。另外，在GameMode和GameInstance的BeginDestroy()中执行是不行的，因为垃圾回收过程发生在BeginDestroy()执行之前。
【2017-02-06】
用宏控制debug相关代码的开启和关闭
#if UE_BUILD_SHIPPING //debug code... #endif  UE4数据同步相关的引擎源码
Runtime\Engine\Private\ActorReplication.cpp Runtime\Engine\Private\ Replication.cpp Runtime\Engine\Public\Net \DataReplication.cpp Engine\Plugins\Messaging\TcpMessaging\Source\TcpMessaging\Private\TcpMessagingModule.cpp  FActorSpawnParameters意义
SpawnActor()有个参数：FActorSpawnParameters，这个参数中有很多属性，设置相关属性后，可以更方便的来控制这个被spawn出来的Actor，比如Owner属性：
FActorSpawnParameters Param; Param.Owner = MyActor1; AActor MyActor2 = GetWorld()-&amp;gt;SpawnActor&amp;lt;MyActor&amp;gt;(MyClass, Param); //此时的Owner就是MyActor1 MyActor Owner= MyActor2-&amp;gt;GetOwner();  获取当前角色视角的起始location和rotation</description>
    </item>
    
    <item>
      <title>[Java]使用EPoll来进行NIO处理的方法</title>
      <link>http://www.dawnarc.com/2012/01/java%E4%BD%BF%E7%94%A8epoll%E6%9D%A5%E8%BF%9B%E8%A1%8Cnio%E5%A4%84%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 05 Jan 2012 23:20:41 +0800</pubDate>
      
      <guid>http://www.dawnarc.com/2012/01/java%E4%BD%BF%E7%94%A8epoll%E6%9D%A5%E8%BF%9B%E8%A1%8Cnio%E5%A4%84%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>JDK 6.0 以及JDK 5.0 update 9 的 nio支持epoll （仅限 Linux 系统 ），对并发idle connection会有大幅度的性能提升，这就是很多网络服务器应用程序需要的。
启用的方法如下：
-Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.EPollSelectorProvider  例如在 Linux 下运行的 Tomcat 使用 NIO Connector ，那么启用 epoll 对性能的提升会有帮助。
而 Tomcat 要启用这个选项的做法是在 catalina.sh 的开头加入下面这一行
CATALINA_OPTS=&#39;-Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.EPollSelectorProvider&#39;  </description>
    </item>
    
  </channel>
</rss>